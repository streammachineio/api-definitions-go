// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/data_contracts/v1/data_contracts_v1.proto

package data_contracts

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/strmprivacy/api-definitions-go/v2/api/entities/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateDataContractRequest_ConsoleWizardStep int32

const (
	UpdateDataContractRequest_CONSOLE_WIZARD_STEP_UNSPECIFIED UpdateDataContractRequest_ConsoleWizardStep = 0
	UpdateDataContractRequest_SCHEMA                          UpdateDataContractRequest_ConsoleWizardStep = 1
	UpdateDataContractRequest_EVENT_CONTRACT                  UpdateDataContractRequest_ConsoleWizardStep = 2
	UpdateDataContractRequest_DATA_CONTRACT                   UpdateDataContractRequest_ConsoleWizardStep = 3
)

// Enum value maps for UpdateDataContractRequest_ConsoleWizardStep.
var (
	UpdateDataContractRequest_ConsoleWizardStep_name = map[int32]string{
		0: "CONSOLE_WIZARD_STEP_UNSPECIFIED",
		1: "SCHEMA",
		2: "EVENT_CONTRACT",
		3: "DATA_CONTRACT",
	}
	UpdateDataContractRequest_ConsoleWizardStep_value = map[string]int32{
		"CONSOLE_WIZARD_STEP_UNSPECIFIED": 0,
		"SCHEMA":                          1,
		"EVENT_CONTRACT":                  2,
		"DATA_CONTRACT":                   3,
	}
)

func (x UpdateDataContractRequest_ConsoleWizardStep) Enum() *UpdateDataContractRequest_ConsoleWizardStep {
	p := new(UpdateDataContractRequest_ConsoleWizardStep)
	*p = x
	return p
}

func (x UpdateDataContractRequest_ConsoleWizardStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateDataContractRequest_ConsoleWizardStep) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_enumTypes[0].Descriptor()
}

func (UpdateDataContractRequest_ConsoleWizardStep) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_enumTypes[0]
}

func (x UpdateDataContractRequest_ConsoleWizardStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateDataContractRequest_ConsoleWizardStep.Descriptor instead.
func (UpdateDataContractRequest_ConsoleWizardStep) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{6, 0}
}

// List Event Contracts, with optional filters. All filters behave as AND conditions. OR is not possible.
type ListDataContractsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The billing_id, used for authentication.
	// If absent, only public Event Contracts can be returned. If present, public and owned private Event Contracts can be returned.
	//
	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Filter on a string to do a full-text search.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// Filter on a given handle.
	Handle string `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	// Filter on a given name.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Filter public/private Event Contracts.
	PublicPrivate v1.FilterPublicPrivate `protobuf:"varint,5,opt,name=public_private,json=publicPrivate,proto3,enum=strmprivacy.api.entities.v1.FilterPublicPrivate" json:"public_private,omitempty"`
	// Filter based on labels. It is possible to skip the label value.
	// In that case, the filter only filters on the key.
	Labels []*v1.Label `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	// Filter on domains.
	Domains []string `protobuf:"bytes,8,rep,name=domains,proto3" json:"domains,omitempty"`
	// Filter on industries.
	Industries []string `protobuf:"bytes,9,rep,name=industries,proto3" json:"industries,omitempty"`
	ProjectId  string   `protobuf:"bytes,10,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListDataContractsRequest) Reset() {
	*x = ListDataContractsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataContractsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataContractsRequest) ProtoMessage() {}

func (x *ListDataContractsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataContractsRequest.ProtoReflect.Descriptor instead.
func (*ListDataContractsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
func (x *ListDataContractsRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ListDataContractsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListDataContractsRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *ListDataContractsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDataContractsRequest) GetPublicPrivate() v1.FilterPublicPrivate {
	if x != nil {
		return x.PublicPrivate
	}
	return v1.FilterPublicPrivate(0)
}

func (x *ListDataContractsRequest) GetLabels() []*v1.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListDataContractsRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *ListDataContractsRequest) GetIndustries() []string {
	if x != nil {
		return x.Industries
	}
	return nil
}

func (x *ListDataContractsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListDataContractsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	DataContracts []*v1.DataContract `protobuf:"bytes,1,rep,name=data_contracts,json=dataContracts,proto3" json:"data_contracts,omitempty"`
	// (-- api-linter: core::0132::response-unknown-fields=disabled
	//     aip.dev/not-precedent: We really need this field because a data-contract is mutable
	// as long as the state is not active --)
	DataContractsAndChecksums []*ListDataContractsResponse_DataContractAndChecksum `protobuf:"bytes,2,rep,name=data_contracts_and_checksums,json=dataContractsAndChecksums,proto3" json:"data_contracts_and_checksums,omitempty"`
}

func (x *ListDataContractsResponse) Reset() {
	*x = ListDataContractsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataContractsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataContractsResponse) ProtoMessage() {}

func (x *ListDataContractsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataContractsResponse.ProtoReflect.Descriptor instead.
func (*ListDataContractsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{1}
}

// Deprecated: Do not use.
func (x *ListDataContractsResponse) GetDataContracts() []*v1.DataContract {
	if x != nil {
		return x.DataContracts
	}
	return nil
}

func (x *ListDataContractsResponse) GetDataContractsAndChecksums() []*ListDataContractsResponse_DataContractAndChecksum {
	if x != nil {
		return x.DataContractsAndChecksums
	}
	return nil
}

type GetDataContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Id or Data Contract Ref must be filled. If filled in both, Id takes precedence.
	Ref *v1.DataContractRef `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Id  string              `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDataContractRequest) Reset() {
	*x = GetDataContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataContractRequest) ProtoMessage() {}

func (x *GetDataContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataContractRequest.ProtoReflect.Descriptor instead.
func (*GetDataContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Do not use.
func (x *GetDataContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *GetDataContractRequest) GetRef() *v1.DataContractRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *GetDataContractRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDataContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataContract *v1.DataContract `protobuf:"bytes,1,opt,name=data_contract,json=dataContract,proto3" json:"data_contract,omitempty"`
	Checksum     string           `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *GetDataContractResponse) Reset() {
	*x = GetDataContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataContractResponse) ProtoMessage() {}

func (x *GetDataContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataContractResponse.ProtoReflect.Descriptor instead.
func (*GetDataContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{3}
}

func (x *GetDataContractResponse) GetDataContract() *v1.DataContract {
	if x != nil {
		return x.DataContract
	}
	return nil
}

func (x *GetDataContractResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type CreateDataContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId    string           `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	DataContract *v1.DataContract `protobuf:"bytes,2,opt,name=data_contract,json=dataContract,proto3" json:"data_contract,omitempty"`
	ProjectId    string           `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *CreateDataContractRequest) Reset() {
	*x = CreateDataContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataContractRequest) ProtoMessage() {}

func (x *CreateDataContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataContractRequest.ProtoReflect.Descriptor instead.
func (*CreateDataContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{4}
}

// Deprecated: Do not use.
func (x *CreateDataContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *CreateDataContractRequest) GetDataContract() *v1.DataContract {
	if x != nil {
		return x.DataContract
	}
	return nil
}

func (x *CreateDataContractRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type CreateDataContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataContract *v1.DataContract `protobuf:"bytes,1,opt,name=data_contract,json=dataContract,proto3" json:"data_contract,omitempty"`
	Checksum     string           `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *CreateDataContractResponse) Reset() {
	*x = CreateDataContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataContractResponse) ProtoMessage() {}

func (x *CreateDataContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataContractResponse.ProtoReflect.Descriptor instead.
func (*CreateDataContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDataContractResponse) GetDataContract() *v1.DataContract {
	if x != nil {
		return x.DataContract
	}
	return nil
}

func (x *CreateDataContractResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type UpdateDataContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId    string           `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	DataContract *v1.DataContract `protobuf:"bytes,2,opt,name=data_contract,json=dataContract,proto3" json:"data_contract,omitempty"`
	Checksum     string           `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// The fields to update.
	UpdateMask        *fieldmaskpb.FieldMask                      `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	ConsoleWizardStep UpdateDataContractRequest_ConsoleWizardStep `protobuf:"varint,5,opt,name=console_wizard_step,json=consoleWizardStep,proto3,enum=strmprivacy.api.data_contracts.v1.UpdateDataContractRequest_ConsoleWizardStep" json:"console_wizard_step,omitempty"`
}

func (x *UpdateDataContractRequest) Reset() {
	*x = UpdateDataContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataContractRequest) ProtoMessage() {}

func (x *UpdateDataContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataContractRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Do not use.
func (x *UpdateDataContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *UpdateDataContractRequest) GetDataContract() *v1.DataContract {
	if x != nil {
		return x.DataContract
	}
	return nil
}

func (x *UpdateDataContractRequest) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *UpdateDataContractRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateDataContractRequest) GetConsoleWizardStep() UpdateDataContractRequest_ConsoleWizardStep {
	if x != nil {
		return x.ConsoleWizardStep
	}
	return UpdateDataContractRequest_CONSOLE_WIZARD_STEP_UNSPECIFIED
}

type UpdateDataContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataContract *v1.DataContract `protobuf:"bytes,1,opt,name=data_contract,json=dataContract,proto3" json:"data_contract,omitempty"`
	Checksum     string           `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *UpdateDataContractResponse) Reset() {
	*x = UpdateDataContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataContractResponse) ProtoMessage() {}

func (x *UpdateDataContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataContractResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDataContractResponse) GetDataContract() *v1.DataContract {
	if x != nil {
		return x.DataContract
	}
	return nil
}

func (x *UpdateDataContractResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type ReviewDataContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Id or Data Contract Ref must be filled. If filled in both, Id takes precedence.
	Id              string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataContractRef *v1.DataContractRef `protobuf:"bytes,3,opt,name=data_contract_ref,json=dataContractRef,proto3" json:"data_contract_ref,omitempty"`
}

func (x *ReviewDataContractRequest) Reset() {
	*x = ReviewDataContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewDataContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDataContractRequest) ProtoMessage() {}

func (x *ReviewDataContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDataContractRequest.ProtoReflect.Descriptor instead.
func (*ReviewDataContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Do not use.
func (x *ReviewDataContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ReviewDataContractRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReviewDataContractRequest) GetDataContractRef() *v1.DataContractRef {
	if x != nil {
		return x.DataContractRef
	}
	return nil
}

type ReviewDataContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReviewDataContractResponse) Reset() {
	*x = ReviewDataContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewDataContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDataContractResponse) ProtoMessage() {}

func (x *ReviewDataContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDataContractResponse.ProtoReflect.Descriptor instead.
func (*ReviewDataContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{9}
}

type ActivateDataContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Id or Data Contract Ref must be filled. If filled in both, Id takes precedence.
	Id              string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataContractRef *v1.DataContractRef `protobuf:"bytes,3,opt,name=data_contract_ref,json=dataContractRef,proto3" json:"data_contract_ref,omitempty"`
}

func (x *ActivateDataContractRequest) Reset() {
	*x = ActivateDataContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateDataContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateDataContractRequest) ProtoMessage() {}

func (x *ActivateDataContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateDataContractRequest.ProtoReflect.Descriptor instead.
func (*ActivateDataContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{10}
}

// Deprecated: Do not use.
func (x *ActivateDataContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ActivateDataContractRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActivateDataContractRequest) GetDataContractRef() *v1.DataContractRef {
	if x != nil {
		return x.DataContractRef
	}
	return nil
}

type ActivateDataContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivateDataContractResponse) Reset() {
	*x = ActivateDataContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateDataContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateDataContractResponse) ProtoMessage() {}

func (x *ActivateDataContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateDataContractResponse.ProtoReflect.Descriptor instead.
func (*ActivateDataContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{11}
}

type DeleteDataContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Id or Data Contract Ref must be filled. If filled in both, Id takes precedence.
	Id              string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId       string              `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DataContractRef *v1.DataContractRef `protobuf:"bytes,4,opt,name=data_contract_ref,json=dataContractRef,proto3" json:"data_contract_ref,omitempty"`
}

func (x *DeleteDataContractRequest) Reset() {
	*x = DeleteDataContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataContractRequest) ProtoMessage() {}

func (x *DeleteDataContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataContractRequest.ProtoReflect.Descriptor instead.
func (*DeleteDataContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{12}
}

// Deprecated: Do not use.
func (x *DeleteDataContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *DeleteDataContractRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteDataContractRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteDataContractRequest) GetDataContractRef() *v1.DataContractRef {
	if x != nil {
		return x.DataContractRef
	}
	return nil
}

type DeleteDataContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDataContractResponse) Reset() {
	*x = DeleteDataContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataContractResponse) ProtoMessage() {}

func (x *DeleteDataContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataContractResponse.ProtoReflect.Descriptor instead.
func (*DeleteDataContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{13}
}

type ArchiveDataContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Id or Data Contract Ref must be filled. If filled in both, Id takes precedence.
	Id              string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataContractRef *v1.DataContractRef `protobuf:"bytes,3,opt,name=data_contract_ref,json=dataContractRef,proto3" json:"data_contract_ref,omitempty"`
}

func (x *ArchiveDataContractRequest) Reset() {
	*x = ArchiveDataContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveDataContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveDataContractRequest) ProtoMessage() {}

func (x *ArchiveDataContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveDataContractRequest.ProtoReflect.Descriptor instead.
func (*ArchiveDataContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{14}
}

// Deprecated: Do not use.
func (x *ArchiveDataContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ArchiveDataContractRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArchiveDataContractRequest) GetDataContractRef() *v1.DataContractRef {
	if x != nil {
		return x.DataContractRef
	}
	return nil
}

type ArchiveDataContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArchiveDataContractResponse) Reset() {
	*x = ArchiveDataContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveDataContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveDataContractResponse) ProtoMessage() {}

func (x *ArchiveDataContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveDataContractResponse.ProtoReflect.Descriptor instead.
func (*ArchiveDataContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{15}
}

type ValidateDataContractsMaskedFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId    string           `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	MaskedFields *v1.MaskedFields `protobuf:"bytes,2,opt,name=masked_fields,json=maskedFields,proto3" json:"masked_fields,omitempty"`
}

func (x *ValidateDataContractsMaskedFieldsRequest) Reset() {
	*x = ValidateDataContractsMaskedFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateDataContractsMaskedFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDataContractsMaskedFieldsRequest) ProtoMessage() {}

func (x *ValidateDataContractsMaskedFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDataContractsMaskedFieldsRequest.ProtoReflect.Descriptor instead.
func (*ValidateDataContractsMaskedFieldsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{16}
}

// Deprecated: Do not use.
func (x *ValidateDataContractsMaskedFieldsRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ValidateDataContractsMaskedFieldsRequest) GetMaskedFields() *v1.MaskedFields {
	if x != nil {
		return x.MaskedFields
	}
	return nil
}

type ValidateDataContractsMaskedFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// any errors. When empty, all ok.
	Errors []*ValidateDataContractsMaskedFieldsResponse_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ValidateDataContractsMaskedFieldsResponse) Reset() {
	*x = ValidateDataContractsMaskedFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateDataContractsMaskedFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDataContractsMaskedFieldsResponse) ProtoMessage() {}

func (x *ValidateDataContractsMaskedFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDataContractsMaskedFieldsResponse.ProtoReflect.Descriptor instead.
func (*ValidateDataContractsMaskedFieldsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{17}
}

func (x *ValidateDataContractsMaskedFieldsResponse) GetErrors() []*ValidateDataContractsMaskedFieldsResponse_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetDataContractSchemaCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Id or Data Contract Ref must be filled. If filled in both Id takes precedence.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// (-- api-linter: core::0143::standardized-codes=disabled
	//     aip.dev/not-precedent: language here is a programming language, not a human spoken language. --)
	// This should be an enum
	Language        string              `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	DataContractRef *v1.DataContractRef `protobuf:"bytes,4,opt,name=data_contract_ref,json=dataContractRef,proto3" json:"data_contract_ref,omitempty"`
}

func (x *GetDataContractSchemaCodeRequest) Reset() {
	*x = GetDataContractSchemaCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataContractSchemaCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataContractSchemaCodeRequest) ProtoMessage() {}

func (x *GetDataContractSchemaCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataContractSchemaCodeRequest.ProtoReflect.Descriptor instead.
func (*GetDataContractSchemaCodeRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{18}
}

// Deprecated: Do not use.
func (x *GetDataContractSchemaCodeRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *GetDataContractSchemaCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDataContractSchemaCodeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetDataContractSchemaCodeRequest) GetDataContractRef() *v1.DataContractRef {
	if x != nil {
		return x.DataContractRef
	}
	return nil
}

type GetDataContractSchemaCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	DataSize int64  `protobuf:"varint,2,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDataContractSchemaCodeResponse) Reset() {
	*x = GetDataContractSchemaCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataContractSchemaCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataContractSchemaCodeResponse) ProtoMessage() {}

func (x *GetDataContractSchemaCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataContractSchemaCodeResponse.ProtoReflect.Descriptor instead.
func (*GetDataContractSchemaCodeResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{19}
}

func (x *GetDataContractSchemaCodeResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetDataContractSchemaCodeResponse) GetDataSize() int64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *GetDataContractSchemaCodeResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDataContractSchemaDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfluentId int32               `protobuf:"varint,1,opt,name=confluent_id,json=confluentId,proto3" json:"confluent_id,omitempty"`
	ClusterRef  *v1.KafkaClusterRef `protobuf:"bytes,2,opt,name=cluster_ref,json=clusterRef,proto3" json:"cluster_ref,omitempty"`
}

func (x *GetDataContractSchemaDefinitionRequest) Reset() {
	*x = GetDataContractSchemaDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataContractSchemaDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataContractSchemaDefinitionRequest) ProtoMessage() {}

func (x *GetDataContractSchemaDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataContractSchemaDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetDataContractSchemaDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{20}
}

func (x *GetDataContractSchemaDefinitionRequest) GetConfluentId() int32 {
	if x != nil {
		return x.ConfluentId
	}
	return 0
}

func (x *GetDataContractSchemaDefinitionRequest) GetClusterRef() *v1.KafkaClusterRef {
	if x != nil {
		return x.ClusterRef
	}
	return nil
}

type GetDataContractSchemaDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definition string `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *GetDataContractSchemaDefinitionResponse) Reset() {
	*x = GetDataContractSchemaDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataContractSchemaDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataContractSchemaDefinitionResponse) ProtoMessage() {}

func (x *GetDataContractSchemaDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataContractSchemaDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetDataContractSchemaDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{21}
}

func (x *GetDataContractSchemaDefinitionResponse) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

type SimpleSchemaDryRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleSchemaDefinition *v1.Schema_SimpleSchemaDefinition `protobuf:"bytes,1,opt,name=simple_schema_definition,json=simpleSchemaDefinition,proto3" json:"simple_schema_definition,omitempty"`
}

func (x *SimpleSchemaDryRunRequest) Reset() {
	*x = SimpleSchemaDryRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleSchemaDryRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleSchemaDryRunRequest) ProtoMessage() {}

func (x *SimpleSchemaDryRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleSchemaDryRunRequest.ProtoReflect.Descriptor instead.
func (*SimpleSchemaDryRunRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{22}
}

func (x *SimpleSchemaDryRunRequest) GetSimpleSchemaDefinition() *v1.Schema_SimpleSchemaDefinition {
	if x != nil {
		return x.SimpleSchemaDefinition
	}
	return nil
}

type SimpleSchemaDryRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleSchemaDefinition *v1.Schema_SimpleSchemaDefinition `protobuf:"bytes,1,opt,name=simple_schema_definition,json=simpleSchemaDefinition,proto3" json:"simple_schema_definition,omitempty"`
}

func (x *SimpleSchemaDryRunResponse) Reset() {
	*x = SimpleSchemaDryRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleSchemaDryRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleSchemaDryRunResponse) ProtoMessage() {}

func (x *SimpleSchemaDryRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleSchemaDryRunResponse.ProtoReflect.Descriptor instead.
func (*SimpleSchemaDryRunResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{23}
}

func (x *SimpleSchemaDryRunResponse) GetSimpleSchemaDefinition() *v1.Schema_SimpleSchemaDefinition {
	if x != nil {
		return x.SimpleSchemaDefinition
	}
	return nil
}

type ListDataContractsResponse_DataContractAndChecksum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataContract *v1.DataContract `protobuf:"bytes,1,opt,name=data_contract,json=dataContract,proto3" json:"data_contract,omitempty"`
	Checksum     string           `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *ListDataContractsResponse_DataContractAndChecksum) Reset() {
	*x = ListDataContractsResponse_DataContractAndChecksum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataContractsResponse_DataContractAndChecksum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataContractsResponse_DataContractAndChecksum) ProtoMessage() {}

func (x *ListDataContractsResponse_DataContractAndChecksum) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataContractsResponse_DataContractAndChecksum.ProtoReflect.Descriptor instead.
func (*ListDataContractsResponse_DataContractAndChecksum) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListDataContractsResponse_DataContractAndChecksum) GetDataContract() *v1.DataContract {
	if x != nil {
		return x.DataContract
	}
	return nil
}

func (x *ListDataContractsResponse_DataContractAndChecksum) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type ValidateDataContractsMaskedFieldsResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the event contract id that was giving errors
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the event contract ref that was giving errors
	DataContractRef *v1.DataContractRef `protobuf:"bytes,2,opt,name=data_contract_ref,json=dataContractRef,proto3" json:"data_contract_ref,omitempty"`
	// for non field related errors (such as no event contract, or not allowed)
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// list of errors per field
	Errors []*ValidateDataContractsMaskedFieldsResponse_Error_FieldError `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error) Reset() {
	*x = ValidateDataContractsMaskedFieldsResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDataContractsMaskedFieldsResponse_Error) ProtoMessage() {}

func (x *ValidateDataContractsMaskedFieldsResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDataContractsMaskedFieldsResponse_Error.ProtoReflect.Descriptor instead.
func (*ValidateDataContractsMaskedFieldsResponse_Error) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error) GetDataContractRef() *v1.DataContractRef {
	if x != nil {
		return x.DataContractRef
	}
	return nil
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error) GetErrors() []*ValidateDataContractsMaskedFieldsResponse_Error_FieldError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ValidateDataContractsMaskedFieldsResponse_Error_FieldError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldPattern string `protobuf:"bytes,1,opt,name=field_pattern,json=fieldPattern,proto3" json:"field_pattern,omitempty"`
	FieldType    string `protobuf:"bytes,2,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	Message      string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error_FieldError) Reset() {
	*x = ValidateDataContractsMaskedFieldsResponse_Error_FieldError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error_FieldError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDataContractsMaskedFieldsResponse_Error_FieldError) ProtoMessage() {}

func (x *ValidateDataContractsMaskedFieldsResponse_Error_FieldError) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDataContractsMaskedFieldsResponse_Error_FieldError.ProtoReflect.Descriptor instead.
func (*ValidateDataContractsMaskedFieldsResponse_Error_FieldError) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP(), []int{17, 0, 0}
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error_FieldError) GetFieldPattern() string {
	if x != nil {
		return x.FieldPattern
	}
	return ""
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error_FieldError) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *ValidateDataContractsMaskedFieldsResponse_Error_FieldError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto protoreflect.FileDescriptor

var file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDesc = []byte{
	0x0a, 0x39, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2d, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x03, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42,
	0x08, 0x72, 0x06, 0x98, 0x01, 0x00, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x64,
	0x75, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x9b, 0x03, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x1c, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x54,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x52, 0x19, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73, 0x1a,
	0x8f, 0x01, 0x0a, 0x17, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x53, 0x0a, 0x0d, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x1f, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x00, 0xd0, 0x01, 0x01, 0x52,
	0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0xcc, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x00, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x1f, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x22, 0xfc, 0x03, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x00, 0xd0, 0x01,
	0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x45, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x12, 0x7e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x77, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x65, 0x70, 0x22, 0x6b, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x65, 0x70, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x53, 0x4f,
	0x4c, 0x45, 0x5f, 0x57, 0x49, 0x5a, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x03, 0x22,
	0x92, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x22, 0xb3, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98,
	0x01, 0x00, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x58, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x1b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x18, 0x01,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x00, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66,
	0x22, 0x1e, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xdc, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x00, 0xd0, 0x01,
	0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x22,
	0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb4, 0x01,
	0x0a, 0x1a, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x00, 0xd0, 0x01, 0x01, 0x52,
	0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x66, 0x22, 0x1d, 0x0a, 0x1b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x28, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x73,
	0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x00,
	0xd0, 0x01, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x58,
	0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x6b,
	0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x92, 0x04, 0x0a, 0x29, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x1a, 0xf8, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x5d, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x75, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x1a, 0x6a, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfd, 0x01,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x18, 0x01, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98,
	0x01, 0x00, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x41, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x25, 0xfa, 0x42, 0x22, 0x72, 0x20, 0x52, 0x04, 0x6a, 0x61, 0x76, 0x61, 0x52,
	0x0a, 0x74, 0x79, 0x70, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x06, 0x70, 0x79, 0x74,
	0x68, 0x6f, 0x6e, 0x52, 0x04, 0x72, 0x75, 0x73, 0x74, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x22, 0x7f, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a,
	0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52,
	0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x66, 0x22, 0x4e, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x19,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x72, 0x79, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x18, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x16, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x18, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x16, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0xec, 0x0e, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x91, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3e, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91,
	0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x13, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa6, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xbe, 0x01,
	0x0a, 0x21, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x4b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x73,
	0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91,
	0x01, 0x0a, 0x12, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44,
	0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x7b, 0x0a, 0x24, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescOnce sync.Once
	file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescData = file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDesc
)

func file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescData)
	})
	return file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDescData
}

var file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_goTypes = []interface{}{
	(UpdateDataContractRequest_ConsoleWizardStep)(0),                   // 0: strmprivacy.api.data_contracts.v1.UpdateDataContractRequest.ConsoleWizardStep
	(*ListDataContractsRequest)(nil),                                   // 1: strmprivacy.api.data_contracts.v1.ListDataContractsRequest
	(*ListDataContractsResponse)(nil),                                  // 2: strmprivacy.api.data_contracts.v1.ListDataContractsResponse
	(*GetDataContractRequest)(nil),                                     // 3: strmprivacy.api.data_contracts.v1.GetDataContractRequest
	(*GetDataContractResponse)(nil),                                    // 4: strmprivacy.api.data_contracts.v1.GetDataContractResponse
	(*CreateDataContractRequest)(nil),                                  // 5: strmprivacy.api.data_contracts.v1.CreateDataContractRequest
	(*CreateDataContractResponse)(nil),                                 // 6: strmprivacy.api.data_contracts.v1.CreateDataContractResponse
	(*UpdateDataContractRequest)(nil),                                  // 7: strmprivacy.api.data_contracts.v1.UpdateDataContractRequest
	(*UpdateDataContractResponse)(nil),                                 // 8: strmprivacy.api.data_contracts.v1.UpdateDataContractResponse
	(*ReviewDataContractRequest)(nil),                                  // 9: strmprivacy.api.data_contracts.v1.ReviewDataContractRequest
	(*ReviewDataContractResponse)(nil),                                 // 10: strmprivacy.api.data_contracts.v1.ReviewDataContractResponse
	(*ActivateDataContractRequest)(nil),                                // 11: strmprivacy.api.data_contracts.v1.ActivateDataContractRequest
	(*ActivateDataContractResponse)(nil),                               // 12: strmprivacy.api.data_contracts.v1.ActivateDataContractResponse
	(*DeleteDataContractRequest)(nil),                                  // 13: strmprivacy.api.data_contracts.v1.DeleteDataContractRequest
	(*DeleteDataContractResponse)(nil),                                 // 14: strmprivacy.api.data_contracts.v1.DeleteDataContractResponse
	(*ArchiveDataContractRequest)(nil),                                 // 15: strmprivacy.api.data_contracts.v1.ArchiveDataContractRequest
	(*ArchiveDataContractResponse)(nil),                                // 16: strmprivacy.api.data_contracts.v1.ArchiveDataContractResponse
	(*ValidateDataContractsMaskedFieldsRequest)(nil),                   // 17: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsRequest
	(*ValidateDataContractsMaskedFieldsResponse)(nil),                  // 18: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse
	(*GetDataContractSchemaCodeRequest)(nil),                           // 19: strmprivacy.api.data_contracts.v1.GetDataContractSchemaCodeRequest
	(*GetDataContractSchemaCodeResponse)(nil),                          // 20: strmprivacy.api.data_contracts.v1.GetDataContractSchemaCodeResponse
	(*GetDataContractSchemaDefinitionRequest)(nil),                     // 21: strmprivacy.api.data_contracts.v1.GetDataContractSchemaDefinitionRequest
	(*GetDataContractSchemaDefinitionResponse)(nil),                    // 22: strmprivacy.api.data_contracts.v1.GetDataContractSchemaDefinitionResponse
	(*SimpleSchemaDryRunRequest)(nil),                                  // 23: strmprivacy.api.data_contracts.v1.SimpleSchemaDryRunRequest
	(*SimpleSchemaDryRunResponse)(nil),                                 // 24: strmprivacy.api.data_contracts.v1.SimpleSchemaDryRunResponse
	(*ListDataContractsResponse_DataContractAndChecksum)(nil),          // 25: strmprivacy.api.data_contracts.v1.ListDataContractsResponse.DataContractAndChecksum
	(*ValidateDataContractsMaskedFieldsResponse_Error)(nil),            // 26: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse.Error
	(*ValidateDataContractsMaskedFieldsResponse_Error_FieldError)(nil), // 27: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse.Error.FieldError
	(v1.FilterPublicPrivate)(0),                                        // 28: strmprivacy.api.entities.v1.FilterPublicPrivate
	(*v1.Label)(nil),                                                   // 29: strmprivacy.api.entities.v1.Label
	(*v1.DataContract)(nil),                                            // 30: strmprivacy.api.entities.v1.DataContract
	(*v1.DataContractRef)(nil),                                         // 31: strmprivacy.api.entities.v1.DataContractRef
	(*fieldmaskpb.FieldMask)(nil),                                      // 32: google.protobuf.FieldMask
	(*v1.MaskedFields)(nil),                                            // 33: strmprivacy.api.entities.v1.MaskedFields
	(*v1.KafkaClusterRef)(nil),                                         // 34: strmprivacy.api.entities.v1.KafkaClusterRef
	(*v1.Schema_SimpleSchemaDefinition)(nil),                           // 35: strmprivacy.api.entities.v1.Schema.SimpleSchemaDefinition
}
var file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_depIdxs = []int32{
	28, // 0: strmprivacy.api.data_contracts.v1.ListDataContractsRequest.public_private:type_name -> strmprivacy.api.entities.v1.FilterPublicPrivate
	29, // 1: strmprivacy.api.data_contracts.v1.ListDataContractsRequest.labels:type_name -> strmprivacy.api.entities.v1.Label
	30, // 2: strmprivacy.api.data_contracts.v1.ListDataContractsResponse.data_contracts:type_name -> strmprivacy.api.entities.v1.DataContract
	25, // 3: strmprivacy.api.data_contracts.v1.ListDataContractsResponse.data_contracts_and_checksums:type_name -> strmprivacy.api.data_contracts.v1.ListDataContractsResponse.DataContractAndChecksum
	31, // 4: strmprivacy.api.data_contracts.v1.GetDataContractRequest.ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	30, // 5: strmprivacy.api.data_contracts.v1.GetDataContractResponse.data_contract:type_name -> strmprivacy.api.entities.v1.DataContract
	30, // 6: strmprivacy.api.data_contracts.v1.CreateDataContractRequest.data_contract:type_name -> strmprivacy.api.entities.v1.DataContract
	30, // 7: strmprivacy.api.data_contracts.v1.CreateDataContractResponse.data_contract:type_name -> strmprivacy.api.entities.v1.DataContract
	30, // 8: strmprivacy.api.data_contracts.v1.UpdateDataContractRequest.data_contract:type_name -> strmprivacy.api.entities.v1.DataContract
	32, // 9: strmprivacy.api.data_contracts.v1.UpdateDataContractRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 10: strmprivacy.api.data_contracts.v1.UpdateDataContractRequest.console_wizard_step:type_name -> strmprivacy.api.data_contracts.v1.UpdateDataContractRequest.ConsoleWizardStep
	30, // 11: strmprivacy.api.data_contracts.v1.UpdateDataContractResponse.data_contract:type_name -> strmprivacy.api.entities.v1.DataContract
	31, // 12: strmprivacy.api.data_contracts.v1.ReviewDataContractRequest.data_contract_ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	31, // 13: strmprivacy.api.data_contracts.v1.ActivateDataContractRequest.data_contract_ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	31, // 14: strmprivacy.api.data_contracts.v1.DeleteDataContractRequest.data_contract_ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	31, // 15: strmprivacy.api.data_contracts.v1.ArchiveDataContractRequest.data_contract_ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	33, // 16: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsRequest.masked_fields:type_name -> strmprivacy.api.entities.v1.MaskedFields
	26, // 17: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse.errors:type_name -> strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse.Error
	31, // 18: strmprivacy.api.data_contracts.v1.GetDataContractSchemaCodeRequest.data_contract_ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	34, // 19: strmprivacy.api.data_contracts.v1.GetDataContractSchemaDefinitionRequest.cluster_ref:type_name -> strmprivacy.api.entities.v1.KafkaClusterRef
	35, // 20: strmprivacy.api.data_contracts.v1.SimpleSchemaDryRunRequest.simple_schema_definition:type_name -> strmprivacy.api.entities.v1.Schema.SimpleSchemaDefinition
	35, // 21: strmprivacy.api.data_contracts.v1.SimpleSchemaDryRunResponse.simple_schema_definition:type_name -> strmprivacy.api.entities.v1.Schema.SimpleSchemaDefinition
	30, // 22: strmprivacy.api.data_contracts.v1.ListDataContractsResponse.DataContractAndChecksum.data_contract:type_name -> strmprivacy.api.entities.v1.DataContract
	31, // 23: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse.Error.data_contract_ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	27, // 24: strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse.Error.errors:type_name -> strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse.Error.FieldError
	1,  // 25: strmprivacy.api.data_contracts.v1.DataContractsService.ListDataContracts:input_type -> strmprivacy.api.data_contracts.v1.ListDataContractsRequest
	3,  // 26: strmprivacy.api.data_contracts.v1.DataContractsService.GetDataContract:input_type -> strmprivacy.api.data_contracts.v1.GetDataContractRequest
	5,  // 27: strmprivacy.api.data_contracts.v1.DataContractsService.CreateDataContract:input_type -> strmprivacy.api.data_contracts.v1.CreateDataContractRequest
	7,  // 28: strmprivacy.api.data_contracts.v1.DataContractsService.UpdateDataContract:input_type -> strmprivacy.api.data_contracts.v1.UpdateDataContractRequest
	9,  // 29: strmprivacy.api.data_contracts.v1.DataContractsService.ReviewDataContract:input_type -> strmprivacy.api.data_contracts.v1.ReviewDataContractRequest
	11, // 30: strmprivacy.api.data_contracts.v1.DataContractsService.ActivateDataContract:input_type -> strmprivacy.api.data_contracts.v1.ActivateDataContractRequest
	13, // 31: strmprivacy.api.data_contracts.v1.DataContractsService.DeleteDataContract:input_type -> strmprivacy.api.data_contracts.v1.DeleteDataContractRequest
	15, // 32: strmprivacy.api.data_contracts.v1.DataContractsService.ArchiveDataContract:input_type -> strmprivacy.api.data_contracts.v1.ArchiveDataContractRequest
	19, // 33: strmprivacy.api.data_contracts.v1.DataContractsService.GetDataContractSchemaCode:input_type -> strmprivacy.api.data_contracts.v1.GetDataContractSchemaCodeRequest
	21, // 34: strmprivacy.api.data_contracts.v1.DataContractsService.GetDataContractSchemaDefinition:input_type -> strmprivacy.api.data_contracts.v1.GetDataContractSchemaDefinitionRequest
	17, // 35: strmprivacy.api.data_contracts.v1.DataContractsService.ValidateDataContractsMaskedFields:input_type -> strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsRequest
	23, // 36: strmprivacy.api.data_contracts.v1.DataContractsService.SimpleSchemaDryRun:input_type -> strmprivacy.api.data_contracts.v1.SimpleSchemaDryRunRequest
	2,  // 37: strmprivacy.api.data_contracts.v1.DataContractsService.ListDataContracts:output_type -> strmprivacy.api.data_contracts.v1.ListDataContractsResponse
	4,  // 38: strmprivacy.api.data_contracts.v1.DataContractsService.GetDataContract:output_type -> strmprivacy.api.data_contracts.v1.GetDataContractResponse
	6,  // 39: strmprivacy.api.data_contracts.v1.DataContractsService.CreateDataContract:output_type -> strmprivacy.api.data_contracts.v1.CreateDataContractResponse
	8,  // 40: strmprivacy.api.data_contracts.v1.DataContractsService.UpdateDataContract:output_type -> strmprivacy.api.data_contracts.v1.UpdateDataContractResponse
	10, // 41: strmprivacy.api.data_contracts.v1.DataContractsService.ReviewDataContract:output_type -> strmprivacy.api.data_contracts.v1.ReviewDataContractResponse
	12, // 42: strmprivacy.api.data_contracts.v1.DataContractsService.ActivateDataContract:output_type -> strmprivacy.api.data_contracts.v1.ActivateDataContractResponse
	14, // 43: strmprivacy.api.data_contracts.v1.DataContractsService.DeleteDataContract:output_type -> strmprivacy.api.data_contracts.v1.DeleteDataContractResponse
	16, // 44: strmprivacy.api.data_contracts.v1.DataContractsService.ArchiveDataContract:output_type -> strmprivacy.api.data_contracts.v1.ArchiveDataContractResponse
	20, // 45: strmprivacy.api.data_contracts.v1.DataContractsService.GetDataContractSchemaCode:output_type -> strmprivacy.api.data_contracts.v1.GetDataContractSchemaCodeResponse
	22, // 46: strmprivacy.api.data_contracts.v1.DataContractsService.GetDataContractSchemaDefinition:output_type -> strmprivacy.api.data_contracts.v1.GetDataContractSchemaDefinitionResponse
	18, // 47: strmprivacy.api.data_contracts.v1.DataContractsService.ValidateDataContractsMaskedFields:output_type -> strmprivacy.api.data_contracts.v1.ValidateDataContractsMaskedFieldsResponse
	24, // 48: strmprivacy.api.data_contracts.v1.DataContractsService.SimpleSchemaDryRun:output_type -> strmprivacy.api.data_contracts.v1.SimpleSchemaDryRunResponse
	37, // [37:49] is the sub-list for method output_type
	25, // [25:37] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_init() }
func file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_init() {
	if File_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataContractsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataContractsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewDataContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewDataContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateDataContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateDataContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveDataContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveDataContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateDataContractsMaskedFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateDataContractsMaskedFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataContractSchemaCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataContractSchemaCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataContractSchemaDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataContractSchemaDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleSchemaDryRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleSchemaDryRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataContractsResponse_DataContractAndChecksum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateDataContractsMaskedFieldsResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateDataContractsMaskedFieldsResponse_Error_FieldError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_depIdxs,
		EnumInfos:         file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_enumTypes,
		MessageInfos:      file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto = out.File
	file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_rawDesc = nil
	file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_goTypes = nil
	file_strmprivacy_api_data_contracts_v1_data_contracts_v1_proto_depIdxs = nil
}
