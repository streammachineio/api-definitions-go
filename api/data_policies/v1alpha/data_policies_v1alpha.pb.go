// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/data_policies/v1alpha/data_policies_v1alpha.proto

package data_policies

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataPolicy_ProcessingPlatform_PlatformType int32

const (
	DataPolicy_ProcessingPlatform_PLATFORM_TYPE_UNSPECIFIED DataPolicy_ProcessingPlatform_PlatformType = 0
	DataPolicy_ProcessingPlatform_DATABRICKS                DataPolicy_ProcessingPlatform_PlatformType = 1
	DataPolicy_ProcessingPlatform_SNOWFLAKE                 DataPolicy_ProcessingPlatform_PlatformType = 2
	DataPolicy_ProcessingPlatform_BIGQUERY                  DataPolicy_ProcessingPlatform_PlatformType = 3
)

// Enum value maps for DataPolicy_ProcessingPlatform_PlatformType.
var (
	DataPolicy_ProcessingPlatform_PlatformType_name = map[int32]string{
		0: "PLATFORM_TYPE_UNSPECIFIED",
		1: "DATABRICKS",
		2: "SNOWFLAKE",
		3: "BIGQUERY",
	}
	DataPolicy_ProcessingPlatform_PlatformType_value = map[string]int32{
		"PLATFORM_TYPE_UNSPECIFIED": 0,
		"DATABRICKS":                1,
		"SNOWFLAKE":                 2,
		"BIGQUERY":                  3,
	}
)

func (x DataPolicy_ProcessingPlatform_PlatformType) Enum() *DataPolicy_ProcessingPlatform_PlatformType {
	p := new(DataPolicy_ProcessingPlatform_PlatformType)
	*p = x
	return p
}

func (x DataPolicy_ProcessingPlatform_PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataPolicy_ProcessingPlatform_PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[0].Descriptor()
}

func (DataPolicy_ProcessingPlatform_PlatformType) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[0]
}

func (x DataPolicy_ProcessingPlatform_PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataPolicy_ProcessingPlatform_PlatformType.Descriptor instead.
func (DataPolicy_ProcessingPlatform_PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 2, 0}
}

type DataPolicy_Target_TargetType int32

const (
	DataPolicy_Target_TARGET_TYPE_UNSPECIFIED DataPolicy_Target_TargetType = 0
	DataPolicy_Target_DYNAMIC_VIEW            DataPolicy_Target_TargetType = 1
)

// Enum value maps for DataPolicy_Target_TargetType.
var (
	DataPolicy_Target_TargetType_name = map[int32]string{
		0: "TARGET_TYPE_UNSPECIFIED",
		1: "DYNAMIC_VIEW",
	}
	DataPolicy_Target_TargetType_value = map[string]int32{
		"TARGET_TYPE_UNSPECIFIED": 0,
		"DYNAMIC_VIEW":            1,
	}
)

func (x DataPolicy_Target_TargetType) Enum() *DataPolicy_Target_TargetType {
	p := new(DataPolicy_Target_TargetType)
	*p = x
	return p
}

func (x DataPolicy_Target_TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataPolicy_Target_TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[1].Descriptor()
}

func (DataPolicy_Target_TargetType) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[1]
}

func (x DataPolicy_Target_TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataPolicy_Target_TargetType.Descriptor instead.
func (DataPolicy_Target_TargetType) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 3, 0}
}

// where did the Attribute list come from?
type DataPolicy_Source_Type int32

const (
	DataPolicy_Source_TYPE_UNSPECIFIED DataPolicy_Source_Type = 0
	DataPolicy_Source_SQL_DDL          DataPolicy_Source_Type = 1
	DataPolicy_Source_DATABRICKS       DataPolicy_Source_Type = 2
	DataPolicy_Source_SNOWFLAKE        DataPolicy_Source_Type = 3
	DataPolicy_Source_BIGQUERY         DataPolicy_Source_Type = 4
)

// Enum value maps for DataPolicy_Source_Type.
var (
	DataPolicy_Source_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "SQL_DDL",
		2: "DATABRICKS",
		3: "SNOWFLAKE",
		4: "BIGQUERY",
	}
	DataPolicy_Source_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"SQL_DDL":          1,
		"DATABRICKS":       2,
		"SNOWFLAKE":        3,
		"BIGQUERY":         4,
	}
)

func (x DataPolicy_Source_Type) Enum() *DataPolicy_Source_Type {
	p := new(DataPolicy_Source_Type)
	*p = x
	return p
}

func (x DataPolicy_Source_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataPolicy_Source_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[2].Descriptor()
}

func (DataPolicy_Source_Type) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[2]
}

func (x DataPolicy_Source_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataPolicy_Source_Type.Descriptor instead.
func (DataPolicy_Source_Type) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 4, 0}
}

type DataCatalog_Type int32

const (
	DataCatalog_TYPE_UNSPECIFIED DataCatalog_Type = 0
	DataCatalog_COLLIBRA         DataCatalog_Type = 1
	DataCatalog_ODD              DataCatalog_Type = 2
	DataCatalog_DATAHUB          DataCatalog_Type = 3
)

// Enum value maps for DataCatalog_Type.
var (
	DataCatalog_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "COLLIBRA",
		2: "ODD",
		3: "DATAHUB",
	}
	DataCatalog_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"COLLIBRA":         1,
		"ODD":              2,
		"DATAHUB":          3,
	}
)

func (x DataCatalog_Type) Enum() *DataCatalog_Type {
	p := new(DataCatalog_Type)
	*p = x
	return p
}

func (x DataCatalog_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataCatalog_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[3].Descriptor()
}

func (DataCatalog_Type) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes[3]
}

func (x DataCatalog_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataCatalog_Type.Descriptor instead.
func (DataCatalog_Type) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{23, 0}
}

type ListCatalogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCatalogsRequest) Reset() {
	*x = ListCatalogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatalogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogsRequest) ProtoMessage() {}

func (x *ListCatalogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogsRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{0}
}

type ListCatalogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Catalogs []*DataCatalog `protobuf:"bytes,1,rep,name=catalogs,proto3" json:"catalogs,omitempty"`
}

func (x *ListCatalogsResponse) Reset() {
	*x = ListCatalogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatalogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogsResponse) ProtoMessage() {}

func (x *ListCatalogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogsResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{1}
}

func (x *ListCatalogsResponse) GetCatalogs() []*DataCatalog {
	if x != nil {
		return x.Catalogs
	}
	return nil
}

type ListDatabasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Catalog *DataCatalog `protobuf:"bytes,1,opt,name=catalog,proto3" json:"catalog,omitempty"`
}

func (x *ListDatabasesRequest) Reset() {
	*x = ListDatabasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatabasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesRequest) ProtoMessage() {}

func (x *ListDatabasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesRequest.ProtoReflect.Descriptor instead.
func (*ListDatabasesRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{2}
}

func (x *ListDatabasesRequest) GetCatalog() *DataCatalog {
	if x != nil {
		return x.Catalog
	}
	return nil
}

type ListDatabasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Databases []*DataCatalog_DataBase `protobuf:"bytes,1,rep,name=databases,proto3" json:"databases,omitempty"`
}

func (x *ListDatabasesResponse) Reset() {
	*x = ListDatabasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatabasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesResponse) ProtoMessage() {}

func (x *ListDatabasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesResponse.ProtoReflect.Descriptor instead.
func (*ListDatabasesResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{3}
}

func (x *ListDatabasesResponse) GetDatabases() []*DataCatalog_DataBase {
	if x != nil {
		return x.Databases
	}
	return nil
}

type ListSchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *DataCatalog_DataBase `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *ListSchemasRequest) Reset() {
	*x = ListSchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSchemasRequest) ProtoMessage() {}

func (x *ListSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSchemasRequest.ProtoReflect.Descriptor instead.
func (*ListSchemasRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{4}
}

func (x *ListSchemasRequest) GetDatabase() *DataCatalog_DataBase {
	if x != nil {
		return x.Database
	}
	return nil
}

// (-- api-linter: core::0158::response-plural-first-field=disabled
//
//	aip.dev/not-precedent: Schemata? Get real. --)
type ListSchemasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schemas []*DataCatalog_Schema `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
}

func (x *ListSchemasResponse) Reset() {
	*x = ListSchemasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSchemasResponse) ProtoMessage() {}

func (x *ListSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSchemasResponse.ProtoReflect.Descriptor instead.
func (*ListSchemasResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{5}
}

func (x *ListSchemasResponse) GetSchemas() []*DataCatalog_Schema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

type ListTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *DataCatalog_Schema `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *ListTablesRequest) Reset() {
	*x = ListTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesRequest) ProtoMessage() {}

func (x *ListTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesRequest.ProtoReflect.Descriptor instead.
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{6}
}

func (x *ListTablesRequest) GetSchema() *DataCatalog_Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type ListTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*DataCatalog_Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *ListTablesResponse) Reset() {
	*x = ListTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesResponse) ProtoMessage() {}

func (x *ListTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesResponse.ProtoReflect.Descriptor instead.
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{7}
}

func (x *ListTablesResponse) GetTables() []*DataCatalog_Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type ListProcessingPlatformsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProcessingPlatformsRequest) Reset() {
	*x = ListProcessingPlatformsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessingPlatformsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessingPlatformsRequest) ProtoMessage() {}

func (x *ListProcessingPlatformsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessingPlatformsRequest.ProtoReflect.Descriptor instead.
func (*ListProcessingPlatformsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{8}
}

type ListProcessingPlatformsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessingPlatforms []*DataPolicy_ProcessingPlatform `protobuf:"bytes,1,rep,name=processing_platforms,json=processingPlatforms,proto3" json:"processing_platforms,omitempty"`
}

func (x *ListProcessingPlatformsResponse) Reset() {
	*x = ListProcessingPlatformsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessingPlatformsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessingPlatformsResponse) ProtoMessage() {}

func (x *ListProcessingPlatformsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessingPlatformsResponse.ProtoReflect.Descriptor instead.
func (*ListProcessingPlatformsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{9}
}

func (x *ListProcessingPlatformsResponse) GetProcessingPlatforms() []*DataPolicy_ProcessingPlatform {
	if x != nil {
		return x.ProcessingPlatforms
	}
	return nil
}

type ListProcessingPlatformTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform *DataPolicy_ProcessingPlatform `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ListProcessingPlatformTablesRequest) Reset() {
	*x = ListProcessingPlatformTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessingPlatformTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessingPlatformTablesRequest) ProtoMessage() {}

func (x *ListProcessingPlatformTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessingPlatformTablesRequest.ProtoReflect.Descriptor instead.
func (*ListProcessingPlatformTablesRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{10}
}

func (x *ListProcessingPlatformTablesRequest) GetPlatform() *DataPolicy_ProcessingPlatform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type ListProcessingPlatformTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []string `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *ListProcessingPlatformTablesResponse) Reset() {
	*x = ListProcessingPlatformTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessingPlatformTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessingPlatformTablesResponse) ProtoMessage() {}

func (x *ListProcessingPlatformTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessingPlatformTablesResponse.ProtoReflect.Descriptor instead.
func (*ListProcessingPlatformTablesResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{11}
}

func (x *ListProcessingPlatformTablesResponse) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

type ListProcessingPlatformGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform *DataPolicy_ProcessingPlatform `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ListProcessingPlatformGroupsRequest) Reset() {
	*x = ListProcessingPlatformGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessingPlatformGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessingPlatformGroupsRequest) ProtoMessage() {}

func (x *ListProcessingPlatformGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessingPlatformGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListProcessingPlatformGroupsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{12}
}

func (x *ListProcessingPlatformGroupsRequest) GetPlatform() *DataPolicy_ProcessingPlatform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type ListProcessingPlatformGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ListProcessingPlatformGroupsResponse) Reset() {
	*x = ListProcessingPlatformGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessingPlatformGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessingPlatformGroupsResponse) ProtoMessage() {}

func (x *ListProcessingPlatformGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessingPlatformGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListProcessingPlatformGroupsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{13}
}

func (x *ListProcessingPlatformGroupsResponse) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetProcessingPlatformBarePolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform *DataPolicy_ProcessingPlatform `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Table    string                         `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *GetProcessingPlatformBarePolicyRequest) Reset() {
	*x = GetProcessingPlatformBarePolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessingPlatformBarePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessingPlatformBarePolicyRequest) ProtoMessage() {}

func (x *GetProcessingPlatformBarePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessingPlatformBarePolicyRequest.ProtoReflect.Descriptor instead.
func (*GetProcessingPlatformBarePolicyRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{14}
}

func (x *GetProcessingPlatformBarePolicyRequest) GetPlatform() *DataPolicy_ProcessingPlatform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *GetProcessingPlatformBarePolicyRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type GetProcessingPlatformBarePolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPolicy *DataPolicy `protobuf:"bytes,1,opt,name=data_policy,json=dataPolicy,proto3" json:"data_policy,omitempty"`
}

func (x *GetProcessingPlatformBarePolicyResponse) Reset() {
	*x = GetProcessingPlatformBarePolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessingPlatformBarePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessingPlatformBarePolicyResponse) ProtoMessage() {}

func (x *GetProcessingPlatformBarePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessingPlatformBarePolicyResponse.ProtoReflect.Descriptor instead.
func (*GetProcessingPlatformBarePolicyResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{15}
}

func (x *GetProcessingPlatformBarePolicyResponse) GetDataPolicy() *DataPolicy {
	if x != nil {
		return x.DataPolicy
	}
	return nil
}

type GetDataPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDataPolicyRequest) Reset() {
	*x = GetDataPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataPolicyRequest) ProtoMessage() {}

func (x *GetDataPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetDataPolicyRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{16}
}

func (x *GetDataPolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDataPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPolicy *DataPolicy `protobuf:"bytes,1,opt,name=data_policy,json=dataPolicy,proto3" json:"data_policy,omitempty"`
}

func (x *GetDataPolicyResponse) Reset() {
	*x = GetDataPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataPolicyResponse) ProtoMessage() {}

func (x *GetDataPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetDataPolicyResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{17}
}

func (x *GetDataPolicyResponse) GetDataPolicy() *DataPolicy {
	if x != nil {
		return x.DataPolicy
	}
	return nil
}

// *
// inserts or updates a DataPolicy into the DPS
// AND applies it to the processing platform.
type UpsertDataPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPolicy *DataPolicy `protobuf:"bytes,1,opt,name=data_policy,json=dataPolicy,proto3" json:"data_policy,omitempty"`
}

func (x *UpsertDataPolicyRequest) Reset() {
	*x = UpsertDataPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertDataPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertDataPolicyRequest) ProtoMessage() {}

func (x *UpsertDataPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertDataPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpsertDataPolicyRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{18}
}

func (x *UpsertDataPolicyRequest) GetDataPolicy() *DataPolicy {
	if x != nil {
		return x.DataPolicy
	}
	return nil
}

type UpsertDataPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPolicy *DataPolicy `protobuf:"bytes,1,opt,name=data_policy,json=dataPolicy,proto3" json:"data_policy,omitempty"`
}

func (x *UpsertDataPolicyResponse) Reset() {
	*x = UpsertDataPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertDataPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertDataPolicyResponse) ProtoMessage() {}

func (x *UpsertDataPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertDataPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpsertDataPolicyResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{19}
}

func (x *UpsertDataPolicyResponse) GetDataPolicy() *DataPolicy {
	if x != nil {
		return x.DataPolicy
	}
	return nil
}

type ListDataPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDataPoliciesRequest) Reset() {
	*x = ListDataPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPoliciesRequest) ProtoMessage() {}

func (x *ListDataPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListDataPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{20}
}

type ListDataPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPolicies []*DataPolicy `protobuf:"bytes,1,rep,name=data_policies,json=dataPolicies,proto3" json:"data_policies,omitempty"`
}

func (x *ListDataPoliciesResponse) Reset() {
	*x = ListDataPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPoliciesResponse) ProtoMessage() {}

func (x *ListDataPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListDataPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{21}
}

func (x *ListDataPoliciesResponse) GetDataPolicies() []*DataPolicy {
	if x != nil {
		return x.DataPolicies
	}
	return nil
}

type DataPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info     *DataPolicy_Info               `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Source   *DataPolicy_Source             `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Platform *DataPolicy_ProcessingPlatform `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
	RuleSets []*DataPolicy_RuleSet          `protobuf:"bytes,5,rep,name=rule_sets,json=ruleSets,proto3" json:"rule_sets,omitempty"`
}

func (x *DataPolicy) Reset() {
	*x = DataPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy) ProtoMessage() {}

func (x *DataPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy.ProtoReflect.Descriptor instead.
func (*DataPolicy) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22}
}

func (x *DataPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataPolicy) GetInfo() *DataPolicy_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *DataPolicy) GetSource() *DataPolicy_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *DataPolicy) GetPlatform() *DataPolicy_ProcessingPlatform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *DataPolicy) GetRuleSets() []*DataPolicy_RuleSet {
	if x != nil {
		return x.RuleSets
	}
	return nil
}

type DataCatalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      DataCatalog_Type        `protobuf:"varint,2,opt,name=type,proto3,enum=strmprivacy.api.data_policies.v1alpha.DataCatalog_Type" json:"type,omitempty"`
	Databases []*DataCatalog_DataBase `protobuf:"bytes,3,rep,name=databases,proto3" json:"databases,omitempty"`
}

func (x *DataCatalog) Reset() {
	*x = DataCatalog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataCatalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCatalog) ProtoMessage() {}

func (x *DataCatalog) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCatalog.ProtoReflect.Descriptor instead.
func (*DataCatalog) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{23}
}

func (x *DataCatalog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataCatalog) GetType() DataCatalog_Type {
	if x != nil {
		return x.Type
	}
	return DataCatalog_TYPE_UNSPECIFIED
}

func (x *DataCatalog) GetDatabases() []*DataCatalog_DataBase {
	if x != nil {
		return x.Databases
	}
	return nil
}

type DataPolicy_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Version        string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	OrganizationId string                 `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	CreateTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *DataPolicy_Info) Reset() {
	*x = DataPolicy_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_Info) ProtoMessage() {}

func (x *DataPolicy_Info) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_Info.ProtoReflect.Descriptor instead.
func (*DataPolicy_Info) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 0}
}

func (x *DataPolicy_Info) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DataPolicy_Info) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DataPolicy_Info) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DataPolicy_Info) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DataPolicy_Info) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DataPolicy_Info) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type DataPolicy_RuleSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target          *DataPolicy_Target                   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	FieldTransforms []*DataPolicy_RuleSet_FieldTransform `protobuf:"bytes,2,rep,name=field_transforms,json=fieldTransforms,proto3" json:"field_transforms,omitempty"`
	RowFilters      []*DataPolicy_RuleSet_RowFilter      `protobuf:"bytes,3,rep,name=row_filters,json=rowFilters,proto3" json:"row_filters,omitempty"`
}

func (x *DataPolicy_RuleSet) Reset() {
	*x = DataPolicy_RuleSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet) ProtoMessage() {}

func (x *DataPolicy_RuleSet) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1}
}

func (x *DataPolicy_RuleSet) GetTarget() *DataPolicy_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *DataPolicy_RuleSet) GetFieldTransforms() []*DataPolicy_RuleSet_FieldTransform {
	if x != nil {
		return x.FieldTransforms
	}
	return nil
}

func (x *DataPolicy_RuleSet) GetRowFilters() []*DataPolicy_RuleSet_RowFilter {
	if x != nil {
		return x.RowFilters
	}
	return nil
}

type DataPolicy_ProcessingPlatform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformType DataPolicy_ProcessingPlatform_PlatformType `protobuf:"varint,1,opt,name=platform_type,json=platformType,proto3,enum=strmprivacy.api.data_policies.v1alpha.DataPolicy_ProcessingPlatform_PlatformType" json:"platform_type,omitempty"`
	Id           string                                     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DataPolicy_ProcessingPlatform) Reset() {
	*x = DataPolicy_ProcessingPlatform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_ProcessingPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_ProcessingPlatform) ProtoMessage() {}

func (x *DataPolicy_ProcessingPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_ProcessingPlatform.ProtoReflect.Descriptor instead.
func (*DataPolicy_ProcessingPlatform) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 2}
}

func (x *DataPolicy_ProcessingPlatform) GetPlatformType() DataPolicy_ProcessingPlatform_PlatformType {
	if x != nil {
		return x.PlatformType
	}
	return DataPolicy_ProcessingPlatform_PLATFORM_TYPE_UNSPECIFIED
}

func (x *DataPolicy_ProcessingPlatform) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DataPolicy_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     DataPolicy_Target_TargetType `protobuf:"varint,1,opt,name=type,proto3,enum=strmprivacy.api.data_policies.v1alpha.DataPolicy_Target_TargetType" json:"type,omitempty"`
	Fullname string                       `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
}

func (x *DataPolicy_Target) Reset() {
	*x = DataPolicy_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_Target) ProtoMessage() {}

func (x *DataPolicy_Target) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_Target.ProtoReflect.Descriptor instead.
func (*DataPolicy_Target) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 3}
}

func (x *DataPolicy_Target) GetType() DataPolicy_Target_TargetType {
	if x != nil {
		return x.Type
	}
	return DataPolicy_Target_TARGET_TYPE_UNSPECIFIED
}

func (x *DataPolicy_Target) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

type DataPolicy_Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ref is an identifier for the source, unique at the source platform level.
	Ref  string                 `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Type DataPolicy_Source_Type `protobuf:"varint,2,opt,name=type,proto3,enum=strmprivacy.api.data_policies.v1alpha.DataPolicy_Source_Type" json:"type,omitempty"`
	// Note: we are currently not using the string-based spec after all. Using the Attributes instead improves
	// testability and should make it easier for the frontend to render the policy. Otherwise the frontend
	// would have to parse the string-based spec.
	Spec string `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	// attributes are leading.
	// Todo: rename to fields? Attribute is an overloaded term in this context.
	Attributes []*DataPolicy_Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *DataPolicy_Source) Reset() {
	*x = DataPolicy_Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_Source) ProtoMessage() {}

func (x *DataPolicy_Source) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_Source.ProtoReflect.Descriptor instead.
func (*DataPolicy_Source) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 4}
}

func (x *DataPolicy_Source) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *DataPolicy_Source) GetType() DataPolicy_Source_Type {
	if x != nil {
		return x.Type
	}
	return DataPolicy_Source_TYPE_UNSPECIFIED
}

func (x *DataPolicy_Source) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *DataPolicy_Source) GetAttributes() []*DataPolicy_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DataPolicy_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instead of using "nodes", nesting can be expressed by specifying multiple path components. This is similar to BigQuery.
	PathComponents []string `protobuf:"bytes,1,rep,name=path_components,json=pathComponents,proto3" json:"path_components,omitempty"`
	// This is the "native" type, originating from the source platform.
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Required bool   `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
}

func (x *DataPolicy_Attribute) Reset() {
	*x = DataPolicy_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_Attribute) ProtoMessage() {}

func (x *DataPolicy_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_Attribute.ProtoReflect.Descriptor instead.
func (*DataPolicy_Attribute) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 5}
}

func (x *DataPolicy_Attribute) GetPathComponents() []string {
	if x != nil {
		return x.PathComponents
	}
	return nil
}

func (x *DataPolicy_Attribute) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataPolicy_Attribute) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type DataPolicy_RuleSet_RowFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *DataPolicy_Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// Last condition in the list must have 0 principals, as this acts as the default / else condition.
	Conditions []*DataPolicy_RuleSet_RowFilter_Condition `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *DataPolicy_RuleSet_RowFilter) Reset() {
	*x = DataPolicy_RuleSet_RowFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_RowFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_RowFilter) ProtoMessage() {}

func (x *DataPolicy_RuleSet_RowFilter) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_RowFilter.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_RowFilter) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 0}
}

func (x *DataPolicy_RuleSet_RowFilter) GetAttribute() *DataPolicy_Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *DataPolicy_RuleSet_RowFilter) GetConditions() []*DataPolicy_RuleSet_RowFilter_Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type DataPolicy_RuleSet_FieldTransform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *DataPolicy_Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// Last condition in the list must have 0 principals, as this acts as the default / else condition.
	Transforms []*DataPolicy_RuleSet_FieldTransform_Transform `protobuf:"bytes,2,rep,name=transforms,proto3" json:"transforms,omitempty"`
}

func (x *DataPolicy_RuleSet_FieldTransform) Reset() {
	*x = DataPolicy_RuleSet_FieldTransform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_FieldTransform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_FieldTransform) ProtoMessage() {}

func (x *DataPolicy_RuleSet_FieldTransform) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_FieldTransform.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_FieldTransform) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 1}
}

func (x *DataPolicy_RuleSet_FieldTransform) GetAttribute() *DataPolicy_Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *DataPolicy_RuleSet_FieldTransform) GetTransforms() []*DataPolicy_RuleSet_FieldTransform_Transform {
	if x != nil {
		return x.Transforms
	}
	return nil
}

type DataPolicy_RuleSet_RowFilter_Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principals []string `protobuf:"bytes,1,rep,name=principals,proto3" json:"principals,omitempty"`
	Condition  string   `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *DataPolicy_RuleSet_RowFilter_Condition) Reset() {
	*x = DataPolicy_RuleSet_RowFilter_Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_RowFilter_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_RowFilter_Condition) ProtoMessage() {}

func (x *DataPolicy_RuleSet_RowFilter_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_RowFilter_Condition.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_RowFilter_Condition) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 0, 0}
}

func (x *DataPolicy_RuleSet_RowFilter_Condition) GetPrincipals() []string {
	if x != nil {
		return x.Principals
	}
	return nil
}

func (x *DataPolicy_RuleSet_RowFilter_Condition) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type DataPolicy_RuleSet_FieldTransform_Transform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principals []string `protobuf:"bytes,1,rep,name=principals,proto3" json:"principals,omitempty"`
	// Types that are assignable to Transform:
	//
	//	*DataPolicy_RuleSet_FieldTransform_Transform_Regex
	//	*DataPolicy_RuleSet_FieldTransform_Transform_Identity
	//	*DataPolicy_RuleSet_FieldTransform_Transform_Fixed
	//	*DataPolicy_RuleSet_FieldTransform_Transform_Hash_
	//	*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement_
	//	*DataPolicy_RuleSet_FieldTransform_Transform_Nullify_
	Transform isDataPolicy_RuleSet_FieldTransform_Transform_Transform `protobuf_oneof:"transform"`
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) Reset() {
	*x = DataPolicy_RuleSet_FieldTransform_Transform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_FieldTransform_Transform) ProtoMessage() {}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_FieldTransform_Transform.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_FieldTransform_Transform) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 1, 0}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) GetPrincipals() []string {
	if x != nil {
		return x.Principals
	}
	return nil
}

func (m *DataPolicy_RuleSet_FieldTransform_Transform) GetTransform() isDataPolicy_RuleSet_FieldTransform_Transform_Transform {
	if m != nil {
		return m.Transform
	}
	return nil
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) GetRegex() *DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace {
	if x, ok := x.GetTransform().(*DataPolicy_RuleSet_FieldTransform_Transform_Regex); ok {
		return x.Regex
	}
	return nil
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) GetIdentity() bool {
	if x, ok := x.GetTransform().(*DataPolicy_RuleSet_FieldTransform_Transform_Identity); ok {
		return x.Identity
	}
	return false
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) GetFixed() *DataPolicy_RuleSet_FieldTransform_Transform_FixedValue {
	if x, ok := x.GetTransform().(*DataPolicy_RuleSet_FieldTransform_Transform_Fixed); ok {
		return x.Fixed
	}
	return nil
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) GetHash() *DataPolicy_RuleSet_FieldTransform_Transform_Hash {
	if x, ok := x.GetTransform().(*DataPolicy_RuleSet_FieldTransform_Transform_Hash_); ok {
		return x.Hash
	}
	return nil
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) GetSqlStatement() *DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement {
	if x, ok := x.GetTransform().(*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement_); ok {
		return x.SqlStatement
	}
	return nil
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform) GetNullify() *DataPolicy_RuleSet_FieldTransform_Transform_Nullify {
	if x, ok := x.GetTransform().(*DataPolicy_RuleSet_FieldTransform_Transform_Nullify_); ok {
		return x.Nullify
	}
	return nil
}

type isDataPolicy_RuleSet_FieldTransform_Transform_Transform interface {
	isDataPolicy_RuleSet_FieldTransform_Transform_Transform()
}

type DataPolicy_RuleSet_FieldTransform_Transform_Regex struct {
	Regex *DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace `protobuf:"bytes,2,opt,name=regex,proto3,oneof"`
}

type DataPolicy_RuleSet_FieldTransform_Transform_Identity struct {
	Identity bool `protobuf:"varint,3,opt,name=identity,proto3,oneof"`
}

type DataPolicy_RuleSet_FieldTransform_Transform_Fixed struct {
	Fixed *DataPolicy_RuleSet_FieldTransform_Transform_FixedValue `protobuf:"bytes,4,opt,name=fixed,proto3,oneof"`
}

type DataPolicy_RuleSet_FieldTransform_Transform_Hash_ struct {
	Hash *DataPolicy_RuleSet_FieldTransform_Transform_Hash `protobuf:"bytes,5,opt,name=hash,proto3,oneof"`
}

type DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement_ struct {
	SqlStatement *DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement `protobuf:"bytes,6,opt,name=sql_statement,json=sqlStatement,proto3,oneof"`
}

type DataPolicy_RuleSet_FieldTransform_Transform_Nullify_ struct {
	Nullify *DataPolicy_RuleSet_FieldTransform_Transform_Nullify `protobuf:"bytes,7,opt,name=nullify,proto3,oneof"`
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_Regex) isDataPolicy_RuleSet_FieldTransform_Transform_Transform() {
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_Identity) isDataPolicy_RuleSet_FieldTransform_Transform_Transform() {
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_Fixed) isDataPolicy_RuleSet_FieldTransform_Transform_Transform() {
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_Hash_) isDataPolicy_RuleSet_FieldTransform_Transform_Transform() {
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement_) isDataPolicy_RuleSet_FieldTransform_Transform_Transform() {
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_Nullify_) isDataPolicy_RuleSet_FieldTransform_Transform_Transform() {
}

type DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statement string `protobuf:"bytes,1,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement) Reset() {
	*x = DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement) ProtoMessage() {}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 1, 0, 0}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

type DataPolicy_RuleSet_FieldTransform_Transform_Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed int64 `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_Hash) Reset() {
	*x = DataPolicy_RuleSet_FieldTransform_Transform_Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_Hash) ProtoMessage() {}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_Hash) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_FieldTransform_Transform_Hash.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_FieldTransform_Transform_Hash) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 1, 0, 1}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_Hash) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

type DataPolicy_RuleSet_FieldTransform_Transform_FixedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_FixedValue) Reset() {
	*x = DataPolicy_RuleSet_FieldTransform_Transform_FixedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_FixedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_FixedValue) ProtoMessage() {}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_FixedValue) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_FieldTransform_Transform_FixedValue.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_FieldTransform_Transform_FixedValue) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 1, 0, 2}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_FixedValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regex       string `protobuf:"bytes,1,opt,name=regex,proto3" json:"regex,omitempty"`
	Replacement string `protobuf:"bytes,2,opt,name=replacement,proto3" json:"replacement,omitempty"`
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace) Reset() {
	*x = DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace) ProtoMessage() {}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 1, 0, 3}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace) GetReplacement() string {
	if x != nil {
		return x.Replacement
	}
	return ""
}

type DataPolicy_RuleSet_FieldTransform_Transform_Nullify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_Nullify) Reset() {
	*x = DataPolicy_RuleSet_FieldTransform_Transform_Nullify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_Nullify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPolicy_RuleSet_FieldTransform_Transform_Nullify) ProtoMessage() {}

func (x *DataPolicy_RuleSet_FieldTransform_Transform_Nullify) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPolicy_RuleSet_FieldTransform_Transform_Nullify.ProtoReflect.Descriptor instead.
func (*DataPolicy_RuleSet_FieldTransform_Transform_Nullify) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{22, 1, 1, 0, 4}
}

type DataCatalog_DataBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        string                `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	DisplayName string                `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CatalogId   string                `protobuf:"bytes,4,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	Schemas     []*DataCatalog_Schema `protobuf:"bytes,5,rep,name=schemas,proto3" json:"schemas,omitempty"`
}

func (x *DataCatalog_DataBase) Reset() {
	*x = DataCatalog_DataBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataCatalog_DataBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCatalog_DataBase) ProtoMessage() {}

func (x *DataCatalog_DataBase) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCatalog_DataBase.ProtoReflect.Descriptor instead.
func (*DataCatalog_DataBase) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{23, 0}
}

func (x *DataCatalog_DataBase) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataCatalog_DataBase) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataCatalog_DataBase) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DataCatalog_DataBase) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *DataCatalog_DataBase) GetSchemas() []*DataCatalog_Schema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

type DataCatalog_Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CatalogId  string               `protobuf:"bytes,3,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	DatabaseId string               `protobuf:"bytes,4,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	Tables     []*DataCatalog_Table `protobuf:"bytes,5,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *DataCatalog_Schema) Reset() {
	*x = DataCatalog_Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataCatalog_Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCatalog_Schema) ProtoMessage() {}

func (x *DataCatalog_Schema) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCatalog_Schema.ProtoReflect.Descriptor instead.
func (*DataCatalog_Schema) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{23, 1}
}

func (x *DataCatalog_Schema) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataCatalog_Schema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataCatalog_Schema) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *DataCatalog_Schema) GetDatabaseId() string {
	if x != nil {
		return x.DatabaseId
	}
	return ""
}

func (x *DataCatalog_Schema) GetTables() []*DataCatalog_Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type DataCatalog_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SchemaId string `protobuf:"bytes,3,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
}

func (x *DataCatalog_Table) Reset() {
	*x = DataCatalog_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataCatalog_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCatalog_Table) ProtoMessage() {}

func (x *DataCatalog_Table) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCatalog_Table.ProtoReflect.Descriptor instead.
func (*DataCatalog_Table) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP(), []int{23, 2}
}

func (x *DataCatalog_Table) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataCatalog_Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataCatalog_Table) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

var File_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto protoreflect.FileDescriptor

var file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDesc = []byte{
	0x0a, 0x41, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x25, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x66, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x07, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x22, 0x72, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x22,
	0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x66, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22,
	0x20, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x22, 0x87,
	0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x3e, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x60, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0x3e, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x72, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x44, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x7d, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61,
	0x72, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x6d, 0x0a, 0x17, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x6e, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x81, 0x19, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x50, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x56, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x73, 0x1a, 0xfb,
	0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xb5, 0x0d, 0x0a,
	0x07, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x50, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x73, 0x0a, 0x10, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x0f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12,
	0x64, 0x0a, 0x0b, 0x72, 0x6f, 0x77, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e,
	0x52, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x6f, 0x77, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xa0, 0x02, 0x0a, 0x09, 0x52, 0x6f, 0x77, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x6d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x6f,
	0x77, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x49, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd9, 0x08, 0x0a, 0x0e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x59, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x1a, 0xf7, 0x06, 0x0a, 0x09, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x12, 0x77, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x65,
	0x78, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x12, 0x1c, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x75, 0x0a, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x86, 0x01, 0x0a, 0x0d, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5f, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x53, 0x71, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x73, 0x71, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x76,
	0x0a, 0x07, 0x6e, 0x75, 0x6c, 0x6c, 0x69, 0x66, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x5a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x07, 0x6e,
	0x75, 0x6c, 0x6c, 0x69, 0x66, 0x79, 0x1a, 0x2c, 0x0a, 0x0c, 0x53, 0x71, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64,
	0x1a, 0x22, 0x0a, 0x0a, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x46, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x65, 0x78, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x09, 0x0a, 0x07,
	0x4e, 0x75, 0x6c, 0x6c, 0x69, 0x66, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x1a, 0xf8, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x76, 0x0a, 0x0d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x51, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x41, 0x54, 0x41, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4e, 0x4f, 0x57, 0x46, 0x4c, 0x41, 0x4b, 0x45, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x49, 0x47, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x03, 0x1a,
	0xba, 0x01, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x57, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3b, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x59,
	0x4e, 0x41, 0x4d, 0x49, 0x43, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x1a, 0xb6, 0x02, 0x0a,
	0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x51, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x12, 0x5b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x56, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x51, 0x4c, 0x5f, 0x44, 0x44, 0x4c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x41, 0x54, 0x41,
	0x42, 0x52, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4e, 0x4f, 0x57,
	0x46, 0x4c, 0x41, 0x4b, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x49, 0x47, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x10, 0x04, 0x1a, 0x64, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x74,
	0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0xda, 0x05, 0x0a, 0x0b,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x1a, 0xc5, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x1a, 0xbe, 0x01, 0x0a, 0x06,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x06, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x48, 0x0a, 0x05,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4c, 0x4c, 0x49, 0x42, 0x52, 0x41,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x44, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x41, 0x54, 0x41, 0x48, 0x55, 0x42, 0x10, 0x03, 0x32, 0xd0, 0x0d, 0x0a, 0x11, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3b, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x12, 0x45, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xb7, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x4a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb7, 0x01, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x4a, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xc0, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x42, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4d, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x3a, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x84, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x12, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x82, 0x01, 0x0a, 0x28,
	0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x50, 0x01, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescOnce sync.Once
	file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescData = file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDesc
)

func file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescData)
	})
	return file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDescData
}

var file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_goTypes = []interface{}{
	(DataPolicy_ProcessingPlatform_PlatformType)(0),                  // 0: strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform.PlatformType
	(DataPolicy_Target_TargetType)(0),                                // 1: strmprivacy.api.data_policies.v1alpha.DataPolicy.Target.TargetType
	(DataPolicy_Source_Type)(0),                                      // 2: strmprivacy.api.data_policies.v1alpha.DataPolicy.Source.Type
	(DataCatalog_Type)(0),                                            // 3: strmprivacy.api.data_policies.v1alpha.DataCatalog.Type
	(*ListCatalogsRequest)(nil),                                      // 4: strmprivacy.api.data_policies.v1alpha.ListCatalogsRequest
	(*ListCatalogsResponse)(nil),                                     // 5: strmprivacy.api.data_policies.v1alpha.ListCatalogsResponse
	(*ListDatabasesRequest)(nil),                                     // 6: strmprivacy.api.data_policies.v1alpha.ListDatabasesRequest
	(*ListDatabasesResponse)(nil),                                    // 7: strmprivacy.api.data_policies.v1alpha.ListDatabasesResponse
	(*ListSchemasRequest)(nil),                                       // 8: strmprivacy.api.data_policies.v1alpha.ListSchemasRequest
	(*ListSchemasResponse)(nil),                                      // 9: strmprivacy.api.data_policies.v1alpha.ListSchemasResponse
	(*ListTablesRequest)(nil),                                        // 10: strmprivacy.api.data_policies.v1alpha.ListTablesRequest
	(*ListTablesResponse)(nil),                                       // 11: strmprivacy.api.data_policies.v1alpha.ListTablesResponse
	(*ListProcessingPlatformsRequest)(nil),                           // 12: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformsRequest
	(*ListProcessingPlatformsResponse)(nil),                          // 13: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformsResponse
	(*ListProcessingPlatformTablesRequest)(nil),                      // 14: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformTablesRequest
	(*ListProcessingPlatformTablesResponse)(nil),                     // 15: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformTablesResponse
	(*ListProcessingPlatformGroupsRequest)(nil),                      // 16: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformGroupsRequest
	(*ListProcessingPlatformGroupsResponse)(nil),                     // 17: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformGroupsResponse
	(*GetProcessingPlatformBarePolicyRequest)(nil),                   // 18: strmprivacy.api.data_policies.v1alpha.GetProcessingPlatformBarePolicyRequest
	(*GetProcessingPlatformBarePolicyResponse)(nil),                  // 19: strmprivacy.api.data_policies.v1alpha.GetProcessingPlatformBarePolicyResponse
	(*GetDataPolicyRequest)(nil),                                     // 20: strmprivacy.api.data_policies.v1alpha.GetDataPolicyRequest
	(*GetDataPolicyResponse)(nil),                                    // 21: strmprivacy.api.data_policies.v1alpha.GetDataPolicyResponse
	(*UpsertDataPolicyRequest)(nil),                                  // 22: strmprivacy.api.data_policies.v1alpha.UpsertDataPolicyRequest
	(*UpsertDataPolicyResponse)(nil),                                 // 23: strmprivacy.api.data_policies.v1alpha.UpsertDataPolicyResponse
	(*ListDataPoliciesRequest)(nil),                                  // 24: strmprivacy.api.data_policies.v1alpha.ListDataPoliciesRequest
	(*ListDataPoliciesResponse)(nil),                                 // 25: strmprivacy.api.data_policies.v1alpha.ListDataPoliciesResponse
	(*DataPolicy)(nil),                                               // 26: strmprivacy.api.data_policies.v1alpha.DataPolicy
	(*DataCatalog)(nil),                                              // 27: strmprivacy.api.data_policies.v1alpha.DataCatalog
	(*DataPolicy_Info)(nil),                                          // 28: strmprivacy.api.data_policies.v1alpha.DataPolicy.Info
	(*DataPolicy_RuleSet)(nil),                                       // 29: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet
	(*DataPolicy_ProcessingPlatform)(nil),                            // 30: strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform
	(*DataPolicy_Target)(nil),                                        // 31: strmprivacy.api.data_policies.v1alpha.DataPolicy.Target
	(*DataPolicy_Source)(nil),                                        // 32: strmprivacy.api.data_policies.v1alpha.DataPolicy.Source
	(*DataPolicy_Attribute)(nil),                                     // 33: strmprivacy.api.data_policies.v1alpha.DataPolicy.Attribute
	(*DataPolicy_RuleSet_RowFilter)(nil),                             // 34: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.RowFilter
	(*DataPolicy_RuleSet_FieldTransform)(nil),                        // 35: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform
	(*DataPolicy_RuleSet_RowFilter_Condition)(nil),                   // 36: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.RowFilter.Condition
	(*DataPolicy_RuleSet_FieldTransform_Transform)(nil),              // 37: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform
	(*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement)(nil), // 38: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.SqlStatement
	(*DataPolicy_RuleSet_FieldTransform_Transform_Hash)(nil),         // 39: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.Hash
	(*DataPolicy_RuleSet_FieldTransform_Transform_FixedValue)(nil),   // 40: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.FixedValue
	(*DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace)(nil), // 41: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.RegexReplace
	(*DataPolicy_RuleSet_FieldTransform_Transform_Nullify)(nil),      // 42: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.Nullify
	(*DataCatalog_DataBase)(nil),                                     // 43: strmprivacy.api.data_policies.v1alpha.DataCatalog.DataBase
	(*DataCatalog_Schema)(nil),                                       // 44: strmprivacy.api.data_policies.v1alpha.DataCatalog.Schema
	(*DataCatalog_Table)(nil),                                        // 45: strmprivacy.api.data_policies.v1alpha.DataCatalog.Table
	(*timestamppb.Timestamp)(nil),                                    // 46: google.protobuf.Timestamp
}
var file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_depIdxs = []int32{
	27, // 0: strmprivacy.api.data_policies.v1alpha.ListCatalogsResponse.catalogs:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog
	27, // 1: strmprivacy.api.data_policies.v1alpha.ListDatabasesRequest.catalog:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog
	43, // 2: strmprivacy.api.data_policies.v1alpha.ListDatabasesResponse.databases:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.DataBase
	43, // 3: strmprivacy.api.data_policies.v1alpha.ListSchemasRequest.database:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.DataBase
	44, // 4: strmprivacy.api.data_policies.v1alpha.ListSchemasResponse.schemas:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.Schema
	44, // 5: strmprivacy.api.data_policies.v1alpha.ListTablesRequest.schema:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.Schema
	45, // 6: strmprivacy.api.data_policies.v1alpha.ListTablesResponse.tables:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.Table
	30, // 7: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformsResponse.processing_platforms:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform
	30, // 8: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformTablesRequest.platform:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform
	30, // 9: strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformGroupsRequest.platform:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform
	30, // 10: strmprivacy.api.data_policies.v1alpha.GetProcessingPlatformBarePolicyRequest.platform:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform
	26, // 11: strmprivacy.api.data_policies.v1alpha.GetProcessingPlatformBarePolicyResponse.data_policy:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy
	26, // 12: strmprivacy.api.data_policies.v1alpha.GetDataPolicyResponse.data_policy:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy
	26, // 13: strmprivacy.api.data_policies.v1alpha.UpsertDataPolicyRequest.data_policy:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy
	26, // 14: strmprivacy.api.data_policies.v1alpha.UpsertDataPolicyResponse.data_policy:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy
	26, // 15: strmprivacy.api.data_policies.v1alpha.ListDataPoliciesResponse.data_policies:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy
	28, // 16: strmprivacy.api.data_policies.v1alpha.DataPolicy.info:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Info
	32, // 17: strmprivacy.api.data_policies.v1alpha.DataPolicy.source:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Source
	30, // 18: strmprivacy.api.data_policies.v1alpha.DataPolicy.platform:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform
	29, // 19: strmprivacy.api.data_policies.v1alpha.DataPolicy.rule_sets:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet
	3,  // 20: strmprivacy.api.data_policies.v1alpha.DataCatalog.type:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.Type
	43, // 21: strmprivacy.api.data_policies.v1alpha.DataCatalog.databases:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.DataBase
	46, // 22: strmprivacy.api.data_policies.v1alpha.DataPolicy.Info.create_time:type_name -> google.protobuf.Timestamp
	46, // 23: strmprivacy.api.data_policies.v1alpha.DataPolicy.Info.update_time:type_name -> google.protobuf.Timestamp
	31, // 24: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.target:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Target
	35, // 25: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.field_transforms:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform
	34, // 26: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.row_filters:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.RowFilter
	0,  // 27: strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform.platform_type:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.ProcessingPlatform.PlatformType
	1,  // 28: strmprivacy.api.data_policies.v1alpha.DataPolicy.Target.type:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Target.TargetType
	2,  // 29: strmprivacy.api.data_policies.v1alpha.DataPolicy.Source.type:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Source.Type
	33, // 30: strmprivacy.api.data_policies.v1alpha.DataPolicy.Source.attributes:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Attribute
	33, // 31: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.RowFilter.attribute:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Attribute
	36, // 32: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.RowFilter.conditions:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.RowFilter.Condition
	33, // 33: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.attribute:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.Attribute
	37, // 34: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.transforms:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform
	41, // 35: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.regex:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.RegexReplace
	40, // 36: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.fixed:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.FixedValue
	39, // 37: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.hash:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.Hash
	38, // 38: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.sql_statement:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.SqlStatement
	42, // 39: strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.nullify:type_name -> strmprivacy.api.data_policies.v1alpha.DataPolicy.RuleSet.FieldTransform.Transform.Nullify
	44, // 40: strmprivacy.api.data_policies.v1alpha.DataCatalog.DataBase.schemas:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.Schema
	45, // 41: strmprivacy.api.data_policies.v1alpha.DataCatalog.Schema.tables:type_name -> strmprivacy.api.data_policies.v1alpha.DataCatalog.Table
	24, // 42: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListDataPolicies:input_type -> strmprivacy.api.data_policies.v1alpha.ListDataPoliciesRequest
	22, // 43: strmprivacy.api.data_policies.v1alpha.DataPolicyService.UpsertDataPolicy:input_type -> strmprivacy.api.data_policies.v1alpha.UpsertDataPolicyRequest
	20, // 44: strmprivacy.api.data_policies.v1alpha.DataPolicyService.GetDataPolicy:input_type -> strmprivacy.api.data_policies.v1alpha.GetDataPolicyRequest
	12, // 45: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListProcessingPlatforms:input_type -> strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformsRequest
	14, // 46: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListProcessingPlatformTables:input_type -> strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformTablesRequest
	16, // 47: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListProcessingPlatformGroups:input_type -> strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformGroupsRequest
	18, // 48: strmprivacy.api.data_policies.v1alpha.DataPolicyService.GetProcessingPlatformBarePolicy:input_type -> strmprivacy.api.data_policies.v1alpha.GetProcessingPlatformBarePolicyRequest
	4,  // 49: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListCatalogs:input_type -> strmprivacy.api.data_policies.v1alpha.ListCatalogsRequest
	6,  // 50: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListDatabases:input_type -> strmprivacy.api.data_policies.v1alpha.ListDatabasesRequest
	8,  // 51: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListSchemas:input_type -> strmprivacy.api.data_policies.v1alpha.ListSchemasRequest
	10, // 52: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListTables:input_type -> strmprivacy.api.data_policies.v1alpha.ListTablesRequest
	25, // 53: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListDataPolicies:output_type -> strmprivacy.api.data_policies.v1alpha.ListDataPoliciesResponse
	23, // 54: strmprivacy.api.data_policies.v1alpha.DataPolicyService.UpsertDataPolicy:output_type -> strmprivacy.api.data_policies.v1alpha.UpsertDataPolicyResponse
	21, // 55: strmprivacy.api.data_policies.v1alpha.DataPolicyService.GetDataPolicy:output_type -> strmprivacy.api.data_policies.v1alpha.GetDataPolicyResponse
	13, // 56: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListProcessingPlatforms:output_type -> strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformsResponse
	15, // 57: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListProcessingPlatformTables:output_type -> strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformTablesResponse
	17, // 58: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListProcessingPlatformGroups:output_type -> strmprivacy.api.data_policies.v1alpha.ListProcessingPlatformGroupsResponse
	19, // 59: strmprivacy.api.data_policies.v1alpha.DataPolicyService.GetProcessingPlatformBarePolicy:output_type -> strmprivacy.api.data_policies.v1alpha.GetProcessingPlatformBarePolicyResponse
	5,  // 60: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListCatalogs:output_type -> strmprivacy.api.data_policies.v1alpha.ListCatalogsResponse
	7,  // 61: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListDatabases:output_type -> strmprivacy.api.data_policies.v1alpha.ListDatabasesResponse
	9,  // 62: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListSchemas:output_type -> strmprivacy.api.data_policies.v1alpha.ListSchemasResponse
	11, // 63: strmprivacy.api.data_policies.v1alpha.DataPolicyService.ListTables:output_type -> strmprivacy.api.data_policies.v1alpha.ListTablesResponse
	53, // [53:64] is the sub-list for method output_type
	42, // [42:53] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_init() }
func file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_init() {
	if File_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatalogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatalogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatabasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatabasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSchemasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessingPlatformsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessingPlatformsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessingPlatformTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessingPlatformTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessingPlatformGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessingPlatformGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessingPlatformBarePolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessingPlatformBarePolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertDataPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertDataPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataCatalog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_ProcessingPlatform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_RowFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_FieldTransform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_RowFilter_Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_FieldTransform_Transform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_FieldTransform_Transform_Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_FieldTransform_Transform_FixedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_FieldTransform_Transform_RegexReplace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPolicy_RuleSet_FieldTransform_Transform_Nullify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataCatalog_DataBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataCatalog_Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataCatalog_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*DataPolicy_RuleSet_FieldTransform_Transform_Regex)(nil),
		(*DataPolicy_RuleSet_FieldTransform_Transform_Identity)(nil),
		(*DataPolicy_RuleSet_FieldTransform_Transform_Fixed)(nil),
		(*DataPolicy_RuleSet_FieldTransform_Transform_Hash_)(nil),
		(*DataPolicy_RuleSet_FieldTransform_Transform_SqlStatement_)(nil),
		(*DataPolicy_RuleSet_FieldTransform_Transform_Nullify_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_depIdxs,
		EnumInfos:         file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_enumTypes,
		MessageInfos:      file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto = out.File
	file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_rawDesc = nil
	file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_goTypes = nil
	file_strmprivacy_api_data_policies_v1alpha_data_policies_v1alpha_proto_depIdxs = nil
}
