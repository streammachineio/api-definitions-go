// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.15.2
// source: streammachine/api/metrics/v1/metrics.proto

package metrics

import (
	v1 "github.com/streammachineio/api-definitions-go/api/entities/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemState int32

const (
	SystemState_SYSTEM_STATE_UNSPECIFIED SystemState = 0
	// Everything is working fine (green).
	SystemState_UP SystemState = 1
	// One or more major parts of the system are down/unusable (red).
	SystemState_MAJOR_DOWN SystemState = 2
	// Small parts of the system are down/unusable, but the core is not affected. (orange).
	SystemState_MINOR_DOWN SystemState = 3
)

// Enum value maps for SystemState.
var (
	SystemState_name = map[int32]string{
		0: "SYSTEM_STATE_UNSPECIFIED",
		1: "UP",
		2: "MAJOR_DOWN",
		3: "MINOR_DOWN",
	}
	SystemState_value = map[string]int32{
		"SYSTEM_STATE_UNSPECIFIED": 0,
		"UP":                       1,
		"MAJOR_DOWN":               2,
		"MINOR_DOWN":               3,
	}
)

func (x SystemState) Enum() *SystemState {
	p := new(SystemState)
	*p = x
	return p
}

func (x SystemState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemState) Descriptor() protoreflect.EnumDescriptor {
	return file_streammachine_api_metrics_v1_metrics_proto_enumTypes[0].Descriptor()
}

func (SystemState) Type() protoreflect.EnumType {
	return &file_streammachine_api_metrics_v1_metrics_proto_enumTypes[0]
}

func (x SystemState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemState.Descriptor instead.
func (SystemState) EnumDescriptor() ([]byte, []int) {
	return file_streammachine_api_metrics_v1_metrics_proto_rawDescGZIP(), []int{0}
}

type LatencyAggregationType int32

const (
	LatencyAggregationType_LATENCY_AGGREGATION_TYPE_UNSPECIFIED LatencyAggregationType = 0
	// The minimum latency.
	LatencyAggregationType_MIN LatencyAggregationType = 1
	// The maximum latency.
	LatencyAggregationType_MAX LatencyAggregationType = 2
	// The average latency.
	LatencyAggregationType_AVERAGE LatencyAggregationType = 3
	// 90 percentile.
	LatencyAggregationType_PCT_90 LatencyAggregationType = 4
	// 95 percentile.
	LatencyAggregationType_PCT_95 LatencyAggregationType = 5
	// 99 percentile.
	LatencyAggregationType_PCT_99 LatencyAggregationType = 6
	// 99.9 percentile.
	LatencyAggregationType_PCT_99_9 LatencyAggregationType = 7
)

// Enum value maps for LatencyAggregationType.
var (
	LatencyAggregationType_name = map[int32]string{
		0: "LATENCY_AGGREGATION_TYPE_UNSPECIFIED",
		1: "MIN",
		2: "MAX",
		3: "AVERAGE",
		4: "PCT_90",
		5: "PCT_95",
		6: "PCT_99",
		7: "PCT_99_9",
	}
	LatencyAggregationType_value = map[string]int32{
		"LATENCY_AGGREGATION_TYPE_UNSPECIFIED": 0,
		"MIN":                                  1,
		"MAX":                                  2,
		"AVERAGE":                              3,
		"PCT_90":                               4,
		"PCT_95":                               5,
		"PCT_99":                               6,
		"PCT_99_9":                             7,
	}
)

func (x LatencyAggregationType) Enum() *LatencyAggregationType {
	p := new(LatencyAggregationType)
	*p = x
	return p
}

func (x LatencyAggregationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LatencyAggregationType) Descriptor() protoreflect.EnumDescriptor {
	return file_streammachine_api_metrics_v1_metrics_proto_enumTypes[1].Descriptor()
}

func (LatencyAggregationType) Type() protoreflect.EnumType {
	return &file_streammachine_api_metrics_v1_metrics_proto_enumTypes[1]
}

func (x LatencyAggregationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LatencyAggregationType.Descriptor instead.
func (LatencyAggregationType) EnumDescriptor() ([]byte, []int) {
	return file_streammachine_api_metrics_v1_metrics_proto_rawDescGZIP(), []int{1}
}

type GetSystemStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSystemStateRequest) Reset() {
	*x = GetSystemStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemStateRequest) ProtoMessage() {}

func (x *GetSystemStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemStateRequest.ProtoReflect.Descriptor instead.
func (*GetSystemStateRequest) Descriptor() ([]byte, []int) {
	return file_streammachine_api_metrics_v1_metrics_proto_rawDescGZIP(), []int{0}
}

type GetSystemStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OverallState SystemState `protobuf:"varint,1,opt,name=overall_state,json=overallState,proto3,enum=streammachine.api.metrics.v1.SystemState" json:"overall_state,omitempty"`
}

func (x *GetSystemStateResponse) Reset() {
	*x = GetSystemStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemStateResponse) ProtoMessage() {}

func (x *GetSystemStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemStateResponse.ProtoReflect.Descriptor instead.
func (*GetSystemStateResponse) Descriptor() ([]byte, []int) {
	return file_streammachine_api_metrics_v1_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *GetSystemStateResponse) GetOverallState() SystemState {
	if x != nil {
		return x.OverallState
	}
	return SystemState_SYSTEM_STATE_UNSPECIFIED
}

type GetLatencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref       *v1.StreamRef          `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Specifies how to aggregate the results in the given time window
	AggregationType LatencyAggregationType `protobuf:"varint,4,opt,name=aggregation_type,json=aggregationType,proto3,enum=streammachine.api.metrics.v1.LatencyAggregationType" json:"aggregation_type,omitempty"`
}

func (x *GetLatencyRequest) Reset() {
	*x = GetLatencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatencyRequest) ProtoMessage() {}

func (x *GetLatencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatencyRequest.ProtoReflect.Descriptor instead.
func (*GetLatencyRequest) Descriptor() ([]byte, []int) {
	return file_streammachine_api_metrics_v1_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *GetLatencyRequest) GetRef() *v1.StreamRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *GetLatencyRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetLatencyRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetLatencyRequest) GetAggregationType() LatencyAggregationType {
	if x != nil {
		return x.AggregationType
	}
	return LatencyAggregationType_LATENCY_AGGREGATION_TYPE_UNSPECIFIED
}

type GetLatencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latency float64 `protobuf:"fixed64,1,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *GetLatencyResponse) Reset() {
	*x = GetLatencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatencyResponse) ProtoMessage() {}

func (x *GetLatencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streammachine_api_metrics_v1_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatencyResponse.ProtoReflect.Descriptor instead.
func (*GetLatencyResponse) Descriptor() ([]byte, []int) {
	return file_streammachine_api_metrics_v1_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *GetLatencyResponse) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

var File_streammachine_api_metrics_v1_metrics_proto protoreflect.FileDescriptor

var file_streammachine_api_metrics_v1_metrics_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb6, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x66, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x3e, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x33,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x2a, 0x53, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x4a, 0x4f,
	0x52, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x49, 0x4e, 0x4f,
	0x52, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x2a, 0x93, 0x01, 0x0a, 0x16, 0x4c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x4c, 0x41, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x41,
	0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x58, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x43, 0x54, 0x5f, 0x39, 0x30, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x43, 0x54, 0x5f,
	0x39, 0x35, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x43, 0x54, 0x5f, 0x39, 0x39, 0x10, 0x06,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x43, 0x54, 0x5f, 0x39, 0x39, 0x5f, 0x39, 0x10, 0x07, 0x32, 0xfe,
	0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x69, 0x0a, 0x1f, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x69, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f,
	0x76, 0x31, 0x3b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_streammachine_api_metrics_v1_metrics_proto_rawDescOnce sync.Once
	file_streammachine_api_metrics_v1_metrics_proto_rawDescData = file_streammachine_api_metrics_v1_metrics_proto_rawDesc
)

func file_streammachine_api_metrics_v1_metrics_proto_rawDescGZIP() []byte {
	file_streammachine_api_metrics_v1_metrics_proto_rawDescOnce.Do(func() {
		file_streammachine_api_metrics_v1_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_streammachine_api_metrics_v1_metrics_proto_rawDescData)
	})
	return file_streammachine_api_metrics_v1_metrics_proto_rawDescData
}

var file_streammachine_api_metrics_v1_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_streammachine_api_metrics_v1_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_streammachine_api_metrics_v1_metrics_proto_goTypes = []interface{}{
	(SystemState)(0),               // 0: streammachine.api.metrics.v1.SystemState
	(LatencyAggregationType)(0),    // 1: streammachine.api.metrics.v1.LatencyAggregationType
	(*GetSystemStateRequest)(nil),  // 2: streammachine.api.metrics.v1.GetSystemStateRequest
	(*GetSystemStateResponse)(nil), // 3: streammachine.api.metrics.v1.GetSystemStateResponse
	(*GetLatencyRequest)(nil),      // 4: streammachine.api.metrics.v1.GetLatencyRequest
	(*GetLatencyResponse)(nil),     // 5: streammachine.api.metrics.v1.GetLatencyResponse
	(*v1.StreamRef)(nil),           // 6: streammachine.api.entities.v1.StreamRef
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_streammachine_api_metrics_v1_metrics_proto_depIdxs = []int32{
	0, // 0: streammachine.api.metrics.v1.GetSystemStateResponse.overall_state:type_name -> streammachine.api.metrics.v1.SystemState
	6, // 1: streammachine.api.metrics.v1.GetLatencyRequest.ref:type_name -> streammachine.api.entities.v1.StreamRef
	7, // 2: streammachine.api.metrics.v1.GetLatencyRequest.start_time:type_name -> google.protobuf.Timestamp
	7, // 3: streammachine.api.metrics.v1.GetLatencyRequest.end_time:type_name -> google.protobuf.Timestamp
	1, // 4: streammachine.api.metrics.v1.GetLatencyRequest.aggregation_type:type_name -> streammachine.api.metrics.v1.LatencyAggregationType
	2, // 5: streammachine.api.metrics.v1.MetricsService.GetSystemState:input_type -> streammachine.api.metrics.v1.GetSystemStateRequest
	4, // 6: streammachine.api.metrics.v1.MetricsService.GetLatency:input_type -> streammachine.api.metrics.v1.GetLatencyRequest
	3, // 7: streammachine.api.metrics.v1.MetricsService.GetSystemState:output_type -> streammachine.api.metrics.v1.GetSystemStateResponse
	5, // 8: streammachine.api.metrics.v1.MetricsService.GetLatency:output_type -> streammachine.api.metrics.v1.GetLatencyResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_streammachine_api_metrics_v1_metrics_proto_init() }
func file_streammachine_api_metrics_v1_metrics_proto_init() {
	if File_streammachine_api_metrics_v1_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streammachine_api_metrics_v1_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streammachine_api_metrics_v1_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streammachine_api_metrics_v1_metrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streammachine_api_metrics_v1_metrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streammachine_api_metrics_v1_metrics_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_streammachine_api_metrics_v1_metrics_proto_goTypes,
		DependencyIndexes: file_streammachine_api_metrics_v1_metrics_proto_depIdxs,
		EnumInfos:         file_streammachine_api_metrics_v1_metrics_proto_enumTypes,
		MessageInfos:      file_streammachine_api_metrics_v1_metrics_proto_msgTypes,
	}.Build()
	File_streammachine_api_metrics_v1_metrics_proto = out.File
	file_streammachine_api_metrics_v1_metrics_proto_rawDesc = nil
	file_streammachine_api_metrics_v1_metrics_proto_goTypes = nil
	file_streammachine_api_metrics_v1_metrics_proto_depIdxs = nil
}
