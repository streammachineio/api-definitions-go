// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/ropa/v1alpha/ropa_v1alpha.proto

package ropa

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/strmprivacy/api-definitions-go/v3/api/entities/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Incident_IncidentType int32

const (
	Incident_INCIDENT_TYPE_UNSPECIFIED Incident_IncidentType = 0
	// When data is unintentionally exposed to the public.
	Incident_DATA_BREACH Incident_IncidentType = 2
	// When data is intentionally targeted to be stolen.
	Incident_DATA_HACK Incident_IncidentType = 3
)

// Enum value maps for Incident_IncidentType.
var (
	Incident_IncidentType_name = map[int32]string{
		0: "INCIDENT_TYPE_UNSPECIFIED",
		2: "DATA_BREACH",
		3: "DATA_HACK",
	}
	Incident_IncidentType_value = map[string]int32{
		"INCIDENT_TYPE_UNSPECIFIED": 0,
		"DATA_BREACH":               2,
		"DATA_HACK":                 3,
	}
)

func (x Incident_IncidentType) Enum() *Incident_IncidentType {
	p := new(Incident_IncidentType)
	*p = x
	return p
}

func (x Incident_IncidentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Incident_IncidentType) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_enumTypes[0].Descriptor()
}

func (Incident_IncidentType) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_enumTypes[0]
}

func (x Incident_IncidentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Incident_IncidentType.Descriptor instead.
func (Incident_IncidentType) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{6, 0}
}

// The request can be modified in the future to support a time-frame projection
// of the ROPA of the organization. Leaving that out for now.
type GetRopaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *GetRopaRequest) Reset() {
	*x = GetRopaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRopaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRopaRequest) ProtoMessage() {}

func (x *GetRopaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRopaRequest.ProtoReflect.Descriptor instead.
func (*GetRopaRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{0}
}

func (x *GetRopaRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type GetRopaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ropa *Ropa `protobuf:"bytes,1,opt,name=ropa,proto3" json:"ropa,omitempty"`
}

func (x *GetRopaResponse) Reset() {
	*x = GetRopaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRopaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRopaResponse) ProtoMessage() {}

func (x *GetRopaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRopaResponse.ProtoReflect.Descriptor instead.
func (*GetRopaResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{1}
}

func (x *GetRopaResponse) GetRopa() *Ropa {
	if x != nil {
		return x.Ropa
	}
	return nil
}

// This is very rudimentary at the moment, as we do not know all the details
// TODO We will definitely need to enforce that only manual entries can be added by end-users, and not automated entries.
type AddRopaEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string     `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Entry          *RopaEntry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *AddRopaEntryRequest) Reset() {
	*x = AddRopaEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRopaEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRopaEntryRequest) ProtoMessage() {}

func (x *AddRopaEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRopaEntryRequest.ProtoReflect.Descriptor instead.
func (*AddRopaEntryRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{2}
}

func (x *AddRopaEntryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AddRopaEntryRequest) GetEntry() *RopaEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type AddRopaEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *RopaEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *AddRopaEntryResponse) Reset() {
	*x = AddRopaEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRopaEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRopaEntryResponse) ProtoMessage() {}

func (x *AddRopaEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRopaEntryResponse.ProtoReflect.Descriptor instead.
func (*AddRopaEntryResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{3}
}

func (x *AddRopaEntryResponse) GetEntry() *RopaEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// A continuous collection of all first and third party data processing activities
// of an organization. It is a "living document" that should be updated constantly as things change.
// It is not a snapshot but a dynamic collection of the processing activities that at any time
// reflects the current state of the data processing activities.
// When a ROPA is requested for an audit, the auditor would normally expect the most recent version
// that reflects the current activities, not a historical log of all previous versions or changes.
// But this does not mean that the history of certain data processing activities can be ignored.
// For example, if data has been transferred or shared, or if incidents (hack / leak of certain data
// or whatever) have occurred, this should be reflected in the ROPA.
type Ropa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Ropa_Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	// TODO decide whether to include department or not
	Department string       `protobuf:"bytes,2,opt,name=department,proto3" json:"department,omitempty"`
	Entries    []*RopaEntry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *Ropa) Reset() {
	*x = Ropa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa) ProtoMessage() {}

func (x *Ropa) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa.ProtoReflect.Descriptor instead.
func (*Ropa) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{4}
}

func (x *Ropa) GetOrganization() *Ropa_Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *Ropa) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *Ropa) GetEntries() []*RopaEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type RopaEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entry:
	//
	//	*RopaEntry_ManualEntry_
	//	*RopaEntry_AutomatedEntry_
	Entry     isRopaEntry_Entry `protobuf_oneof:"entry"`
	Incidents []*Incident       `protobuf:"bytes,4,rep,name=incidents,proto3" json:"incidents,omitempty"`
}

func (x *RopaEntry) Reset() {
	*x = RopaEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry) ProtoMessage() {}

func (x *RopaEntry) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry.ProtoReflect.Descriptor instead.
func (*RopaEntry) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5}
}

func (m *RopaEntry) GetEntry() isRopaEntry_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *RopaEntry) GetManualEntry() *RopaEntry_ManualEntry {
	if x, ok := x.GetEntry().(*RopaEntry_ManualEntry_); ok {
		return x.ManualEntry
	}
	return nil
}

func (x *RopaEntry) GetAutomatedEntry() *RopaEntry_AutomatedEntry {
	if x, ok := x.GetEntry().(*RopaEntry_AutomatedEntry_); ok {
		return x.AutomatedEntry
	}
	return nil
}

func (x *RopaEntry) GetIncidents() []*Incident {
	if x != nil {
		return x.Incidents
	}
	return nil
}

type isRopaEntry_Entry interface {
	isRopaEntry_Entry()
}

type RopaEntry_ManualEntry_ struct {
	ManualEntry *RopaEntry_ManualEntry `protobuf:"bytes,1,opt,name=manual_entry,json=manualEntry,proto3,oneof"`
}

type RopaEntry_AutomatedEntry_ struct {
	AutomatedEntry *RopaEntry_AutomatedEntry `protobuf:"bytes,2,opt,name=automated_entry,json=automatedEntry,proto3,oneof"`
}

func (*RopaEntry_ManualEntry_) isRopaEntry_Entry() {}

func (*RopaEntry_AutomatedEntry_) isRopaEntry_Entry() {}

type Incident struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type        Incident_IncidentType  `protobuf:"varint,2,opt,name=type,proto3,enum=strmprivacy.api.ropa.v1alpha.Incident_IncidentType" json:"type,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Incident) Reset() {
	*x = Incident{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Incident) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Incident) ProtoMessage() {}

func (x *Incident) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Incident.ProtoReflect.Descriptor instead.
func (*Incident) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{6}
}

func (x *Incident) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Incident) GetType() Incident_IncidentType {
	if x != nil {
		return x.Type
	}
	return Incident_INCIDENT_TYPE_UNSPECIFIED
}

func (x *Incident) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Ropa_Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContactDetails        *Ropa_Organization_ContactDetails        `protobuf:"bytes,2,opt,name=contact_details,json=contactDetails,proto3" json:"contact_details,omitempty"`
	DataProtectionOfficer *Ropa_Organization_DataProtectionOfficer `protobuf:"bytes,3,opt,name=data_protection_officer,json=dataProtectionOfficer,proto3" json:"data_protection_officer,omitempty"`
}

func (x *Ropa_Organization) Reset() {
	*x = Ropa_Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa_Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa_Organization) ProtoMessage() {}

func (x *Ropa_Organization) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa_Organization.ProtoReflect.Descriptor instead.
func (*Ropa_Organization) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Ropa_Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ropa_Organization) GetContactDetails() *Ropa_Organization_ContactDetails {
	if x != nil {
		return x.ContactDetails
	}
	return nil
}

func (x *Ropa_Organization) GetDataProtectionOfficer() *Ropa_Organization_DataProtectionOfficer {
	if x != nil {
		return x.DataProtectionOfficer
	}
	return nil
}

type Ropa_Organization_ContactDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalName string `protobuf:"bytes,1,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone     string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Ropa_Organization_ContactDetails) Reset() {
	*x = Ropa_Organization_ContactDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa_Organization_ContactDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa_Organization_ContactDetails) ProtoMessage() {}

func (x *Ropa_Organization_ContactDetails) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa_Organization_ContactDetails.ProtoReflect.Descriptor instead.
func (*Ropa_Organization_ContactDetails) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Ropa_Organization_ContactDetails) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *Ropa_Organization_ContactDetails) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Ropa_Organization_ContactDetails) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Ropa_Organization_ContactDetails) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type Ropa_Organization_DataProtectionOfficer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Ropa_Organization_DataProtectionOfficer) Reset() {
	*x = Ropa_Organization_DataProtectionOfficer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa_Organization_DataProtectionOfficer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa_Organization_DataProtectionOfficer) ProtoMessage() {}

func (x *Ropa_Organization_DataProtectionOfficer) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa_Organization_DataProtectionOfficer.ProtoReflect.Descriptor instead.
func (*Ropa_Organization_DataProtectionOfficer) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{4, 0, 1}
}

func (x *Ropa_Organization_DataProtectionOfficer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ropa_Organization_DataProtectionOfficer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Manual entries in the ROPA are meant for keeping track of data processing
// activities that cannot be collected in an automated fashion.
// An example is a security camera that is positioned at the exit of on of
// the organization's buildings.
// TODO this may require more information, though I'm unsure how to structure this at this moment. We need more information on what is required.
type RopaEntry_ManualEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RopaEntry_ManualEntry) Reset() {
	*x = RopaEntry_ManualEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_ManualEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_ManualEntry) ProtoMessage() {}

func (x *RopaEntry_ManualEntry) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_ManualEntry.ProtoReflect.Descriptor instead.
func (*RopaEntry_ManualEntry) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 0}
}

func (x *RopaEntry_ManualEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// An automated ROPA entry, that is linked to a pipeline (and to a data contract?)
type RopaEntry_AutomatedEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO where does a ROPA entry start and end? How much of the lineage do we need to capture in a ROPA entry?
	// References to entities that are used as a data source.
	DataSources []*RopaEntry_DataAsset `protobuf:"bytes,1,rep,name=data_sources,json=dataSources,proto3" json:"data_sources,omitempty"`
	// References to entities that are used as a data destinations.
	DataDestinations []*RopaEntry_DataAsset `protobuf:"bytes,2,rep,name=data_destinations,json=dataDestinations,proto3" json:"data_destinations,omitempty"`
	// The data contract that is used for data processing
	// TODO decide whether this can be repeated or not
	DataContractReference *v1.DataContractRef `protobuf:"bytes,3,opt,name=data_contract_reference,json=dataContractReference,proto3" json:"data_contract_reference,omitempty"`
	// Which company is the owner of the data, who controls it?
	DataController *RopaEntry_DataActor `protobuf:"bytes,4,opt,name=data_controller,json=dataController,proto3" json:"data_controller,omitempty"`
	// Which company is the processor of the data, who uses the data?
	DataProcessor *RopaEntry_DataActor `protobuf:"bytes,5,opt,name=data_processor,json=dataProcessor,proto3" json:"data_processor,omitempty"`
	// What is the goal of the data processing?
	Purposes []string `protobuf:"bytes,6,rep,name=purposes,proto3" json:"purposes,omitempty"`
	// Who is the data subject in the data that is being processed?
	DataSubjectCategories []string `protobuf:"bytes,7,rep,name=data_subject_categories,json=dataSubjectCategories,proto3" json:"data_subject_categories,omitempty"`
	// What type of data is being processed?
	// e.g. browsing data, location data, contact details, transaction data, etc.
	ProcessedPersonalDataTypes []string `protobuf:"bytes,8,rep,name=processed_personal_data_types,json=processedPersonalDataTypes,proto3" json:"processed_personal_data_types,omitempty"`
	// Who receive the data?
	DataRecipients []string `protobuf:"bytes,9,rep,name=data_recipients,json=dataRecipients,proto3" json:"data_recipients,omitempty"`
	// TODO get more information on what this means
	DataTransferDetails string `protobuf:"bytes,10,opt,name=data_transfer_details,json=dataTransferDetails,proto3" json:"data_transfer_details,omitempty"`
	// How long should the data be kept?
	DataRetention *RopaEntry_DataRetention `protobuf:"bytes,11,opt,name=data_retention,json=dataRetention,proto3" json:"data_retention,omitempty"`
	// What measures are taken to ensure the security of the data?
	// e.g. encryption, pseudonymization, access control, security audits, etc.
	DataSecurityMeasures []string `protobuf:"bytes,12,rep,name=data_security_measures,json=dataSecurityMeasures,proto3" json:"data_security_measures,omitempty"`
	// What is the legal basis for the processing of the data?
	LegalBasis []string `protobuf:"bytes,13,rep,name=legal_basis,json=legalBasis,proto3" json:"legal_basis,omitempty"`
	// What actions are taken to ensure that only the minimum amount of data is processed to achieve the goal?
	DataMinimizationProcedures []string `protobuf:"bytes,14,rep,name=data_minimization_procedures,json=dataMinimizationProcedures,proto3" json:"data_minimization_procedures,omitempty"`
	// What actions are taken to ensure data access follows the principle of least privilege?
	DataAccessProcedures []string `protobuf:"bytes,15,rep,name=data_access_procedures,json=dataAccessProcedures,proto3" json:"data_access_procedures,omitempty"`
	// What data breach response plans are in place? What are the actions that are taken when a data breach occurs?
	DataBreachResponsePlans []string `protobuf:"bytes,16,rep,name=data_breach_response_plans,json=dataBreachResponsePlans,proto3" json:"data_breach_response_plans,omitempty"`
	// The information systems used to process the data.
	InformationSystems []string `protobuf:"bytes,17,rep,name=information_systems,json=informationSystems,proto3" json:"information_systems,omitempty"`
	// Additional information that is relevant to the data processing.
	// i.e. impact assessment reference, training and awareness programs, etc.
	// TODO decide whether this is the best approach to capture all this information.
	AdditionalInformation map[string]string `protobuf:"bytes,18,rep,name=additional_information,json=additionalInformation,proto3" json:"additional_information,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RopaEntry_AutomatedEntry) Reset() {
	*x = RopaEntry_AutomatedEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_AutomatedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_AutomatedEntry) ProtoMessage() {}

func (x *RopaEntry_AutomatedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_AutomatedEntry.ProtoReflect.Descriptor instead.
func (*RopaEntry_AutomatedEntry) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 1}
}

func (x *RopaEntry_AutomatedEntry) GetDataSources() []*RopaEntry_DataAsset {
	if x != nil {
		return x.DataSources
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataDestinations() []*RopaEntry_DataAsset {
	if x != nil {
		return x.DataDestinations
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataContractReference() *v1.DataContractRef {
	if x != nil {
		return x.DataContractReference
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataController() *RopaEntry_DataActor {
	if x != nil {
		return x.DataController
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataProcessor() *RopaEntry_DataActor {
	if x != nil {
		return x.DataProcessor
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetPurposes() []string {
	if x != nil {
		return x.Purposes
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataSubjectCategories() []string {
	if x != nil {
		return x.DataSubjectCategories
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetProcessedPersonalDataTypes() []string {
	if x != nil {
		return x.ProcessedPersonalDataTypes
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataRecipients() []string {
	if x != nil {
		return x.DataRecipients
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataTransferDetails() string {
	if x != nil {
		return x.DataTransferDetails
	}
	return ""
}

func (x *RopaEntry_AutomatedEntry) GetDataRetention() *RopaEntry_DataRetention {
	if x != nil {
		return x.DataRetention
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataSecurityMeasures() []string {
	if x != nil {
		return x.DataSecurityMeasures
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetLegalBasis() []string {
	if x != nil {
		return x.LegalBasis
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataMinimizationProcedures() []string {
	if x != nil {
		return x.DataMinimizationProcedures
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataAccessProcedures() []string {
	if x != nil {
		return x.DataAccessProcedures
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataBreachResponsePlans() []string {
	if x != nil {
		return x.DataBreachResponsePlans
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetInformationSystems() []string {
	if x != nil {
		return x.InformationSystems
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetAdditionalInformation() map[string]string {
	if x != nil {
		return x.AdditionalInformation
	}
	return nil
}

// This message acts as a collection of references to data processors.
// i.e. a stream, a key stream, a batch job, etc.
type RopaEntry_DataAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Ref:
	//
	//	*RopaEntry_DataAsset_Stream
	//	*RopaEntry_DataAsset_KeyStream
	//	*RopaEntry_DataAsset_BatchJob
	//	*RopaEntry_DataAsset_Other
	Ref isRopaEntry_DataAsset_Ref `protobuf_oneof:"ref"`
}

func (x *RopaEntry_DataAsset) Reset() {
	*x = RopaEntry_DataAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataAsset) ProtoMessage() {}

func (x *RopaEntry_DataAsset) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataAsset.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataAsset) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 2}
}

func (m *RopaEntry_DataAsset) GetRef() isRopaEntry_DataAsset_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetStream() *v1.StreamRef {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_Stream); ok {
		return x.Stream
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetKeyStream() *v1.KeyStreamRef {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_KeyStream); ok {
		return x.KeyStream
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetBatchJob() *v1.BatchJobRef {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_BatchJob); ok {
		return x.BatchJob
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetOther() string {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_Other); ok {
		return x.Other
	}
	return ""
}

type isRopaEntry_DataAsset_Ref interface {
	isRopaEntry_DataAsset_Ref()
}

type RopaEntry_DataAsset_Stream struct {
	Stream *v1.StreamRef `protobuf:"bytes,1,opt,name=stream,proto3,oneof"`
}

type RopaEntry_DataAsset_KeyStream struct {
	KeyStream *v1.KeyStreamRef `protobuf:"bytes,2,opt,name=key_stream,json=keyStream,proto3,oneof"`
}

type RopaEntry_DataAsset_BatchJob struct {
	BatchJob *v1.BatchJobRef `protobuf:"bytes,3,opt,name=batch_job,json=batchJob,proto3,oneof"`
}

type RopaEntry_DataAsset_Other struct {
	Other string `protobuf:"bytes,4,opt,name=other,proto3,oneof"`
}

func (*RopaEntry_DataAsset_Stream) isRopaEntry_DataAsset_Ref() {}

func (*RopaEntry_DataAsset_KeyStream) isRopaEntry_DataAsset_Ref() {}

func (*RopaEntry_DataAsset_BatchJob) isRopaEntry_DataAsset_Ref() {}

func (*RopaEntry_DataAsset_Other) isRopaEntry_DataAsset_Ref() {}

// This is either a controller or a processor of data.
// TODO name might not be the best, but this can be used for both a controller and processor.
type RopaEntry_DataActor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RopaEntry_DataActor) Reset() {
	*x = RopaEntry_DataActor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataActor) ProtoMessage() {}

func (x *RopaEntry_DataActor) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataActor.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataActor) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 3}
}

func (x *RopaEntry_DataActor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RopaEntry_DataRetention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the policy that holds the details of the data retention.
	// TODO Ignore empty is true since a policy might not be set yet.
	// TODO do we want a policy reference?
	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	// TODO This should be moved to the Policy message
	//
	// Types that are assignable to Retention:
	//
	//	*RopaEntry_DataRetention_FixedTime_
	//	*RopaEntry_DataRetention_UntilProcessIsFinished_
	//	*RopaEntry_DataRetention_AfterRelationshipTermination_
	Retention isRopaEntry_DataRetention_Retention `protobuf_oneof:"retention"`
}

func (x *RopaEntry_DataRetention) Reset() {
	*x = RopaEntry_DataRetention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention) ProtoMessage() {}

func (x *RopaEntry_DataRetention) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 4}
}

func (x *RopaEntry_DataRetention) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (m *RopaEntry_DataRetention) GetRetention() isRopaEntry_DataRetention_Retention {
	if m != nil {
		return m.Retention
	}
	return nil
}

func (x *RopaEntry_DataRetention) GetFixedTime() *RopaEntry_DataRetention_FixedTime {
	if x, ok := x.GetRetention().(*RopaEntry_DataRetention_FixedTime_); ok {
		return x.FixedTime
	}
	return nil
}

func (x *RopaEntry_DataRetention) GetUntilProcessIsFinished() *RopaEntry_DataRetention_UntilProcessIsFinished {
	if x, ok := x.GetRetention().(*RopaEntry_DataRetention_UntilProcessIsFinished_); ok {
		return x.UntilProcessIsFinished
	}
	return nil
}

func (x *RopaEntry_DataRetention) GetAfterRelationshipTermination() *RopaEntry_DataRetention_AfterRelationshipTermination {
	if x, ok := x.GetRetention().(*RopaEntry_DataRetention_AfterRelationshipTermination_); ok {
		return x.AfterRelationshipTermination
	}
	return nil
}

type isRopaEntry_DataRetention_Retention interface {
	isRopaEntry_DataRetention_Retention()
}

type RopaEntry_DataRetention_FixedTime_ struct {
	FixedTime *RopaEntry_DataRetention_FixedTime `protobuf:"bytes,2,opt,name=fixed_time,json=fixedTime,proto3,oneof"`
}

type RopaEntry_DataRetention_UntilProcessIsFinished_ struct {
	UntilProcessIsFinished *RopaEntry_DataRetention_UntilProcessIsFinished `protobuf:"bytes,3,opt,name=until_process_is_finished,json=untilProcessIsFinished,proto3,oneof"`
}

type RopaEntry_DataRetention_AfterRelationshipTermination_ struct {
	AfterRelationshipTermination *RopaEntry_DataRetention_AfterRelationshipTermination `protobuf:"bytes,4,opt,name=after_relationship_termination,json=afterRelationshipTermination,proto3,oneof"`
}

func (*RopaEntry_DataRetention_FixedTime_) isRopaEntry_DataRetention_Retention() {}

func (*RopaEntry_DataRetention_UntilProcessIsFinished_) isRopaEntry_DataRetention_Retention() {}

func (*RopaEntry_DataRetention_AfterRelationshipTermination_) isRopaEntry_DataRetention_Retention() {}

// At a fixed moment in time after data collection
type RopaEntry_DataRetention_FixedTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RopaEntry_DataRetention_FixedTime) Reset() {
	*x = RopaEntry_DataRetention_FixedTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention_FixedTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention_FixedTime) ProtoMessage() {}

func (x *RopaEntry_DataRetention_FixedTime) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention_FixedTime.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention_FixedTime) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 4, 0}
}

func (x *RopaEntry_DataRetention_FixedTime) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// For example, when a contract ends, or when a job applicant's recruitment
// process is finished.
type RopaEntry_DataRetention_UntilProcessIsFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) Reset() {
	*x = RopaEntry_DataRetention_UntilProcessIsFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention_UntilProcessIsFinished) ProtoMessage() {}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention_UntilProcessIsFinished.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention_UntilProcessIsFinished) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 4, 1}
}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// For example, when a customer relationship ends, the data must be kept
// for a certain period of time for legal reasons.
// Ref: https://www.dnb.nl/en/sector-information/open-book-supervision/open-book-supervision-sectors/crypto-service-providers/integrity-supervision-of-crypto-service-providers/wwft-crypto/transactiemonitoring/duty-to-retain-transaction-data/
type RopaEntry_DataRetention_AfterRelationshipTermination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RopaEntry_DataRetention_AfterRelationshipTermination) Reset() {
	*x = RopaEntry_DataRetention_AfterRelationshipTermination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention_AfterRelationshipTermination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention_AfterRelationshipTermination) ProtoMessage() {}

func (x *RopaEntry_DataRetention_AfterRelationshipTermination) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention_AfterRelationshipTermination.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention_AfterRelationshipTermination) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP(), []int{5, 4, 2}
}

func (x *RopaEntry_DataRetention_AfterRelationshipTermination) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto protoreflect.FileDescriptor

var file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x6f, 0x70, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72,
	0x6f, 0x70, 0x61, 0x5f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1c, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2d, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x70, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0f, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x49, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x70, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x04, 0x72, 0x6f, 0x70, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f,
	0x70, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x70, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x55, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x8b, 0x05, 0x0a, 0x04, 0x52, 0x6f,
	0x70, 0x61, 0x12, 0x53, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x2e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0xca, 0x03, 0x0a, 0x0c, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x67, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f,
	0x70, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x7d,
	0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52,
	0x6f, 0x70, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x1a, 0x75, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x1a, 0x41, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xe1, 0x14, 0x0a, 0x09, 0x52, 0x6f, 0x70, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f,
	0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x61, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x44, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x2f, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc6, 0x0a, 0x0a, 0x0e, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x54, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x5e, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x64, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x66, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x5c, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70,
	0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x14, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x62, 0x61, 0x73, 0x69, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x64,
	0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x64, 0x61, 0x74, 0x61, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x1a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x17, 0x64, 0x61, 0x74, 0x61, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x13,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x88, 0x01,
	0x0a, 0x16, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f,
	0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x48, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x81, 0x02, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x4a, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x66, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x47,
	0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x08, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42,
	0x05, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x1a, 0x1f, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xa8, 0x05, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42,
	0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x19, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x73, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52, 0x16, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x12, 0x9a, 0x01, 0x0a, 0x1e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70,
	0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x1c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x42,
	0x0a, 0x09, 0x46, 0x69, 0x78, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x3a, 0x0a, 0x16, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x55,
	0x0a, 0x1c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xfe, 0x01, 0x0a, 0x08,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a,
	0x0c, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x19, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x52, 0x45, 0x41, 0x43, 0x48, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x48, 0x41, 0x43, 0x4b, 0x10, 0x03, 0x32, 0xf4, 0x01, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x70, 0x61, 0x12,
	0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x70, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x70, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x52,
	0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x67, 0x0a, 0x1f, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x70, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x70, 0x61, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x72, 0x6f, 0x70, 0x61, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescOnce sync.Once
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescData = file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDesc
)

func file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescData)
	})
	return file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDescData
}

var file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_goTypes = []interface{}{
	(Incident_IncidentType)(0),                                   // 0: strmprivacy.api.ropa.v1alpha.Incident.IncidentType
	(*GetRopaRequest)(nil),                                       // 1: strmprivacy.api.ropa.v1alpha.GetRopaRequest
	(*GetRopaResponse)(nil),                                      // 2: strmprivacy.api.ropa.v1alpha.GetRopaResponse
	(*AddRopaEntryRequest)(nil),                                  // 3: strmprivacy.api.ropa.v1alpha.AddRopaEntryRequest
	(*AddRopaEntryResponse)(nil),                                 // 4: strmprivacy.api.ropa.v1alpha.AddRopaEntryResponse
	(*Ropa)(nil),                                                 // 5: strmprivacy.api.ropa.v1alpha.Ropa
	(*RopaEntry)(nil),                                            // 6: strmprivacy.api.ropa.v1alpha.RopaEntry
	(*Incident)(nil),                                             // 7: strmprivacy.api.ropa.v1alpha.Incident
	(*Ropa_Organization)(nil),                                    // 8: strmprivacy.api.ropa.v1alpha.Ropa.Organization
	(*Ropa_Organization_ContactDetails)(nil),                     // 9: strmprivacy.api.ropa.v1alpha.Ropa.Organization.ContactDetails
	(*Ropa_Organization_DataProtectionOfficer)(nil),              // 10: strmprivacy.api.ropa.v1alpha.Ropa.Organization.DataProtectionOfficer
	(*RopaEntry_ManualEntry)(nil),                                // 11: strmprivacy.api.ropa.v1alpha.RopaEntry.ManualEntry
	(*RopaEntry_AutomatedEntry)(nil),                             // 12: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry
	(*RopaEntry_DataAsset)(nil),                                  // 13: strmprivacy.api.ropa.v1alpha.RopaEntry.DataAsset
	(*RopaEntry_DataActor)(nil),                                  // 14: strmprivacy.api.ropa.v1alpha.RopaEntry.DataActor
	(*RopaEntry_DataRetention)(nil),                              // 15: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention
	nil,                                                          // 16: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.AdditionalInformationEntry
	(*RopaEntry_DataRetention_FixedTime)(nil),                    // 17: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.FixedTime
	(*RopaEntry_DataRetention_UntilProcessIsFinished)(nil),       // 18: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.UntilProcessIsFinished
	(*RopaEntry_DataRetention_AfterRelationshipTermination)(nil), // 19: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.AfterRelationshipTermination
	(*timestamppb.Timestamp)(nil),                                // 20: google.protobuf.Timestamp
	(*v1.DataContractRef)(nil),                                   // 21: strmprivacy.api.entities.v1.DataContractRef
	(*v1.StreamRef)(nil),                                         // 22: strmprivacy.api.entities.v1.StreamRef
	(*v1.KeyStreamRef)(nil),                                      // 23: strmprivacy.api.entities.v1.KeyStreamRef
	(*v1.BatchJobRef)(nil),                                       // 24: strmprivacy.api.entities.v1.BatchJobRef
	(*durationpb.Duration)(nil),                                  // 25: google.protobuf.Duration
}
var file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_depIdxs = []int32{
	5,  // 0: strmprivacy.api.ropa.v1alpha.GetRopaResponse.ropa:type_name -> strmprivacy.api.ropa.v1alpha.Ropa
	6,  // 1: strmprivacy.api.ropa.v1alpha.AddRopaEntryRequest.entry:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry
	6,  // 2: strmprivacy.api.ropa.v1alpha.AddRopaEntryResponse.entry:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry
	8,  // 3: strmprivacy.api.ropa.v1alpha.Ropa.organization:type_name -> strmprivacy.api.ropa.v1alpha.Ropa.Organization
	6,  // 4: strmprivacy.api.ropa.v1alpha.Ropa.entries:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry
	11, // 5: strmprivacy.api.ropa.v1alpha.RopaEntry.manual_entry:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.ManualEntry
	12, // 6: strmprivacy.api.ropa.v1alpha.RopaEntry.automated_entry:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry
	7,  // 7: strmprivacy.api.ropa.v1alpha.RopaEntry.incidents:type_name -> strmprivacy.api.ropa.v1alpha.Incident
	20, // 8: strmprivacy.api.ropa.v1alpha.Incident.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 9: strmprivacy.api.ropa.v1alpha.Incident.type:type_name -> strmprivacy.api.ropa.v1alpha.Incident.IncidentType
	9,  // 10: strmprivacy.api.ropa.v1alpha.Ropa.Organization.contact_details:type_name -> strmprivacy.api.ropa.v1alpha.Ropa.Organization.ContactDetails
	10, // 11: strmprivacy.api.ropa.v1alpha.Ropa.Organization.data_protection_officer:type_name -> strmprivacy.api.ropa.v1alpha.Ropa.Organization.DataProtectionOfficer
	13, // 12: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.data_sources:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataAsset
	13, // 13: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.data_destinations:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataAsset
	21, // 14: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.data_contract_reference:type_name -> strmprivacy.api.entities.v1.DataContractRef
	14, // 15: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.data_controller:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataActor
	14, // 16: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.data_processor:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataActor
	15, // 17: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.data_retention:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention
	16, // 18: strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.additional_information:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.AutomatedEntry.AdditionalInformationEntry
	22, // 19: strmprivacy.api.ropa.v1alpha.RopaEntry.DataAsset.stream:type_name -> strmprivacy.api.entities.v1.StreamRef
	23, // 20: strmprivacy.api.ropa.v1alpha.RopaEntry.DataAsset.key_stream:type_name -> strmprivacy.api.entities.v1.KeyStreamRef
	24, // 21: strmprivacy.api.ropa.v1alpha.RopaEntry.DataAsset.batch_job:type_name -> strmprivacy.api.entities.v1.BatchJobRef
	17, // 22: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.fixed_time:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.FixedTime
	18, // 23: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.until_process_is_finished:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.UntilProcessIsFinished
	19, // 24: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.after_relationship_termination:type_name -> strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.AfterRelationshipTermination
	25, // 25: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.FixedTime.duration:type_name -> google.protobuf.Duration
	25, // 26: strmprivacy.api.ropa.v1alpha.RopaEntry.DataRetention.AfterRelationshipTermination.duration:type_name -> google.protobuf.Duration
	1,  // 27: strmprivacy.api.ropa.v1alpha.ProjectPlansService.GetRopa:input_type -> strmprivacy.api.ropa.v1alpha.GetRopaRequest
	3,  // 28: strmprivacy.api.ropa.v1alpha.ProjectPlansService.AddRopaEntry:input_type -> strmprivacy.api.ropa.v1alpha.AddRopaEntryRequest
	2,  // 29: strmprivacy.api.ropa.v1alpha.ProjectPlansService.GetRopa:output_type -> strmprivacy.api.ropa.v1alpha.GetRopaResponse
	4,  // 30: strmprivacy.api.ropa.v1alpha.ProjectPlansService.AddRopaEntry:output_type -> strmprivacy.api.ropa.v1alpha.AddRopaEntryResponse
	29, // [29:31] is the sub-list for method output_type
	27, // [27:29] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_init() }
func file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_init() {
	if File_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRopaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRopaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRopaEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRopaEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Incident); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa_Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa_Organization_ContactDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa_Organization_DataProtectionOfficer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_ManualEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_AutomatedEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataActor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention_FixedTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention_UntilProcessIsFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention_AfterRelationshipTermination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*RopaEntry_ManualEntry_)(nil),
		(*RopaEntry_AutomatedEntry_)(nil),
	}
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*RopaEntry_DataAsset_Stream)(nil),
		(*RopaEntry_DataAsset_KeyStream)(nil),
		(*RopaEntry_DataAsset_BatchJob)(nil),
		(*RopaEntry_DataAsset_Other)(nil),
	}
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*RopaEntry_DataRetention_FixedTime_)(nil),
		(*RopaEntry_DataRetention_UntilProcessIsFinished_)(nil),
		(*RopaEntry_DataRetention_AfterRelationshipTermination_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_depIdxs,
		EnumInfos:         file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_enumTypes,
		MessageInfos:      file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto = out.File
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_rawDesc = nil
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_goTypes = nil
	file_strmprivacy_api_ropa_v1alpha_ropa_v1alpha_proto_depIdxs = nil
}
