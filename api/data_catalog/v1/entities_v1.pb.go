// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/data_catalog/v1/entities_v1.proto

// (-- api-linter: core::0203::optional-consistency=disabled
//     aip.dev/not-precedent: We need to do this because we assume required by default. --)

package data_catalog

import (
	v1 "github.com/strmprivacy/api-definitions-go/v2/api/entities/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SchemaFieldType int32

const (
	SchemaFieldType_SCHEMA_FIELD_TYPE_UNSPECIFIED SchemaFieldType = 0
	SchemaFieldType_STRING                        SchemaFieldType = 1
	SchemaFieldType_INT_32                        SchemaFieldType = 2
	SchemaFieldType_INT_64                        SchemaFieldType = 3
	SchemaFieldType_BOOLEAN                       SchemaFieldType = 4
)

// Enum value maps for SchemaFieldType.
var (
	SchemaFieldType_name = map[int32]string{
		0: "SCHEMA_FIELD_TYPE_UNSPECIFIED",
		1: "STRING",
		2: "INT_32",
		3: "INT_64",
		4: "BOOLEAN",
	}
	SchemaFieldType_value = map[string]int32{
		"SCHEMA_FIELD_TYPE_UNSPECIFIED": 0,
		"STRING":                        1,
		"INT_32":                        2,
		"INT_64":                        3,
		"BOOLEAN":                       4,
	}
)

func (x SchemaFieldType) Enum() *SchemaFieldType {
	p := new(SchemaFieldType)
	*p = x
	return p
}

func (x SchemaFieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchemaFieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes[0].Descriptor()
}

func (SchemaFieldType) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes[0]
}

func (x SchemaFieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchemaFieldType.Descriptor instead.
func (SchemaFieldType) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{0}
}

type DataPlatformType int32

const (
	DataPlatformType_DATA_PLATFORM_TYPE_UNSPECIFIED DataPlatformType = 0
	DataPlatformType_OPEN_API                       DataPlatformType = 1
	DataPlatformType_ADLS_GEN_1                     DataPlatformType = 2
	DataPlatformType_ADLS_GEN_2                     DataPlatformType = 3
	DataPlatformType_AIRFLOW                        DataPlatformType = 4
	DataPlatformType_AMBRY                          DataPlatformType = 5
	DataPlatformType_ATHENA                         DataPlatformType = 6
	DataPlatformType_BIGQUERY                       DataPlatformType = 7
	DataPlatformType_CLICKHOUSE                     DataPlatformType = 8
	DataPlatformType_COUCHBASE                      DataPlatformType = 9
	DataPlatformType_DATABRICKS                     DataPlatformType = 10
	DataPlatformType_DBT                            DataPlatformType = 11
	DataPlatformType_DELTA_LAKE                     DataPlatformType = 12
	DataPlatformType_DRUID                          DataPlatformType = 13
	DataPlatformType_ELASTICSEARCH                  DataPlatformType = 14
	DataPlatformType_EXTERNAL                       DataPlatformType = 15
	DataPlatformType_FEAST                          DataPlatformType = 16
	DataPlatformType_GLUE                           DataPlatformType = 17
	DataPlatformType_GREAT_EXPECTATIONS             DataPlatformType = 18
	DataPlatformType_HANA                           DataPlatformType = 19
	DataPlatformType_HDFS                           DataPlatformType = 20
	DataPlatformType_HIVE                           DataPlatformType = 21
	DataPlatformType_ICEBERG                        DataPlatformType = 22
	DataPlatformType_KAFKA                          DataPlatformType = 23
	DataPlatformType_KAFKA_CONNECT                  DataPlatformType = 24
	DataPlatformType_KUSTO                          DataPlatformType = 25
	DataPlatformType_LOOKER                         DataPlatformType = 26
	DataPlatformType_MARIADB                        DataPlatformType = 27
	DataPlatformType_METABASE                       DataPlatformType = 28
	DataPlatformType_MODE                           DataPlatformType = 29
	DataPlatformType_MONGODB                        DataPlatformType = 30
	DataPlatformType_MSSQL                          DataPlatformType = 31
	DataPlatformType_MYSQL                          DataPlatformType = 32
	DataPlatformType_NIFI                           DataPlatformType = 33
	DataPlatformType_ORACLE                         DataPlatformType = 34
	DataPlatformType_PINOT                          DataPlatformType = 35
	DataPlatformType_POSTGRES                       DataPlatformType = 36
	DataPlatformType_POWERBI                        DataPlatformType = 37
	DataPlatformType_PRESTO                         DataPlatformType = 38
	DataPlatformType_PRESTO_ON_HIVE                 DataPlatformType = 39
	DataPlatformType_PULSAR                         DataPlatformType = 40
	DataPlatformType_REDASH                         DataPlatformType = 41
	DataPlatformType_REDSHIFT                       DataPlatformType = 42
	DataPlatformType_AWS_S3                         DataPlatformType = 43
	DataPlatformType_SAGEMAKER                      DataPlatformType = 44
	DataPlatformType_SALESFORCE                     DataPlatformType = 45
	DataPlatformType_SNOWFLAKE                      DataPlatformType = 46
	DataPlatformType_SPARK                          DataPlatformType = 47
	DataPlatformType_SUPERSET                       DataPlatformType = 48
	DataPlatformType_TABLEAU                        DataPlatformType = 49
	DataPlatformType_TERADATA                       DataPlatformType = 50
	DataPlatformType_TRINO                          DataPlatformType = 51
	DataPlatformType_UNKNOWN                        DataPlatformType = 52
	DataPlatformType_VERTICA                        DataPlatformType = 53
	DataPlatformType_VOLDEMORT                      DataPlatformType = 54
)

// Enum value maps for DataPlatformType.
var (
	DataPlatformType_name = map[int32]string{
		0:  "DATA_PLATFORM_TYPE_UNSPECIFIED",
		1:  "OPEN_API",
		2:  "ADLS_GEN_1",
		3:  "ADLS_GEN_2",
		4:  "AIRFLOW",
		5:  "AMBRY",
		6:  "ATHENA",
		7:  "BIGQUERY",
		8:  "CLICKHOUSE",
		9:  "COUCHBASE",
		10: "DATABRICKS",
		11: "DBT",
		12: "DELTA_LAKE",
		13: "DRUID",
		14: "ELASTICSEARCH",
		15: "EXTERNAL",
		16: "FEAST",
		17: "GLUE",
		18: "GREAT_EXPECTATIONS",
		19: "HANA",
		20: "HDFS",
		21: "HIVE",
		22: "ICEBERG",
		23: "KAFKA",
		24: "KAFKA_CONNECT",
		25: "KUSTO",
		26: "LOOKER",
		27: "MARIADB",
		28: "METABASE",
		29: "MODE",
		30: "MONGODB",
		31: "MSSQL",
		32: "MYSQL",
		33: "NIFI",
		34: "ORACLE",
		35: "PINOT",
		36: "POSTGRES",
		37: "POWERBI",
		38: "PRESTO",
		39: "PRESTO_ON_HIVE",
		40: "PULSAR",
		41: "REDASH",
		42: "REDSHIFT",
		43: "AWS_S3",
		44: "SAGEMAKER",
		45: "SALESFORCE",
		46: "SNOWFLAKE",
		47: "SPARK",
		48: "SUPERSET",
		49: "TABLEAU",
		50: "TERADATA",
		51: "TRINO",
		52: "UNKNOWN",
		53: "VERTICA",
		54: "VOLDEMORT",
	}
	DataPlatformType_value = map[string]int32{
		"DATA_PLATFORM_TYPE_UNSPECIFIED": 0,
		"OPEN_API":                       1,
		"ADLS_GEN_1":                     2,
		"ADLS_GEN_2":                     3,
		"AIRFLOW":                        4,
		"AMBRY":                          5,
		"ATHENA":                         6,
		"BIGQUERY":                       7,
		"CLICKHOUSE":                     8,
		"COUCHBASE":                      9,
		"DATABRICKS":                     10,
		"DBT":                            11,
		"DELTA_LAKE":                     12,
		"DRUID":                          13,
		"ELASTICSEARCH":                  14,
		"EXTERNAL":                       15,
		"FEAST":                          16,
		"GLUE":                           17,
		"GREAT_EXPECTATIONS":             18,
		"HANA":                           19,
		"HDFS":                           20,
		"HIVE":                           21,
		"ICEBERG":                        22,
		"KAFKA":                          23,
		"KAFKA_CONNECT":                  24,
		"KUSTO":                          25,
		"LOOKER":                         26,
		"MARIADB":                        27,
		"METABASE":                       28,
		"MODE":                           29,
		"MONGODB":                        30,
		"MSSQL":                          31,
		"MYSQL":                          32,
		"NIFI":                           33,
		"ORACLE":                         34,
		"PINOT":                          35,
		"POSTGRES":                       36,
		"POWERBI":                        37,
		"PRESTO":                         38,
		"PRESTO_ON_HIVE":                 39,
		"PULSAR":                         40,
		"REDASH":                         41,
		"REDSHIFT":                       42,
		"AWS_S3":                         43,
		"SAGEMAKER":                      44,
		"SALESFORCE":                     45,
		"SNOWFLAKE":                      46,
		"SPARK":                          47,
		"SUPERSET":                       48,
		"TABLEAU":                        49,
		"TERADATA":                       50,
		"TRINO":                          51,
		"UNKNOWN":                        52,
		"VERTICA":                        53,
		"VOLDEMORT":                      54,
	}
)

func (x DataPlatformType) Enum() *DataPlatformType {
	p := new(DataPlatformType)
	*p = x
	return p
}

func (x DataPlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataPlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes[1].Descriptor()
}

func (DataPlatformType) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes[1]
}

func (x DataPlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataPlatformType.Descriptor instead.
func (DataPlatformType) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{1}
}

type Relation_Direction int32

const (
	Relation_DIRECTION_UNSPECIFIED Relation_Direction = 0
	Relation_IN                    Relation_Direction = 1
	Relation_OUT                   Relation_Direction = 2
	Relation_IN_OUT                Relation_Direction = 3
)

// Enum value maps for Relation_Direction.
var (
	Relation_Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "IN",
		2: "OUT",
		3: "IN_OUT",
	}
	Relation_Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"IN":                    1,
		"OUT":                   2,
		"IN_OUT":                3,
	}
)

func (x Relation_Direction) Enum() *Relation_Direction {
	p := new(Relation_Direction)
	*p = x
	return p
}

func (x Relation_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Relation_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes[2].Descriptor()
}

func (Relation_Direction) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes[2]
}

func (x Relation_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Relation_Direction.Descriptor instead.
func (Relation_Direction) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{6, 0}
}

// TODO add validations!
// a collection of structured data, which is given structure by a schema
type Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data catalog + urn to individual table/dataset (<database>.<database_schema>.<table>)
	// urn = data_catalog_urn + origin_urn
	Urn            string      `protobuf:"bytes,1,opt,name=urn,proto3" json:"urn,omitempty"`
	DataCatalogUrn string      `protobuf:"bytes,2,opt,name=data_catalog_urn,json=dataCatalogUrn,proto3" json:"data_catalog_urn,omitempty"`
	OriginUrn      string      `protobuf:"bytes,3,opt,name=origin_urn,json=originUrn,proto3" json:"origin_urn,omitempty"`
	DisplayName    string      `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Schema         *Schema     `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	Tags           []*Tag      `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Relations      []*Relation `protobuf:"bytes,7,rep,name=relations,proto3" json:"relations,omitempty"`
	Owners         []*Owner    `protobuf:"bytes,8,rep,name=owners,proto3" json:"owners,omitempty"`
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{0}
}

func (x *Dataset) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *Dataset) GetDataCatalogUrn() string {
	if x != nil {
		return x.DataCatalogUrn
	}
	return ""
}

func (x *Dataset) GetOriginUrn() string {
	if x != nil {
		return x.OriginUrn
	}
	return ""
}

func (x *Dataset) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Dataset) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *Dataset) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Dataset) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *Dataset) GetOwners() []*Owner {
	if x != nil {
		return x.Owners
	}
	return nil
}

type DatasetContentsConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetUrn string `protobuf:"bytes,1,opt,name=dataset_urn,json=datasetUrn,proto3" json:"dataset_urn,omitempty"`
	// Types that are assignable to ConnectionConfig:
	//
	//	*DatasetContentsConnection_S3Bucket
	//	*DatasetContentsConnection_GoogleCloudStorageBucket
	//	*DatasetContentsConnection_AzureBlobStorageContainer
	//	*DatasetContentsConnection_JdbcLocation
	ConnectionConfig isDatasetContentsConnection_ConnectionConfig `protobuf_oneof:"connection_config"`
}

func (x *DatasetContentsConnection) Reset() {
	*x = DatasetContentsConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetContentsConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetContentsConnection) ProtoMessage() {}

func (x *DatasetContentsConnection) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetContentsConnection.ProtoReflect.Descriptor instead.
func (*DatasetContentsConnection) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{1}
}

func (x *DatasetContentsConnection) GetDatasetUrn() string {
	if x != nil {
		return x.DatasetUrn
	}
	return ""
}

func (m *DatasetContentsConnection) GetConnectionConfig() isDatasetContentsConnection_ConnectionConfig {
	if m != nil {
		return m.ConnectionConfig
	}
	return nil
}

func (x *DatasetContentsConnection) GetS3Bucket() *v1.AwsS3BucketLocation {
	if x, ok := x.GetConnectionConfig().(*DatasetContentsConnection_S3Bucket); ok {
		return x.S3Bucket
	}
	return nil
}

func (x *DatasetContentsConnection) GetGoogleCloudStorageBucket() *v1.GoogleCloudStorageBucketLocation {
	if x, ok := x.GetConnectionConfig().(*DatasetContentsConnection_GoogleCloudStorageBucket); ok {
		return x.GoogleCloudStorageBucket
	}
	return nil
}

func (x *DatasetContentsConnection) GetAzureBlobStorageContainer() *v1.AzureBlobStorageContainerLocation {
	if x, ok := x.GetConnectionConfig().(*DatasetContentsConnection_AzureBlobStorageContainer); ok {
		return x.AzureBlobStorageContainer
	}
	return nil
}

func (x *DatasetContentsConnection) GetJdbcLocation() *v1.JdbcLocation {
	if x, ok := x.GetConnectionConfig().(*DatasetContentsConnection_JdbcLocation); ok {
		return x.JdbcLocation
	}
	return nil
}

type isDatasetContentsConnection_ConnectionConfig interface {
	isDatasetContentsConnection_ConnectionConfig()
}

type DatasetContentsConnection_S3Bucket struct {
	S3Bucket *v1.AwsS3BucketLocation `protobuf:"bytes,2,opt,name=s3_bucket,json=s3Bucket,proto3,oneof"`
}

type DatasetContentsConnection_GoogleCloudStorageBucket struct {
	GoogleCloudStorageBucket *v1.GoogleCloudStorageBucketLocation `protobuf:"bytes,3,opt,name=google_cloud_storage_bucket,json=googleCloudStorageBucket,proto3,oneof"`
}

type DatasetContentsConnection_AzureBlobStorageContainer struct {
	AzureBlobStorageContainer *v1.AzureBlobStorageContainerLocation `protobuf:"bytes,4,opt,name=azure_blob_storage_container,json=azureBlobStorageContainer,proto3,oneof"`
}

type DatasetContentsConnection_JdbcLocation struct {
	JdbcLocation *v1.JdbcLocation `protobuf:"bytes,7,opt,name=jdbc_location,json=jdbcLocation,proto3,oneof"`
}

func (*DatasetContentsConnection_S3Bucket) isDatasetContentsConnection_ConnectionConfig() {}

func (*DatasetContentsConnection_GoogleCloudStorageBucket) isDatasetContentsConnection_ConnectionConfig() {
}

func (*DatasetContentsConnection_AzureBlobStorageContainer) isDatasetContentsConnection_ConnectionConfig() {
}

func (*DatasetContentsConnection_JdbcLocation) isDatasetContentsConnection_ConnectionConfig() {}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaFields []*SchemaField `protobuf:"bytes,1,rep,name=schema_fields,json=schemaFields,proto3" json:"schema_fields,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{2}
}

func (x *Schema) GetSchemaFields() []*SchemaField {
	if x != nil {
		return x.SchemaFields
	}
	return nil
}

type SchemaField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a dot separated exact path to the schema field
	// e.g. customer.id, customer.address.zip_code
	Path string          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type SchemaFieldType `protobuf:"varint,2,opt,name=type,proto3,enum=strmprivacy.api.data_catalog.v1.SchemaFieldType" json:"type,omitempty"`
	Tags []*Tag          `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// urn uniquely identifies this schema field within DCET
	Urn string `protobuf:"bytes,4,opt,name=urn,proto3" json:"urn,omitempty"`
}

func (x *SchemaField) Reset() {
	*x = SchemaField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaField) ProtoMessage() {}

func (x *SchemaField) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaField.ProtoReflect.Descriptor instead.
func (*SchemaField) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{3}
}

func (x *SchemaField) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SchemaField) GetType() SchemaFieldType {
	if x != nil {
		return x.Type
	}
	return SchemaFieldType_SCHEMA_FIELD_TYPE_UNSPECIFIED
}

func (x *SchemaField) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SchemaField) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

// A tag classifies and categorizes data assets in data catalogs,
// behavior of systems can be altered based on tags. The purpose
// is to put a label on "something" to be able to recognize it
// as belonging to that collection.
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// urn uniquely identifies this tag within DCET
	Urn         string `protobuf:"bytes,2,opt,name=urn,proto3" json:"urn,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// css color
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// urn used on the data platform
	OriginUrn string `protobuf:"bytes,5,opt,name=origin_urn,json=originUrn,proto3" json:"origin_urn,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{4}
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *Tag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tag) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Tag) GetOriginUrn() string {
	if x != nil {
		return x.OriginUrn
	}
	return ""
}

type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// urn uniquely identifies this owner within DCET
	Urn string `protobuf:"bytes,2,opt,name=urn,proto3" json:"urn,omitempty"`
	// urn used on the data platform
	OriginUrn string `protobuf:"bytes,3,opt,name=origin_urn,json=originUrn,proto3" json:"origin_urn,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{5}
}

func (x *Owner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Owner) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *Owner) GetOriginUrn() string {
	if x != nil {
		return x.OriginUrn
	}
	return ""
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Relation_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=strmprivacy.api.data_catalog.v1.Relation_Direction" json:"direction,omitempty"`
	Relation  string             `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	// urn uniquely identifies this relation within DCET
	Urn string `protobuf:"bytes,3,opt,name=urn,proto3" json:"urn,omitempty"`
	// urn used on the data platform
	OriginUrn string `protobuf:"bytes,4,opt,name=origin_urn,json=originUrn,proto3" json:"origin_urn,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{6}
}

func (x *Relation) GetDirection() Relation_Direction {
	if x != nil {
		return x.Direction
	}
	return Relation_DIRECTION_UNSPECIFIED
}

func (x *Relation) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *Relation) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *Relation) GetOriginUrn() string {
	if x != nil {
		return x.OriginUrn
	}
	return ""
}

type DataCatalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// urn uniquely identifies this platform within DCET
	Urn string `protobuf:"bytes,3,opt,name=urn,proto3" json:"urn,omitempty"`
	// Types that are assignable to Connection:
	//
	//	*DataCatalog_DatahubConnection
	//	*DataCatalog_OddConnection
	Connection isDataCatalog_Connection `protobuf_oneof:"connection"`
}

func (x *DataCatalog) Reset() {
	*x = DataCatalog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataCatalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCatalog) ProtoMessage() {}

func (x *DataCatalog) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCatalog.ProtoReflect.Descriptor instead.
func (*DataCatalog) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{7}
}

func (x *DataCatalog) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataCatalog) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (m *DataCatalog) GetConnection() isDataCatalog_Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (x *DataCatalog) GetDatahubConnection() *DatahubConnection {
	if x, ok := x.GetConnection().(*DataCatalog_DatahubConnection); ok {
		return x.DatahubConnection
	}
	return nil
}

func (x *DataCatalog) GetOddConnection() *OpenDataDiscoveryConnection {
	if x, ok := x.GetConnection().(*DataCatalog_OddConnection); ok {
		return x.OddConnection
	}
	return nil
}

type isDataCatalog_Connection interface {
	isDataCatalog_Connection()
}

type DataCatalog_DatahubConnection struct {
	DatahubConnection *DatahubConnection `protobuf:"bytes,4,opt,name=datahub_connection,json=datahubConnection,proto3,oneof"`
}

type DataCatalog_OddConnection struct {
	OddConnection *OpenDataDiscoveryConnection `protobuf:"bytes,5,opt,name=odd_connection,json=oddConnection,proto3,oneof"`
}

func (*DataCatalog_DatahubConnection) isDataCatalog_Connection() {}

func (*DataCatalog_OddConnection) isDataCatalog_Connection() {}

type DatahubConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials *Credentials `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Uri         string       `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *DatahubConnection) Reset() {
	*x = DatahubConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatahubConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatahubConnection) ProtoMessage() {}

func (x *DatahubConnection) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatahubConnection.ProtoReflect.Descriptor instead.
func (*DatahubConnection) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{8}
}

func (x *DatahubConnection) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *DatahubConnection) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type OpenDataDiscoveryConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currently only supports Unauthenticated
	Credentials *Credentials `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Uri         string       `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *OpenDataDiscoveryConnection) Reset() {
	*x = OpenDataDiscoveryConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDataDiscoveryConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDataDiscoveryConnection) ProtoMessage() {}

func (x *OpenDataDiscoveryConnection) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDataDiscoveryConnection.ProtoReflect.Descriptor instead.
func (*OpenDataDiscoveryConnection) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{9}
}

func (x *OpenDataDiscoveryConnection) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *OpenDataDiscoveryConnection) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// urn uniquely identifies this entity within DCET
	Urn string `protobuf:"bytes,1,opt,name=urn,proto3" json:"urn,omitempty"`
	// Types that are assignable to Authentication:
	//
	//	*Credentials_Unauthenticated_
	//	*Credentials_Basic_
	//	*Credentials_Bearer_
	Authentication isCredentials_Authentication `protobuf_oneof:"authentication"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{10}
}

func (x *Credentials) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (m *Credentials) GetAuthentication() isCredentials_Authentication {
	if m != nil {
		return m.Authentication
	}
	return nil
}

func (x *Credentials) GetUnauthenticated() *Credentials_Unauthenticated {
	if x, ok := x.GetAuthentication().(*Credentials_Unauthenticated_); ok {
		return x.Unauthenticated
	}
	return nil
}

func (x *Credentials) GetBasic() *Credentials_Basic {
	if x, ok := x.GetAuthentication().(*Credentials_Basic_); ok {
		return x.Basic
	}
	return nil
}

func (x *Credentials) GetBearer() *Credentials_Bearer {
	if x, ok := x.GetAuthentication().(*Credentials_Bearer_); ok {
		return x.Bearer
	}
	return nil
}

type isCredentials_Authentication interface {
	isCredentials_Authentication()
}

type Credentials_Unauthenticated_ struct {
	Unauthenticated *Credentials_Unauthenticated `protobuf:"bytes,2,opt,name=unauthenticated,proto3,oneof"`
}

type Credentials_Basic_ struct {
	Basic *Credentials_Basic `protobuf:"bytes,3,opt,name=basic,proto3,oneof"`
}

type Credentials_Bearer_ struct {
	Bearer *Credentials_Bearer `protobuf:"bytes,4,opt,name=bearer,proto3,oneof"`
}

func (*Credentials_Unauthenticated_) isCredentials_Authentication() {}

func (*Credentials_Basic_) isCredentials_Authentication() {}

func (*Credentials_Bearer_) isCredentials_Authentication() {}

// The data platform responsible for storage (and processing).
type DataPlatform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// urn uniquely identifies this platform within DCET
	Urn string `protobuf:"bytes,1,opt,name=urn,proto3" json:"urn,omitempty"`
	// type is for instance Postgres, Kafka, CSV file, Databricks.
	Type DataPlatformType `protobuf:"varint,2,opt,name=type,proto3,enum=strmprivacy.api.data_catalog.v1.DataPlatformType" json:"type,omitempty"`
	// instance separates different instances. Postgres server 1, 2, ...
	Instance string `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	// uri to find logo material
	LogoUri string `protobuf:"bytes,4,opt,name=logo_uri,json=logoUri,proto3" json:"logo_uri,omitempty"`
	// urn used on the data platform
	OriginUrn string `protobuf:"bytes,5,opt,name=origin_urn,json=originUrn,proto3" json:"origin_urn,omitempty"`
}

func (x *DataPlatform) Reset() {
	*x = DataPlatform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPlatform) ProtoMessage() {}

func (x *DataPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPlatform.ProtoReflect.Descriptor instead.
func (*DataPlatform) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{11}
}

func (x *DataPlatform) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *DataPlatform) GetType() DataPlatformType {
	if x != nil {
		return x.Type
	}
	return DataPlatformType_DATA_PLATFORM_TYPE_UNSPECIFIED
}

func (x *DataPlatform) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *DataPlatform) GetLogoUri() string {
	if x != nil {
		return x.LogoUri
	}
	return ""
}

func (x *DataPlatform) GetOriginUrn() string {
	if x != nil {
		return x.OriginUrn
	}
	return ""
}

type Credentials_Unauthenticated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Credentials_Unauthenticated) Reset() {
	*x = Credentials_Unauthenticated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials_Unauthenticated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials_Unauthenticated) ProtoMessage() {}

func (x *Credentials_Unauthenticated) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials_Unauthenticated.ProtoReflect.Descriptor instead.
func (*Credentials_Unauthenticated) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{10, 0}
}

type Credentials_Basic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Credentials_Basic) Reset() {
	*x = Credentials_Basic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials_Basic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials_Basic) ProtoMessage() {}

func (x *Credentials_Basic) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials_Basic.ProtoReflect.Descriptor instead.
func (*Credentials_Basic) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Credentials_Basic) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Credentials_Basic) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Credentials_Bearer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Credentials_Bearer) Reset() {
	*x = Credentials_Bearer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials_Bearer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials_Bearer) ProtoMessage() {}

func (x *Credentials_Bearer) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials_Bearer.ProtoReflect.Descriptor instead.
func (*Credentials_Bearer) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Credentials_Bearer) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_strmprivacy_api_data_catalog_v1_entities_v1_proto protoreflect.FileDescriptor

var file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDesc = []byte{
	0x0a, 0x31, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x03, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x5f, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x38, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x22, 0xf8, 0x03, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x55, 0x72,
	0x6e, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x33, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x53, 0x33, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x73, 0x33, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x7e, 0x0a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x1c, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x6c, 0x6f,
	0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x42, 0x6c, 0x6f,
	0x62, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x61, 0x7a, 0x75,
	0x72, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0d, 0x6a, 0x64, 0x62, 0x63, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x64, 0x62, 0x63,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6a, 0x64, 0x62, 0x63,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5b, 0x0a,
	0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x51, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0c, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x44,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e,
	0x22, 0x87, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6e, 0x22, 0x51, 0x0a, 0x05, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6e, 0x22, 0xf4, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6e, 0x22,
	0x43, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x5f, 0x4f,
	0x55, 0x54, 0x10, 0x03, 0x22, 0x8d, 0x02, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x12, 0x63, 0x0a, 0x12, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x65, 0x0a, 0x0e, 0x6f, 0x64, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x7f, 0x0a, 0x1b, 0x4f,
	0x70, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xaa, 0x03, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x12, 0x68,
	0x0a, 0x0f, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52, 0x05, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x12, 0x4d, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x62, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x1a, 0x11, 0x0a, 0x0f, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x3f, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x1e, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x12, 0x45, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1e, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x69, 0x12,
	0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x55, 0x72, 0x6e, 0x2a, 0x65, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x54, 0x5f, 0x33, 0x32, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x54, 0x5f, 0x36, 0x34, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x04, 0x2a, 0x83, 0x06, 0x0a, 0x10, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x1e, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x44, 0x4c, 0x53, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x31, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x44, 0x4c, 0x53, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x32, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x49, 0x52, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x04, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x4d, 0x42, 0x52, 0x59, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x54, 0x48,
	0x45, 0x4e, 0x41, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x49, 0x47, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x48, 0x4f, 0x55, 0x53,
	0x45, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x55, 0x43, 0x48, 0x42, 0x41, 0x53, 0x45,
	0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x41, 0x54, 0x41, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x53,
	0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x42, 0x54, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x44,
	0x45, 0x4c, 0x54, 0x41, 0x5f, 0x4c, 0x41, 0x4b, 0x45, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x52, 0x55, 0x49, 0x44, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4c, 0x41, 0x53, 0x54, 0x49,
	0x43, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x45, 0x41, 0x53, 0x54,
	0x10, 0x10, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x4c, 0x55, 0x45, 0x10, 0x11, 0x12, 0x16, 0x0a, 0x12,
	0x47, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x10, 0x12, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x41, 0x4e, 0x41, 0x10, 0x13, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x44, 0x46, 0x53, 0x10, 0x14, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x56, 0x45,
	0x10, 0x15, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x43, 0x45, 0x42, 0x45, 0x52, 0x47, 0x10, 0x16, 0x12,
	0x09, 0x0a, 0x05, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x10, 0x17, 0x12, 0x11, 0x0a, 0x0d, 0x4b, 0x41,
	0x46, 0x4b, 0x41, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x18, 0x12, 0x09, 0x0a,
	0x05, 0x4b, 0x55, 0x53, 0x54, 0x4f, 0x10, 0x19, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x4f, 0x4b,
	0x45, 0x52, 0x10, 0x1a, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x52, 0x49, 0x41, 0x44, 0x42, 0x10,
	0x1b, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x45, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x10, 0x1c, 0x12,
	0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x1d, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e,
	0x47, 0x4f, 0x44, 0x42, 0x10, 0x1e, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x53, 0x53, 0x51, 0x4c, 0x10,
	0x1f, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x10, 0x20, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x49, 0x46, 0x49, 0x10, 0x21, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x52, 0x41, 0x43, 0x4c, 0x45,
	0x10, 0x22, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x49, 0x4e, 0x4f, 0x54, 0x10, 0x23, 0x12, 0x0c, 0x0a,
	0x08, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x10, 0x24, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x4f, 0x57, 0x45, 0x52, 0x42, 0x49, 0x10, 0x25, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x52, 0x45, 0x53,
	0x54, 0x4f, 0x10, 0x26, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x5f, 0x4f,
	0x4e, 0x5f, 0x48, 0x49, 0x56, 0x45, 0x10, 0x27, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x4c, 0x53,
	0x41, 0x52, 0x10, 0x28, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x44, 0x41, 0x53, 0x48, 0x10, 0x29,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x44, 0x53, 0x48, 0x49, 0x46, 0x54, 0x10, 0x2a, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x33, 0x10, 0x2b, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x41,
	0x47, 0x45, 0x4d, 0x41, 0x4b, 0x45, 0x52, 0x10, 0x2c, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x41, 0x4c,
	0x45, 0x53, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x2d, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4e, 0x4f,
	0x57, 0x46, 0x4c, 0x41, 0x4b, 0x45, 0x10, 0x2e, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x41, 0x52,
	0x4b, 0x10, 0x2f, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x55, 0x50, 0x45, 0x52, 0x53, 0x45, 0x54, 0x10,
	0x30, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x41, 0x55, 0x10, 0x31, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x45, 0x52, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x32, 0x12, 0x09, 0x0a, 0x05,
	0x54, 0x52, 0x49, 0x4e, 0x4f, 0x10, 0x33, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x34, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x10,
	0x35, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x4f, 0x4c, 0x44, 0x45, 0x4d, 0x4f, 0x52, 0x54, 0x10, 0x36,
	0x42, 0x75, 0x0a, 0x22, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescOnce sync.Once
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescData = file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDesc
)

func file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescData)
	})
	return file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDescData
}

var file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_strmprivacy_api_data_catalog_v1_entities_v1_proto_goTypes = []interface{}{
	(SchemaFieldType)(0),                         // 0: strmprivacy.api.data_catalog.v1.SchemaFieldType
	(DataPlatformType)(0),                        // 1: strmprivacy.api.data_catalog.v1.DataPlatformType
	(Relation_Direction)(0),                      // 2: strmprivacy.api.data_catalog.v1.Relation.Direction
	(*Dataset)(nil),                              // 3: strmprivacy.api.data_catalog.v1.Dataset
	(*DatasetContentsConnection)(nil),            // 4: strmprivacy.api.data_catalog.v1.DatasetContentsConnection
	(*Schema)(nil),                               // 5: strmprivacy.api.data_catalog.v1.Schema
	(*SchemaField)(nil),                          // 6: strmprivacy.api.data_catalog.v1.SchemaField
	(*Tag)(nil),                                  // 7: strmprivacy.api.data_catalog.v1.Tag
	(*Owner)(nil),                                // 8: strmprivacy.api.data_catalog.v1.Owner
	(*Relation)(nil),                             // 9: strmprivacy.api.data_catalog.v1.Relation
	(*DataCatalog)(nil),                          // 10: strmprivacy.api.data_catalog.v1.DataCatalog
	(*DatahubConnection)(nil),                    // 11: strmprivacy.api.data_catalog.v1.DatahubConnection
	(*OpenDataDiscoveryConnection)(nil),          // 12: strmprivacy.api.data_catalog.v1.OpenDataDiscoveryConnection
	(*Credentials)(nil),                          // 13: strmprivacy.api.data_catalog.v1.Credentials
	(*DataPlatform)(nil),                         // 14: strmprivacy.api.data_catalog.v1.DataPlatform
	(*Credentials_Unauthenticated)(nil),          // 15: strmprivacy.api.data_catalog.v1.Credentials.Unauthenticated
	(*Credentials_Basic)(nil),                    // 16: strmprivacy.api.data_catalog.v1.Credentials.Basic
	(*Credentials_Bearer)(nil),                   // 17: strmprivacy.api.data_catalog.v1.Credentials.Bearer
	(*v1.AwsS3BucketLocation)(nil),               // 18: strmprivacy.api.entities.v1.AwsS3BucketLocation
	(*v1.GoogleCloudStorageBucketLocation)(nil),  // 19: strmprivacy.api.entities.v1.GoogleCloudStorageBucketLocation
	(*v1.AzureBlobStorageContainerLocation)(nil), // 20: strmprivacy.api.entities.v1.AzureBlobStorageContainerLocation
	(*v1.JdbcLocation)(nil),                      // 21: strmprivacy.api.entities.v1.JdbcLocation
}
var file_strmprivacy_api_data_catalog_v1_entities_v1_proto_depIdxs = []int32{
	5,  // 0: strmprivacy.api.data_catalog.v1.Dataset.schema:type_name -> strmprivacy.api.data_catalog.v1.Schema
	7,  // 1: strmprivacy.api.data_catalog.v1.Dataset.tags:type_name -> strmprivacy.api.data_catalog.v1.Tag
	9,  // 2: strmprivacy.api.data_catalog.v1.Dataset.relations:type_name -> strmprivacy.api.data_catalog.v1.Relation
	8,  // 3: strmprivacy.api.data_catalog.v1.Dataset.owners:type_name -> strmprivacy.api.data_catalog.v1.Owner
	18, // 4: strmprivacy.api.data_catalog.v1.DatasetContentsConnection.s3_bucket:type_name -> strmprivacy.api.entities.v1.AwsS3BucketLocation
	19, // 5: strmprivacy.api.data_catalog.v1.DatasetContentsConnection.google_cloud_storage_bucket:type_name -> strmprivacy.api.entities.v1.GoogleCloudStorageBucketLocation
	20, // 6: strmprivacy.api.data_catalog.v1.DatasetContentsConnection.azure_blob_storage_container:type_name -> strmprivacy.api.entities.v1.AzureBlobStorageContainerLocation
	21, // 7: strmprivacy.api.data_catalog.v1.DatasetContentsConnection.jdbc_location:type_name -> strmprivacy.api.entities.v1.JdbcLocation
	6,  // 8: strmprivacy.api.data_catalog.v1.Schema.schema_fields:type_name -> strmprivacy.api.data_catalog.v1.SchemaField
	0,  // 9: strmprivacy.api.data_catalog.v1.SchemaField.type:type_name -> strmprivacy.api.data_catalog.v1.SchemaFieldType
	7,  // 10: strmprivacy.api.data_catalog.v1.SchemaField.tags:type_name -> strmprivacy.api.data_catalog.v1.Tag
	2,  // 11: strmprivacy.api.data_catalog.v1.Relation.direction:type_name -> strmprivacy.api.data_catalog.v1.Relation.Direction
	11, // 12: strmprivacy.api.data_catalog.v1.DataCatalog.datahub_connection:type_name -> strmprivacy.api.data_catalog.v1.DatahubConnection
	12, // 13: strmprivacy.api.data_catalog.v1.DataCatalog.odd_connection:type_name -> strmprivacy.api.data_catalog.v1.OpenDataDiscoveryConnection
	13, // 14: strmprivacy.api.data_catalog.v1.DatahubConnection.credentials:type_name -> strmprivacy.api.data_catalog.v1.Credentials
	13, // 15: strmprivacy.api.data_catalog.v1.OpenDataDiscoveryConnection.credentials:type_name -> strmprivacy.api.data_catalog.v1.Credentials
	15, // 16: strmprivacy.api.data_catalog.v1.Credentials.unauthenticated:type_name -> strmprivacy.api.data_catalog.v1.Credentials.Unauthenticated
	16, // 17: strmprivacy.api.data_catalog.v1.Credentials.basic:type_name -> strmprivacy.api.data_catalog.v1.Credentials.Basic
	17, // 18: strmprivacy.api.data_catalog.v1.Credentials.bearer:type_name -> strmprivacy.api.data_catalog.v1.Credentials.Bearer
	1,  // 19: strmprivacy.api.data_catalog.v1.DataPlatform.type:type_name -> strmprivacy.api.data_catalog.v1.DataPlatformType
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_data_catalog_v1_entities_v1_proto_init() }
func file_strmprivacy_api_data_catalog_v1_entities_v1_proto_init() {
	if File_strmprivacy_api_data_catalog_v1_entities_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetContentsConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataCatalog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatahubConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDataDiscoveryConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPlatform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials_Unauthenticated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials_Basic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials_Bearer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DatasetContentsConnection_S3Bucket)(nil),
		(*DatasetContentsConnection_GoogleCloudStorageBucket)(nil),
		(*DatasetContentsConnection_AzureBlobStorageContainer)(nil),
		(*DatasetContentsConnection_JdbcLocation)(nil),
	}
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*DataCatalog_DatahubConnection)(nil),
		(*DataCatalog_OddConnection)(nil),
	}
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Credentials_Unauthenticated_)(nil),
		(*Credentials_Basic_)(nil),
		(*Credentials_Bearer_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_strmprivacy_api_data_catalog_v1_entities_v1_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_data_catalog_v1_entities_v1_proto_depIdxs,
		EnumInfos:         file_strmprivacy_api_data_catalog_v1_entities_v1_proto_enumTypes,
		MessageInfos:      file_strmprivacy_api_data_catalog_v1_entities_v1_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_data_catalog_v1_entities_v1_proto = out.File
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_rawDesc = nil
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_goTypes = nil
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_depIdxs = nil
}
