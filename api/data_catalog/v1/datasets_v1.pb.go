// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/data_catalog/v1/datasets_v1.proto

package data_catalog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *DatasetRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetDatasetRequest) Reset() {
	*x = GetDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetRequest) ProtoMessage() {}

func (x *GetDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{0}
}

func (x *GetDatasetRequest) GetRef() *DatasetRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *GetDatasetResponse) Reset() {
	*x = GetDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetResponse) ProtoMessage() {}

func (x *GetDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GetDatasetResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

type ListDatasetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDatasetsRequest) Reset() {
	*x = ListDatasetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsRequest) ProtoMessage() {}

func (x *ListDatasetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{2}
}

type ListDatasetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *ListDatasetsResponse) Reset() {
	*x = ListDatasetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsResponse) ProtoMessage() {}

func (x *ListDatasetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{3}
}

func (x *ListDatasetsResponse) GetDatasets() []*Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

// (-- api-linter: core::0134::request-mask-required=disabled
//
//	aip.dev/not-precedent: We choose for the simple approach now --)
type UpdateDatasetTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref        *DatasetRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	AddTags    []*Tag      `protobuf:"bytes,2,rep,name=add_tags,json=addTags,proto3" json:"add_tags,omitempty"`
	RemoveTags []*Tag      `protobuf:"bytes,3,rep,name=remove_tags,json=removeTags,proto3" json:"remove_tags,omitempty"`
}

func (x *UpdateDatasetTagsRequest) Reset() {
	*x = UpdateDatasetTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetTagsRequest) ProtoMessage() {}

func (x *UpdateDatasetTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetTagsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDatasetTagsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDatasetTagsRequest) GetRef() *DatasetRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *UpdateDatasetTagsRequest) GetAddTags() []*Tag {
	if x != nil {
		return x.AddTags
	}
	return nil
}

func (x *UpdateDatasetTagsRequest) GetRemoveTags() []*Tag {
	if x != nil {
		return x.RemoveTags
	}
	return nil
}

type UpdateDatasetTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *UpdateDatasetTagsResponse) Reset() {
	*x = UpdateDatasetTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetTagsResponse) ProtoMessage() {}

func (x *UpdateDatasetTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetTagsResponse.ProtoReflect.Descriptor instead.
func (*UpdateDatasetTagsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDatasetTagsResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

// (-- api-linter: core::0134::request-mask-required=disabled
//
//	aip.dev/not-precedent: We choose for the simple approach now --)
type UpdateSchemaFieldTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref        *DatasetRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Path       string      `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	AddTags    []*Tag      `protobuf:"bytes,3,rep,name=add_tags,json=addTags,proto3" json:"add_tags,omitempty"`
	RemoveTags []*Tag      `protobuf:"bytes,4,rep,name=remove_tags,json=removeTags,proto3" json:"remove_tags,omitempty"`
}

func (x *UpdateSchemaFieldTagsRequest) Reset() {
	*x = UpdateSchemaFieldTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSchemaFieldTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSchemaFieldTagsRequest) ProtoMessage() {}

func (x *UpdateSchemaFieldTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSchemaFieldTagsRequest.ProtoReflect.Descriptor instead.
func (*UpdateSchemaFieldTagsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSchemaFieldTagsRequest) GetRef() *DatasetRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *UpdateSchemaFieldTagsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateSchemaFieldTagsRequest) GetAddTags() []*Tag {
	if x != nil {
		return x.AddTags
	}
	return nil
}

func (x *UpdateSchemaFieldTagsRequest) GetRemoveTags() []*Tag {
	if x != nil {
		return x.RemoveTags
	}
	return nil
}

type UpdateSchemaFieldTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *UpdateSchemaFieldTagsResponse) Reset() {
	*x = UpdateSchemaFieldTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSchemaFieldTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSchemaFieldTagsResponse) ProtoMessage() {}

func (x *UpdateSchemaFieldTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSchemaFieldTagsResponse.ProtoReflect.Descriptor instead.
func (*UpdateSchemaFieldTagsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSchemaFieldTagsResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

var File_strmprivacy_api_data_catalog_v1_datasets_v1_proto protoreflect.FileDescriptor

var file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDesc = []byte{
	0x0a, 0x31, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x1a, 0x31, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x58, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x3f, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x22, 0x5f,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22,
	0xf9, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52,
	0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x22, 0x63, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x32, 0xab, 0x04, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x12, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x12, 0x34, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x39,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x75,
	0x0a, 0x22, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61,
	0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x67,
	0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescOnce sync.Once
	file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescData = file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDesc
)

func file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescData)
	})
	return file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDescData
}

var file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_goTypes = []interface{}{
	(*GetDatasetRequest)(nil),             // 0: strmprivacy.api.data_catalog.v1.GetDatasetRequest
	(*GetDatasetResponse)(nil),            // 1: strmprivacy.api.data_catalog.v1.GetDatasetResponse
	(*ListDatasetsRequest)(nil),           // 2: strmprivacy.api.data_catalog.v1.ListDatasetsRequest
	(*ListDatasetsResponse)(nil),          // 3: strmprivacy.api.data_catalog.v1.ListDatasetsResponse
	(*UpdateDatasetTagsRequest)(nil),      // 4: strmprivacy.api.data_catalog.v1.UpdateDatasetTagsRequest
	(*UpdateDatasetTagsResponse)(nil),     // 5: strmprivacy.api.data_catalog.v1.UpdateDatasetTagsResponse
	(*UpdateSchemaFieldTagsRequest)(nil),  // 6: strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsRequest
	(*UpdateSchemaFieldTagsResponse)(nil), // 7: strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsResponse
	(*DatasetRef)(nil),                    // 8: strmprivacy.api.data_catalog.v1.DatasetRef
	(*Dataset)(nil),                       // 9: strmprivacy.api.data_catalog.v1.Dataset
	(*Tag)(nil),                           // 10: strmprivacy.api.data_catalog.v1.Tag
}
var file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_depIdxs = []int32{
	8,  // 0: strmprivacy.api.data_catalog.v1.GetDatasetRequest.ref:type_name -> strmprivacy.api.data_catalog.v1.DatasetRef
	9,  // 1: strmprivacy.api.data_catalog.v1.GetDatasetResponse.dataset:type_name -> strmprivacy.api.data_catalog.v1.Dataset
	9,  // 2: strmprivacy.api.data_catalog.v1.ListDatasetsResponse.datasets:type_name -> strmprivacy.api.data_catalog.v1.Dataset
	8,  // 3: strmprivacy.api.data_catalog.v1.UpdateDatasetTagsRequest.ref:type_name -> strmprivacy.api.data_catalog.v1.DatasetRef
	10, // 4: strmprivacy.api.data_catalog.v1.UpdateDatasetTagsRequest.add_tags:type_name -> strmprivacy.api.data_catalog.v1.Tag
	10, // 5: strmprivacy.api.data_catalog.v1.UpdateDatasetTagsRequest.remove_tags:type_name -> strmprivacy.api.data_catalog.v1.Tag
	9,  // 6: strmprivacy.api.data_catalog.v1.UpdateDatasetTagsResponse.dataset:type_name -> strmprivacy.api.data_catalog.v1.Dataset
	8,  // 7: strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsRequest.ref:type_name -> strmprivacy.api.data_catalog.v1.DatasetRef
	10, // 8: strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsRequest.add_tags:type_name -> strmprivacy.api.data_catalog.v1.Tag
	10, // 9: strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsRequest.remove_tags:type_name -> strmprivacy.api.data_catalog.v1.Tag
	9,  // 10: strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsResponse.dataset:type_name -> strmprivacy.api.data_catalog.v1.Dataset
	0,  // 11: strmprivacy.api.data_catalog.v1.DatasetsService.GetDataset:input_type -> strmprivacy.api.data_catalog.v1.GetDatasetRequest
	2,  // 12: strmprivacy.api.data_catalog.v1.DatasetsService.ListDatasets:input_type -> strmprivacy.api.data_catalog.v1.ListDatasetsRequest
	4,  // 13: strmprivacy.api.data_catalog.v1.DatasetsService.UpdateDatasetTags:input_type -> strmprivacy.api.data_catalog.v1.UpdateDatasetTagsRequest
	6,  // 14: strmprivacy.api.data_catalog.v1.DatasetsService.UpdateSchemaFieldTags:input_type -> strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsRequest
	1,  // 15: strmprivacy.api.data_catalog.v1.DatasetsService.GetDataset:output_type -> strmprivacy.api.data_catalog.v1.GetDatasetResponse
	3,  // 16: strmprivacy.api.data_catalog.v1.DatasetsService.ListDatasets:output_type -> strmprivacy.api.data_catalog.v1.ListDatasetsResponse
	5,  // 17: strmprivacy.api.data_catalog.v1.DatasetsService.UpdateDatasetTags:output_type -> strmprivacy.api.data_catalog.v1.UpdateDatasetTagsResponse
	7,  // 18: strmprivacy.api.data_catalog.v1.DatasetsService.UpdateSchemaFieldTags:output_type -> strmprivacy.api.data_catalog.v1.UpdateSchemaFieldTagsResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_init() }
func file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_init() {
	if File_strmprivacy_api_data_catalog_v1_datasets_v1_proto != nil {
		return
	}
	file_strmprivacy_api_data_catalog_v1_entities_v1_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasetTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasetTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSchemaFieldTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSchemaFieldTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_depIdxs,
		MessageInfos:      file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_data_catalog_v1_datasets_v1_proto = out.File
	file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_rawDesc = nil
	file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_goTypes = nil
	file_strmprivacy_api_data_catalog_v1_datasets_v1_proto_depIdxs = nil
}
