// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/data_subjects/v1/data_subjects_v1.proto

package data_subjects

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDataSubjectKeylinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data_subject_id is defined by the external organization, and can be almost any string (customer-id, car license plate
	// mac address, ....
	// here we're just adding a sanity constraints to limit to printable characters
	DataSubjectId []string `protobuf:"bytes,1,rep,name=data_subject_id,json=dataSubjectId,proto3" json:"data_subject_id,omitempty"`
	// this parameter is filled in in the management-api from the identity of the caller
	// it must be empty when a call is made to the management-api.
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *ListDataSubjectKeylinksRequest) Reset() {
	*x = ListDataSubjectKeylinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSubjectKeylinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSubjectKeylinksRequest) ProtoMessage() {}

func (x *ListDataSubjectKeylinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSubjectKeylinksRequest.ProtoReflect.Descriptor instead.
func (*ListDataSubjectKeylinksRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{0}
}

func (x *ListDataSubjectKeylinksRequest) GetDataSubjectId() []string {
	if x != nil {
		return x.DataSubjectId
	}
	return nil
}

func (x *ListDataSubjectKeylinksRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type ListDataSubjectKeylinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSubjectKeylinks []*DatasubjectKeylinks `protobuf:"bytes,1,rep,name=data_subject_keylinks,json=dataSubjectKeylinks,proto3" json:"data_subject_keylinks,omitempty"`
}

func (x *ListDataSubjectKeylinksResponse) Reset() {
	*x = ListDataSubjectKeylinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSubjectKeylinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSubjectKeylinksResponse) ProtoMessage() {}

func (x *ListDataSubjectKeylinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSubjectKeylinksResponse.ProtoReflect.Descriptor instead.
func (*ListDataSubjectKeylinksResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{1}
}

func (x *ListDataSubjectKeylinksResponse) GetDataSubjectKeylinks() []*DatasubjectKeylinks {
	if x != nil {
		return x.DataSubjectKeylinks
	}
	return nil
}

type AddDataSubjectsKeyLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId           string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DataSubjectKeylinks []*DatasubjectKeylinks `protobuf:"bytes,2,rep,name=data_subject_keylinks,json=dataSubjectKeylinks,proto3" json:"data_subject_keylinks,omitempty"`
}

func (x *AddDataSubjectsKeyLinksRequest) Reset() {
	*x = AddDataSubjectsKeyLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDataSubjectsKeyLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDataSubjectsKeyLinksRequest) ProtoMessage() {}

func (x *AddDataSubjectsKeyLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDataSubjectsKeyLinksRequest.ProtoReflect.Descriptor instead.
func (*AddDataSubjectsKeyLinksRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{2}
}

func (x *AddDataSubjectsKeyLinksRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddDataSubjectsKeyLinksRequest) GetDataSubjectKeylinks() []*DatasubjectKeylinks {
	if x != nil {
		return x.DataSubjectKeylinks
	}
	return nil
}

type AddDataSubjectsKeyLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoredCount int64 `protobuf:"varint,1,opt,name=stored_count,json=storedCount,proto3" json:"stored_count,omitempty"`
	// issues with stored data items. Now the service call just throws an exception
	//
	// Deprecated: Do not use.
	Issues []*AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *AddDataSubjectsKeyLinksResponse) Reset() {
	*x = AddDataSubjectsKeyLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDataSubjectsKeyLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDataSubjectsKeyLinksResponse) ProtoMessage() {}

func (x *AddDataSubjectsKeyLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDataSubjectsKeyLinksResponse.ProtoReflect.Descriptor instead.
func (*AddDataSubjectsKeyLinksResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{3}
}

func (x *AddDataSubjectsKeyLinksResponse) GetStoredCount() int64 {
	if x != nil {
		return x.StoredCount
	}
	return 0
}

// Deprecated: Do not use.
func (x *AddDataSubjectsKeyLinksResponse) GetIssues() []*AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues {
	if x != nil {
		return x.Issues
	}
	return nil
}

// one data subject 0 or more key links, each of which could have
// been used to encrypt data up to a certain point in time.
type DatasubjectKeylinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSubjectId         string                                     `protobuf:"bytes,1,opt,name=data_subject_id,json=dataSubjectId,proto3" json:"data_subject_id,omitempty"`
	KeylinksAndTimestamps []*DatasubjectKeylinks_KeylinkAndTimestamp `protobuf:"bytes,2,rep,name=keylinks_and_timestamps,json=keylinksAndTimestamps,proto3" json:"keylinks_and_timestamps,omitempty"`
}

func (x *DatasubjectKeylinks) Reset() {
	*x = DatasubjectKeylinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasubjectKeylinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasubjectKeylinks) ProtoMessage() {}

func (x *DatasubjectKeylinks) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasubjectKeylinks.ProtoReflect.Descriptor instead.
func (*DatasubjectKeylinks) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{4}
}

func (x *DatasubjectKeylinks) GetDataSubjectId() string {
	if x != nil {
		return x.DataSubjectId
	}
	return ""
}

func (x *DatasubjectKeylinks) GetKeylinksAndTimestamps() []*DatasubjectKeylinks_KeylinkAndTimestamp {
	if x != nil {
		return x.KeylinksAndTimestamps
	}
	return nil
}

type DeleteDataSubjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSubjects []string `protobuf:"bytes,1,rep,name=data_subjects,json=dataSubjects,proto3" json:"data_subjects,omitempty"`
	// this parameter is filled in in the management-api from the identity of the caller
	// it must be empty when a call is made to the management-api.
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *DeleteDataSubjectsRequest) Reset() {
	*x = DeleteDataSubjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataSubjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataSubjectsRequest) ProtoMessage() {}

func (x *DeleteDataSubjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataSubjectsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDataSubjectsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDataSubjectsRequest) GetDataSubjects() []string {
	if x != nil {
		return x.DataSubjects
	}
	return nil
}

func (x *DeleteDataSubjectsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type DeleteDataSubjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedKeylinksCount int64 `protobuf:"varint,1,opt,name=deleted_keylinks_count,json=deletedKeylinksCount,proto3" json:"deleted_keylinks_count,omitempty"`
}

func (x *DeleteDataSubjectsResponse) Reset() {
	*x = DeleteDataSubjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataSubjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataSubjectsResponse) ProtoMessage() {}

func (x *DeleteDataSubjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataSubjectsResponse.ProtoReflect.Descriptor instead.
func (*DeleteDataSubjectsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDataSubjectsResponse) GetDeletedKeylinksCount() int64 {
	if x != nil {
		return x.DeletedKeylinksCount
	}
	return 0
}

type ListDataSubjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// https://cloud.google.com/apis/design/design_patterns#list_pagination
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// maximum number of results returned. 0 means the server decides.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// this parameter is filled in in the management-api from the identity of the caller
	// it must be empty when a call is made to the management-api.
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *ListDataSubjectsRequest) Reset() {
	*x = ListDataSubjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSubjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSubjectsRequest) ProtoMessage() {}

func (x *ListDataSubjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSubjectsRequest.ProtoReflect.Descriptor instead.
func (*ListDataSubjectsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{7}
}

func (x *ListDataSubjectsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDataSubjectsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDataSubjectsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type ListDataSubjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSubjects  []*ListDataSubjectsResponse_DataSubjectInfo `protobuf:"bytes,1,rep,name=data_subjects,json=dataSubjects,proto3" json:"data_subjects,omitempty"`
	NextPageToken string                                      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDataSubjectsResponse) Reset() {
	*x = ListDataSubjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSubjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSubjectsResponse) ProtoMessage() {}

func (x *ListDataSubjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSubjectsResponse.ProtoReflect.Descriptor instead.
func (*ListDataSubjectsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{8}
}

func (x *ListDataSubjectsResponse) GetDataSubjects() []*ListDataSubjectsResponse_DataSubjectInfo {
	if x != nil {
		return x.DataSubjects
	}
	return nil
}

func (x *ListDataSubjectsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// this list is empty when nothing has gone wrong.
// issue_type are currently:
//
// DuplicateKey: (when you have the same project/data_subject/keylink tuple). Harmless
// InvalidArgument: when you have a project_id or key_link that is not a uuid
//
// Deprecated: Do not use.
type AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSubjectId string `protobuf:"bytes,1,opt,name=data_subject_id,json=dataSubjectId,proto3" json:"data_subject_id,omitempty"`
	KeyLink       string `protobuf:"bytes,2,opt,name=key_link,json=keyLink,proto3" json:"key_link,omitempty"`
	Message       string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	IssueType     string `protobuf:"bytes,4,opt,name=issue_type,json=issueType,proto3" json:"issue_type,omitempty"`
}

func (x *AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) Reset() {
	*x = AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) ProtoMessage() {}

func (x *AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues.ProtoReflect.Descriptor instead.
func (*AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) GetDataSubjectId() string {
	if x != nil {
		return x.DataSubjectId
	}
	return ""
}

func (x *AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) GetKeyLink() string {
	if x != nil {
		return x.KeyLink
	}
	return ""
}

func (x *AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues) GetIssueType() string {
	if x != nil {
		return x.IssueType
	}
	return ""
}

type DatasubjectKeylinks_KeylinkAndTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyLink    string                 `protobuf:"bytes,1,opt,name=key_link,json=keyLink,proto3" json:"key_link,omitempty"`
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
}

func (x *DatasubjectKeylinks_KeylinkAndTimestamp) Reset() {
	*x = DatasubjectKeylinks_KeylinkAndTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasubjectKeylinks_KeylinkAndTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasubjectKeylinks_KeylinkAndTimestamp) ProtoMessage() {}

func (x *DatasubjectKeylinks_KeylinkAndTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasubjectKeylinks_KeylinkAndTimestamp.ProtoReflect.Descriptor instead.
func (*DatasubjectKeylinks_KeylinkAndTimestamp) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DatasubjectKeylinks_KeylinkAndTimestamp) GetKeyLink() string {
	if x != nil {
		return x.KeyLink
	}
	return ""
}

func (x *DatasubjectKeylinks_KeylinkAndTimestamp) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryTime
	}
	return nil
}

// for future info expansion we put the data subject in a message
type ListDataSubjectsResponse_DataSubjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSubjectId string `protobuf:"bytes,1,opt,name=data_subject_id,json=dataSubjectId,proto3" json:"data_subject_id,omitempty"`
}

func (x *ListDataSubjectsResponse_DataSubjectInfo) Reset() {
	*x = ListDataSubjectsResponse_DataSubjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSubjectsResponse_DataSubjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSubjectsResponse_DataSubjectInfo) ProtoMessage() {}

func (x *ListDataSubjectsResponse_DataSubjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSubjectsResponse_DataSubjectInfo.ProtoReflect.Descriptor instead.
func (*ListDataSubjectsResponse_DataSubjectInfo) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListDataSubjectsResponse_DataSubjectInfo) GetDataSubjectId() string {
	if x != nil {
		return x.DataSubjectId
	}
	return ""
}

var File_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto protoreflect.FileDescriptor

var file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDesc = []byte{
	0x0a, 0x37, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x26, 0xfa, 0x42, 0x23, 0x92, 0x01, 0x20, 0x22, 0x1e, 0x72, 0x1c,
	0x32, 0x1a, 0x5e, 0x5b, 0x5c, 0x70, 0x4c, 0x5c, 0x70, 0x4e, 0x5c, 0x70, 0x53, 0x5c, 0x70, 0x4d,
	0x5c, 0x70, 0x50, 0x5d, 0x7b, 0x34, 0x2c, 0x31, 0x30, 0x30, 0x7d, 0x24, 0x52, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01,
	0x01, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x13, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x22, 0xb4, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x15,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x73, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x1a, 0x97, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65,
	0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x02,
	0x18, 0x01, 0x22, 0xe8, 0x02, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x49, 0x0a, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x21, 0xfa, 0x42, 0x1e, 0x72, 0x1c, 0x32, 0x1a, 0x5e, 0x5b, 0x5c, 0x70,
	0x4c, 0x5c, 0x70, 0x4e, 0x5c, 0x70, 0x53, 0x5c, 0x70, 0x4d, 0x5c, 0x70, 0x50, 0x5d, 0x7b, 0x34,
	0x2c, 0x31, 0x30, 0x30, 0x7d, 0x24, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x81, 0x01, 0x0a, 0x17, 0x6b, 0x65, 0x79, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4b,
	0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x15, 0x6b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x41, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x1a, 0x81, 0x01, 0x0a, 0x13, 0x4b, 0x65,
	0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x23, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x45, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9d, 0x01,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0d, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x25, 0xfa, 0x42, 0x22, 0x92, 0x01, 0x1f, 0x22, 0x1d, 0x72, 0x1b, 0x32, 0x19,
	0x5e, 0x5b, 0x5c, 0x70, 0x4c, 0x5c, 0x70, 0x4e, 0x5c, 0x70, 0x53, 0x5c, 0x70, 0x4d, 0x5c, 0x70,
	0x50, 0x5d, 0x7b, 0x34, 0x2c, 0x31, 0x30, 0x30, 0x7d, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x34, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x39,
	0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x32, 0xf5, 0x04, 0x0a, 0x13, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x9e, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x40, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x41, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x40,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x41, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x39, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x78, 0x0a, 0x23, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescOnce sync.Once
	file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescData = file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDesc
)

func file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescData)
	})
	return file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDescData
}

var file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_goTypes = []interface{}{
	(*ListDataSubjectKeylinksRequest)(nil),                        // 0: strmprivacy.api.data_subjects.v1.ListDataSubjectKeylinksRequest
	(*ListDataSubjectKeylinksResponse)(nil),                       // 1: strmprivacy.api.data_subjects.v1.ListDataSubjectKeylinksResponse
	(*AddDataSubjectsKeyLinksRequest)(nil),                        // 2: strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksRequest
	(*AddDataSubjectsKeyLinksResponse)(nil),                       // 3: strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksResponse
	(*DatasubjectKeylinks)(nil),                                   // 4: strmprivacy.api.data_subjects.v1.DatasubjectKeylinks
	(*DeleteDataSubjectsRequest)(nil),                             // 5: strmprivacy.api.data_subjects.v1.DeleteDataSubjectsRequest
	(*DeleteDataSubjectsResponse)(nil),                            // 6: strmprivacy.api.data_subjects.v1.DeleteDataSubjectsResponse
	(*ListDataSubjectsRequest)(nil),                               // 7: strmprivacy.api.data_subjects.v1.ListDataSubjectsRequest
	(*ListDataSubjectsResponse)(nil),                              // 8: strmprivacy.api.data_subjects.v1.ListDataSubjectsResponse
	(*AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues)(nil), // 9: strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksResponse.AddDataSubjectsIssues
	(*DatasubjectKeylinks_KeylinkAndTimestamp)(nil),               // 10: strmprivacy.api.data_subjects.v1.DatasubjectKeylinks.KeylinkAndTimestamp
	(*ListDataSubjectsResponse_DataSubjectInfo)(nil),              // 11: strmprivacy.api.data_subjects.v1.ListDataSubjectsResponse.DataSubjectInfo
	(*timestamppb.Timestamp)(nil),                                 // 12: google.protobuf.Timestamp
}
var file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_depIdxs = []int32{
	4,  // 0: strmprivacy.api.data_subjects.v1.ListDataSubjectKeylinksResponse.data_subject_keylinks:type_name -> strmprivacy.api.data_subjects.v1.DatasubjectKeylinks
	4,  // 1: strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksRequest.data_subject_keylinks:type_name -> strmprivacy.api.data_subjects.v1.DatasubjectKeylinks
	9,  // 2: strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksResponse.issues:type_name -> strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksResponse.AddDataSubjectsIssues
	10, // 3: strmprivacy.api.data_subjects.v1.DatasubjectKeylinks.keylinks_and_timestamps:type_name -> strmprivacy.api.data_subjects.v1.DatasubjectKeylinks.KeylinkAndTimestamp
	11, // 4: strmprivacy.api.data_subjects.v1.ListDataSubjectsResponse.data_subjects:type_name -> strmprivacy.api.data_subjects.v1.ListDataSubjectsResponse.DataSubjectInfo
	12, // 5: strmprivacy.api.data_subjects.v1.DatasubjectKeylinks.KeylinkAndTimestamp.expiry_time:type_name -> google.protobuf.Timestamp
	0,  // 6: strmprivacy.api.data_subjects.v1.DataSubjectsService.ListDataSubjectKeylinks:input_type -> strmprivacy.api.data_subjects.v1.ListDataSubjectKeylinksRequest
	2,  // 7: strmprivacy.api.data_subjects.v1.DataSubjectsService.AddDataSubjectsKeyLinks:input_type -> strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksRequest
	5,  // 8: strmprivacy.api.data_subjects.v1.DataSubjectsService.DeleteDataSubjects:input_type -> strmprivacy.api.data_subjects.v1.DeleteDataSubjectsRequest
	7,  // 9: strmprivacy.api.data_subjects.v1.DataSubjectsService.ListDataSubjects:input_type -> strmprivacy.api.data_subjects.v1.ListDataSubjectsRequest
	1,  // 10: strmprivacy.api.data_subjects.v1.DataSubjectsService.ListDataSubjectKeylinks:output_type -> strmprivacy.api.data_subjects.v1.ListDataSubjectKeylinksResponse
	3,  // 11: strmprivacy.api.data_subjects.v1.DataSubjectsService.AddDataSubjectsKeyLinks:output_type -> strmprivacy.api.data_subjects.v1.AddDataSubjectsKeyLinksResponse
	6,  // 12: strmprivacy.api.data_subjects.v1.DataSubjectsService.DeleteDataSubjects:output_type -> strmprivacy.api.data_subjects.v1.DeleteDataSubjectsResponse
	8,  // 13: strmprivacy.api.data_subjects.v1.DataSubjectsService.ListDataSubjects:output_type -> strmprivacy.api.data_subjects.v1.ListDataSubjectsResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_init() }
func file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_init() {
	if File_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSubjectKeylinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSubjectKeylinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDataSubjectsKeyLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDataSubjectsKeyLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasubjectKeylinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataSubjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataSubjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSubjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSubjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDataSubjectsKeyLinksResponse_AddDataSubjectsIssues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasubjectKeylinks_KeylinkAndTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSubjectsResponse_DataSubjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_depIdxs,
		MessageInfos:      file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto = out.File
	file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_rawDesc = nil
	file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_goTypes = nil
	file_strmprivacy_api_data_subjects_v1_data_subjects_v1_proto_depIdxs = nil
}
