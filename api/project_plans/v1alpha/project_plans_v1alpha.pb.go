// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/project_plans/v1alpha/project_plans_v1alpha.proto

package project_plans

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1alpha "github.com/strmprivacy/api-definitions-go/v3/api/entities/v1alpha"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListProjectPlansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project plan templates no longer exist
	//
	// Deprecated: Do not use.
	IsTemplate bool `protobuf:"varint,1,opt,name=is_template,json=isTemplate,proto3" json:"is_template,omitempty"`
	// project plan templates no longer exist
	//
	// Deprecated: Do not use.
	IncludeDummyTemplate bool `protobuf:"varint,2,opt,name=include_dummy_template,json=includeDummyTemplate,proto3" json:"include_dummy_template,omitempty"`
}

func (x *ListProjectPlansRequest) Reset() {
	*x = ListProjectPlansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectPlansRequest) ProtoMessage() {}

func (x *ListProjectPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectPlansRequest.ProtoReflect.Descriptor instead.
func (*ListProjectPlansRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
func (x *ListProjectPlansRequest) GetIsTemplate() bool {
	if x != nil {
		return x.IsTemplate
	}
	return false
}

// Deprecated: Do not use.
func (x *ListProjectPlansRequest) GetIncludeDummyTemplate() bool {
	if x != nil {
		return x.IncludeDummyTemplate
	}
	return false
}

type ListProjectPlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPlans []*v1alpha.ProjectPlan `protobuf:"bytes,1,rep,name=project_plans,json=projectPlans,proto3" json:"project_plans,omitempty"`
}

func (x *ListProjectPlansResponse) Reset() {
	*x = ListProjectPlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectPlansResponse) ProtoMessage() {}

func (x *ListProjectPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectPlansResponse.ProtoReflect.Descriptor instead.
func (*ListProjectPlansResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{1}
}

func (x *ListProjectPlansResponse) GetProjectPlans() []*v1alpha.ProjectPlan {
	if x != nil {
		return x.ProjectPlans
	}
	return nil
}

type GetProjectPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetProjectPlanRequest) Reset() {
	*x = GetProjectPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectPlanRequest) ProtoMessage() {}

func (x *GetProjectPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectPlanRequest.ProtoReflect.Descriptor instead.
func (*GetProjectPlanRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{2}
}

func (x *GetProjectPlanRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPlan *v1alpha.ProjectPlan `protobuf:"bytes,1,opt,name=project_plan,json=projectPlan,proto3" json:"project_plan,omitempty"`
}

func (x *GetProjectPlanResponse) Reset() {
	*x = GetProjectPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectPlanResponse) ProtoMessage() {}

func (x *GetProjectPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectPlanResponse.ProtoReflect.Descriptor instead.
func (*GetProjectPlanResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{3}
}

func (x *GetProjectPlanResponse) GetProjectPlan() *v1alpha.ProjectPlan {
	if x != nil {
		return x.ProjectPlan
	}
	return nil
}

type UpsertProjectPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPlan *v1alpha.ProjectPlan `protobuf:"bytes,1,opt,name=project_plan,json=projectPlan,proto3" json:"project_plan,omitempty"`
}

func (x *UpsertProjectPlanRequest) Reset() {
	*x = UpsertProjectPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertProjectPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertProjectPlanRequest) ProtoMessage() {}

func (x *UpsertProjectPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertProjectPlanRequest.ProtoReflect.Descriptor instead.
func (*UpsertProjectPlanRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertProjectPlanRequest) GetProjectPlan() *v1alpha.ProjectPlan {
	if x != nil {
		return x.ProjectPlan
	}
	return nil
}

type UpsertProjectPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPlan *v1alpha.ProjectPlan `protobuf:"bytes,1,opt,name=project_plan,json=projectPlan,proto3" json:"project_plan,omitempty"`
}

func (x *UpsertProjectPlanResponse) Reset() {
	*x = UpsertProjectPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertProjectPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertProjectPlanResponse) ProtoMessage() {}

func (x *UpsertProjectPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertProjectPlanResponse.ProtoReflect.Descriptor instead.
func (*UpsertProjectPlanResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertProjectPlanResponse) GetProjectPlan() *v1alpha.ProjectPlan {
	if x != nil {
		return x.ProjectPlan
	}
	return nil
}

type DeleteProjectPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *DeleteProjectPlanRequest) Reset() {
	*x = DeleteProjectPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectPlanRequest) ProtoMessage() {}

func (x *DeleteProjectPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectPlanRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectPlanRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProjectPlanRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type DeleteProjectPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProjectPlanResponse) Reset() {
	*x = DeleteProjectPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectPlanResponse) ProtoMessage() {}

func (x *DeleteProjectPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectPlanResponse.ProtoReflect.Descriptor instead.
func (*DeleteProjectPlanResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{7}
}

type BuildProjectPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPlanTemplateId string `protobuf:"bytes,1,opt,name=project_plan_template_id,json=projectPlanTemplateId,proto3" json:"project_plan_template_id,omitempty"`
	ProjectId             string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// do not store the generated project plan in the database
	// this is useful for previews, or generally for developer purposes
	ValidateOnly bool `protobuf:"varint,3,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	// allow overwriting existing project plans. If not set, an already existing
	// project plan would trigger an exception.
	AllowOverwrite bool `protobuf:"varint,4,opt,name=allow_overwrite,json=allowOverwrite,proto3" json:"allow_overwrite,omitempty"`
}

func (x *BuildProjectPlanRequest) Reset() {
	*x = BuildProjectPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProjectPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProjectPlanRequest) ProtoMessage() {}

func (x *BuildProjectPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProjectPlanRequest.ProtoReflect.Descriptor instead.
func (*BuildProjectPlanRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{8}
}

func (x *BuildProjectPlanRequest) GetProjectPlanTemplateId() string {
	if x != nil {
		return x.ProjectPlanTemplateId
	}
	return ""
}

func (x *BuildProjectPlanRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *BuildProjectPlanRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

func (x *BuildProjectPlanRequest) GetAllowOverwrite() bool {
	if x != nil {
		return x.AllowOverwrite
	}
	return false
}

type BuildProjectPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPlan *v1alpha.ProjectPlan `protobuf:"bytes,1,opt,name=project_plan,json=projectPlan,proto3" json:"project_plan,omitempty"`
}

func (x *BuildProjectPlanResponse) Reset() {
	*x = BuildProjectPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProjectPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProjectPlanResponse) ProtoMessage() {}

func (x *BuildProjectPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProjectPlanResponse.ProtoReflect.Descriptor instead.
func (*BuildProjectPlanResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{9}
}

func (x *BuildProjectPlanResponse) GetProjectPlan() *v1alpha.ProjectPlan {
	if x != nil {
		return x.ProjectPlan
	}
	return nil
}

type BuildProjectPlanFromTemplateIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormTemplateIds []string `protobuf:"bytes,1,rep,name=form_template_ids,json=formTemplateIds,proto3" json:"form_template_ids,omitempty"`
	ProjectId       string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// do not store the generated project plan in the database
	// this is useful for previews, or generally for developer purposes
	ValidateOnly bool `protobuf:"varint,3,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	// allow overwriting existing project plans. If not set, an already existing
	// project plan would trigger an exception.
	AllowOverwrite bool `protobuf:"varint,4,opt,name=allow_overwrite,json=allowOverwrite,proto3" json:"allow_overwrite,omitempty"`
}

func (x *BuildProjectPlanFromTemplateIdsRequest) Reset() {
	*x = BuildProjectPlanFromTemplateIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProjectPlanFromTemplateIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProjectPlanFromTemplateIdsRequest) ProtoMessage() {}

func (x *BuildProjectPlanFromTemplateIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProjectPlanFromTemplateIdsRequest.ProtoReflect.Descriptor instead.
func (*BuildProjectPlanFromTemplateIdsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{10}
}

func (x *BuildProjectPlanFromTemplateIdsRequest) GetFormTemplateIds() []string {
	if x != nil {
		return x.FormTemplateIds
	}
	return nil
}

func (x *BuildProjectPlanFromTemplateIdsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *BuildProjectPlanFromTemplateIdsRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

func (x *BuildProjectPlanFromTemplateIdsRequest) GetAllowOverwrite() bool {
	if x != nil {
		return x.AllowOverwrite
	}
	return false
}

type BuildProjectPlanFromTemplateIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPlan *v1alpha.ProjectPlan `protobuf:"bytes,1,opt,name=project_plan,json=projectPlan,proto3" json:"project_plan,omitempty"`
}

func (x *BuildProjectPlanFromTemplateIdsResponse) Reset() {
	*x = BuildProjectPlanFromTemplateIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProjectPlanFromTemplateIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProjectPlanFromTemplateIdsResponse) ProtoMessage() {}

func (x *BuildProjectPlanFromTemplateIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProjectPlanFromTemplateIdsResponse.ProtoReflect.Descriptor instead.
func (*BuildProjectPlanFromTemplateIdsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP(), []int{11}
}

func (x *BuildProjectPlanFromTemplateIdsResponse) GetProjectPlan() *v1alpha.ProjectPlan {
	if x != nil {
		return x.ProjectPlan
	}
	return nil
}

var File_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto protoreflect.FileDescriptor

var file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDesc = []byte{
	0x0a, 0x41, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x73, 0x5f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x25, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a,
	0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x6e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x71, 0x0a, 0x18, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x72, 0x0a,
	0x19, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x22, 0x3e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd3,
	0x01, 0x0a, 0x17, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x18, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x22, 0x6c, 0x0a, 0x18, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x26, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x11, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07,
	0x22, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x22,
	0x7b, 0x0a, 0x27, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x32, 0xc6, 0x07, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x3c, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x11, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x40, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a,
	0x10, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xc0, 0x01, 0x0a, 0x1f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x4d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x46,
	0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x82, 0x01, 0x0a, 0x28, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x50, 0x01, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70, 0x69,
	0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x67, 0x6f, 0x2f,
	0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescOnce sync.Once
	file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescData = file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDesc
)

func file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescData)
	})
	return file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDescData
}

var file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_goTypes = []interface{}{
	(*ListProjectPlansRequest)(nil),                 // 0: strmprivacy.api.project_plans.v1alpha.ListProjectPlansRequest
	(*ListProjectPlansResponse)(nil),                // 1: strmprivacy.api.project_plans.v1alpha.ListProjectPlansResponse
	(*GetProjectPlanRequest)(nil),                   // 2: strmprivacy.api.project_plans.v1alpha.GetProjectPlanRequest
	(*GetProjectPlanResponse)(nil),                  // 3: strmprivacy.api.project_plans.v1alpha.GetProjectPlanResponse
	(*UpsertProjectPlanRequest)(nil),                // 4: strmprivacy.api.project_plans.v1alpha.UpsertProjectPlanRequest
	(*UpsertProjectPlanResponse)(nil),               // 5: strmprivacy.api.project_plans.v1alpha.UpsertProjectPlanResponse
	(*DeleteProjectPlanRequest)(nil),                // 6: strmprivacy.api.project_plans.v1alpha.DeleteProjectPlanRequest
	(*DeleteProjectPlanResponse)(nil),               // 7: strmprivacy.api.project_plans.v1alpha.DeleteProjectPlanResponse
	(*BuildProjectPlanRequest)(nil),                 // 8: strmprivacy.api.project_plans.v1alpha.BuildProjectPlanRequest
	(*BuildProjectPlanResponse)(nil),                // 9: strmprivacy.api.project_plans.v1alpha.BuildProjectPlanResponse
	(*BuildProjectPlanFromTemplateIdsRequest)(nil),  // 10: strmprivacy.api.project_plans.v1alpha.BuildProjectPlanFromTemplateIdsRequest
	(*BuildProjectPlanFromTemplateIdsResponse)(nil), // 11: strmprivacy.api.project_plans.v1alpha.BuildProjectPlanFromTemplateIdsResponse
	(*v1alpha.ProjectPlan)(nil),                     // 12: strmprivacy.api.entities.v1alpha.ProjectPlan
}
var file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_depIdxs = []int32{
	12, // 0: strmprivacy.api.project_plans.v1alpha.ListProjectPlansResponse.project_plans:type_name -> strmprivacy.api.entities.v1alpha.ProjectPlan
	12, // 1: strmprivacy.api.project_plans.v1alpha.GetProjectPlanResponse.project_plan:type_name -> strmprivacy.api.entities.v1alpha.ProjectPlan
	12, // 2: strmprivacy.api.project_plans.v1alpha.UpsertProjectPlanRequest.project_plan:type_name -> strmprivacy.api.entities.v1alpha.ProjectPlan
	12, // 3: strmprivacy.api.project_plans.v1alpha.UpsertProjectPlanResponse.project_plan:type_name -> strmprivacy.api.entities.v1alpha.ProjectPlan
	12, // 4: strmprivacy.api.project_plans.v1alpha.BuildProjectPlanResponse.project_plan:type_name -> strmprivacy.api.entities.v1alpha.ProjectPlan
	12, // 5: strmprivacy.api.project_plans.v1alpha.BuildProjectPlanFromTemplateIdsResponse.project_plan:type_name -> strmprivacy.api.entities.v1alpha.ProjectPlan
	0,  // 6: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.ListProjectPlans:input_type -> strmprivacy.api.project_plans.v1alpha.ListProjectPlansRequest
	2,  // 7: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.GetProjectPlan:input_type -> strmprivacy.api.project_plans.v1alpha.GetProjectPlanRequest
	4,  // 8: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.UpsertProjectPlan:input_type -> strmprivacy.api.project_plans.v1alpha.UpsertProjectPlanRequest
	6,  // 9: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.DeleteProjectPlan:input_type -> strmprivacy.api.project_plans.v1alpha.DeleteProjectPlanRequest
	8,  // 10: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.BuildProjectPlan:input_type -> strmprivacy.api.project_plans.v1alpha.BuildProjectPlanRequest
	10, // 11: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.BuildProjectPlanFromTemplateIds:input_type -> strmprivacy.api.project_plans.v1alpha.BuildProjectPlanFromTemplateIdsRequest
	1,  // 12: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.ListProjectPlans:output_type -> strmprivacy.api.project_plans.v1alpha.ListProjectPlansResponse
	3,  // 13: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.GetProjectPlan:output_type -> strmprivacy.api.project_plans.v1alpha.GetProjectPlanResponse
	5,  // 14: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.UpsertProjectPlan:output_type -> strmprivacy.api.project_plans.v1alpha.UpsertProjectPlanResponse
	7,  // 15: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.DeleteProjectPlan:output_type -> strmprivacy.api.project_plans.v1alpha.DeleteProjectPlanResponse
	9,  // 16: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.BuildProjectPlan:output_type -> strmprivacy.api.project_plans.v1alpha.BuildProjectPlanResponse
	11, // 17: strmprivacy.api.project_plans.v1alpha.ProjectPlansService.BuildProjectPlanFromTemplateIds:output_type -> strmprivacy.api.project_plans.v1alpha.BuildProjectPlanFromTemplateIdsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_init() }
func file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_init() {
	if File_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectPlansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectPlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertProjectPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertProjectPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProjectPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProjectPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProjectPlanFromTemplateIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProjectPlanFromTemplateIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_depIdxs,
		MessageInfos:      file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto = out.File
	file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_rawDesc = nil
	file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_goTypes = nil
	file_strmprivacy_api_project_plans_v1alpha_project_plans_v1alpha_proto_depIdxs = nil
}
