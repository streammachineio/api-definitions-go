// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: strmprivacy/api/event_contracts/v1/event_contracts_v1.proto

package event_contracts

import (
	v1 "github.com/strmprivacy/api-definitions-go/v2/api/entities/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// List Event Contracts, with optional filters. All filters behave as AND conditions. OR is not possible.
type ListEventContractsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The billing_id, used for authentication.
	// If absent, only public Event Contracts can be returned. If present, public and owned private Event Contracts can be returned.
	//
	// Deprecated: Do not use.
	BillingId string `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// Filter on a string to do a full-text search.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// Filter on a given handle.
	Handle string `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	// Filter on a given name.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Filter public/private Event Contracts.
	PublicPrivate v1.FilterPublicPrivate `protobuf:"varint,5,opt,name=public_private,json=publicPrivate,proto3,enum=strmprivacy.api.entities.v1.FilterPublicPrivate" json:"public_private,omitempty"`
	// Filter based on Schema Ref to find all Event Contracts that depend on a Schema.
	SchemaRef *v1.SchemaRef `protobuf:"bytes,6,opt,name=schema_ref,json=schemaRef,proto3" json:"schema_ref,omitempty"`
	// Filter based on labels. It is possible to skip the label value.
	// In that case, the filter only filters on the key.
	Labels []*v1.Label `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	// Filter on domains.
	Domains []string `protobuf:"bytes,8,rep,name=domains,proto3" json:"domains,omitempty"`
	// Filter on industries.
	Industries []string `protobuf:"bytes,9,rep,name=industries,proto3" json:"industries,omitempty"`
}

func (x *ListEventContractsRequest) Reset() {
	*x = ListEventContractsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventContractsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventContractsRequest) ProtoMessage() {}

func (x *ListEventContractsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventContractsRequest.ProtoReflect.Descriptor instead.
func (*ListEventContractsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
func (x *ListEventContractsRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ListEventContractsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListEventContractsRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *ListEventContractsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListEventContractsRequest) GetPublicPrivate() v1.FilterPublicPrivate {
	if x != nil {
		return x.PublicPrivate
	}
	return v1.FilterPublicPrivate(0)
}

func (x *ListEventContractsRequest) GetSchemaRef() *v1.SchemaRef {
	if x != nil {
		return x.SchemaRef
	}
	return nil
}

func (x *ListEventContractsRequest) GetLabels() []*v1.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListEventContractsRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *ListEventContractsRequest) GetIndustries() []string {
	if x != nil {
		return x.Industries
	}
	return nil
}

type ListEventContractsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventContracts []*v1.EventContract `protobuf:"bytes,1,rep,name=event_contracts,json=eventContracts,proto3" json:"event_contracts,omitempty"`
}

func (x *ListEventContractsResponse) Reset() {
	*x = ListEventContractsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventContractsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventContractsResponse) ProtoMessage() {}

func (x *ListEventContractsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventContractsResponse.ProtoReflect.Descriptor instead.
func (*ListEventContractsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{1}
}

func (x *ListEventContractsResponse) GetEventContracts() []*v1.EventContract {
	if x != nil {
		return x.EventContracts
	}
	return nil
}

type GetEventContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId string               `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	Ref       *v1.EventContractRef `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetEventContractRequest) Reset() {
	*x = GetEventContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventContractRequest) ProtoMessage() {}

func (x *GetEventContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventContractRequest.ProtoReflect.Descriptor instead.
func (*GetEventContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Do not use.
func (x *GetEventContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *GetEventContractRequest) GetRef() *v1.EventContractRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetEventContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventContract *v1.EventContract `protobuf:"bytes,1,opt,name=event_contract,json=eventContract,proto3" json:"event_contract,omitempty"`
	Checksum      string            `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *GetEventContractResponse) Reset() {
	*x = GetEventContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventContractResponse) ProtoMessage() {}

func (x *GetEventContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventContractResponse.ProtoReflect.Descriptor instead.
func (*GetEventContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{3}
}

func (x *GetEventContractResponse) GetEventContract() *v1.EventContract {
	if x != nil {
		return x.EventContract
	}
	return nil
}

func (x *GetEventContractResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type CreateEventContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId     string            `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	EventContract *v1.EventContract `protobuf:"bytes,2,opt,name=event_contract,json=eventContract,proto3" json:"event_contract,omitempty"`
	ProjectId     string            `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *CreateEventContractRequest) Reset() {
	*x = CreateEventContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEventContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventContractRequest) ProtoMessage() {}

func (x *CreateEventContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventContractRequest.ProtoReflect.Descriptor instead.
func (*CreateEventContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{4}
}

// Deprecated: Do not use.
func (x *CreateEventContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *CreateEventContractRequest) GetEventContract() *v1.EventContract {
	if x != nil {
		return x.EventContract
	}
	return nil
}

func (x *CreateEventContractRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type CreateEventContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventContract *v1.EventContract `protobuf:"bytes,1,opt,name=event_contract,json=eventContract,proto3" json:"event_contract,omitempty"`
	Checksum      string            `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *CreateEventContractResponse) Reset() {
	*x = CreateEventContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEventContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventContractResponse) ProtoMessage() {}

func (x *CreateEventContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventContractResponse.ProtoReflect.Descriptor instead.
func (*CreateEventContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{5}
}

func (x *CreateEventContractResponse) GetEventContract() *v1.EventContract {
	if x != nil {
		return x.EventContract
	}
	return nil
}

func (x *CreateEventContractResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type UpdateEventContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId     string            `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	EventContract *v1.EventContract `protobuf:"bytes,2,opt,name=event_contract,json=eventContract,proto3" json:"event_contract,omitempty"`
	Checksum      string            `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// The fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	ProjectId  string                 `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *UpdateEventContractRequest) Reset() {
	*x = UpdateEventContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEventContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventContractRequest) ProtoMessage() {}

func (x *UpdateEventContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventContractRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Do not use.
func (x *UpdateEventContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *UpdateEventContractRequest) GetEventContract() *v1.EventContract {
	if x != nil {
		return x.EventContract
	}
	return nil
}

func (x *UpdateEventContractRequest) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *UpdateEventContractRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateEventContractRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type UpdateEventContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventContract *v1.EventContract `protobuf:"bytes,1,opt,name=event_contract,json=eventContract,proto3" json:"event_contract,omitempty"`
	Checksum      string            `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *UpdateEventContractResponse) Reset() {
	*x = UpdateEventContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEventContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventContractResponse) ProtoMessage() {}

func (x *UpdateEventContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventContractResponse.ProtoReflect.Descriptor instead.
func (*UpdateEventContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateEventContractResponse) GetEventContract() *v1.EventContract {
	if x != nil {
		return x.EventContract
	}
	return nil
}

func (x *UpdateEventContractResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type ActivateEventContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId        string               `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	EventContractRef *v1.EventContractRef `protobuf:"bytes,2,opt,name=event_contract_ref,json=eventContractRef,proto3" json:"event_contract_ref,omitempty"`
	ProjectId        string               `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ActivateEventContractRequest) Reset() {
	*x = ActivateEventContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateEventContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateEventContractRequest) ProtoMessage() {}

func (x *ActivateEventContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateEventContractRequest.ProtoReflect.Descriptor instead.
func (*ActivateEventContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Do not use.
func (x *ActivateEventContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ActivateEventContractRequest) GetEventContractRef() *v1.EventContractRef {
	if x != nil {
		return x.EventContractRef
	}
	return nil
}

func (x *ActivateEventContractRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ActivateEventContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivateEventContractResponse) Reset() {
	*x = ActivateEventContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateEventContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateEventContractResponse) ProtoMessage() {}

func (x *ActivateEventContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateEventContractResponse.ProtoReflect.Descriptor instead.
func (*ActivateEventContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{9}
}

type DeleteEventContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId        string               `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	EventContractRef *v1.EventContractRef `protobuf:"bytes,2,opt,name=event_contract_ref,json=eventContractRef,proto3" json:"event_contract_ref,omitempty"`
	ProjectId        string               `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *DeleteEventContractRequest) Reset() {
	*x = DeleteEventContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEventContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventContractRequest) ProtoMessage() {}

func (x *DeleteEventContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventContractRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{10}
}

// Deprecated: Do not use.
func (x *DeleteEventContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *DeleteEventContractRequest) GetEventContractRef() *v1.EventContractRef {
	if x != nil {
		return x.EventContractRef
	}
	return nil
}

func (x *DeleteEventContractRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type DeleteEventContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEventContractResponse) Reset() {
	*x = DeleteEventContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEventContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventContractResponse) ProtoMessage() {}

func (x *DeleteEventContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventContractResponse.ProtoReflect.Descriptor instead.
func (*DeleteEventContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{11}
}

type ArchiveEventContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId        string               `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	EventContractRef *v1.EventContractRef `protobuf:"bytes,2,opt,name=event_contract_ref,json=eventContractRef,proto3" json:"event_contract_ref,omitempty"`
	ProjectId        string               `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ArchiveEventContractRequest) Reset() {
	*x = ArchiveEventContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveEventContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveEventContractRequest) ProtoMessage() {}

func (x *ArchiveEventContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveEventContractRequest.ProtoReflect.Descriptor instead.
func (*ArchiveEventContractRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{12}
}

// Deprecated: Do not use.
func (x *ArchiveEventContractRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ArchiveEventContractRequest) GetEventContractRef() *v1.EventContractRef {
	if x != nil {
		return x.EventContractRef
	}
	return nil
}

func (x *ArchiveEventContractRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ArchiveEventContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArchiveEventContractResponse) Reset() {
	*x = ArchiveEventContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveEventContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveEventContractResponse) ProtoMessage() {}

func (x *ArchiveEventContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveEventContractResponse.ProtoReflect.Descriptor instead.
func (*ArchiveEventContractResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{13}
}

type ValidateMaskedFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	BillingId    string           `protobuf:"bytes,1,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	MaskedFields *v1.MaskedFields `protobuf:"bytes,2,opt,name=masked_fields,json=maskedFields,proto3" json:"masked_fields,omitempty"`
	ProjectId    string           `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ValidateMaskedFieldsRequest) Reset() {
	*x = ValidateMaskedFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMaskedFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMaskedFieldsRequest) ProtoMessage() {}

func (x *ValidateMaskedFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMaskedFieldsRequest.ProtoReflect.Descriptor instead.
func (*ValidateMaskedFieldsRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{14}
}

// Deprecated: Do not use.
func (x *ValidateMaskedFieldsRequest) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *ValidateMaskedFieldsRequest) GetMaskedFields() *v1.MaskedFields {
	if x != nil {
		return x.MaskedFields
	}
	return nil
}

func (x *ValidateMaskedFieldsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ValidateMaskedFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// any errors. When empty, all ok.
	Errors []*ValidateMaskedFieldsResponse_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ValidateMaskedFieldsResponse) Reset() {
	*x = ValidateMaskedFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMaskedFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMaskedFieldsResponse) ProtoMessage() {}

func (x *ValidateMaskedFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMaskedFieldsResponse.ProtoReflect.Descriptor instead.
func (*ValidateMaskedFieldsResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{15}
}

func (x *ValidateMaskedFieldsResponse) GetErrors() []*ValidateMaskedFieldsResponse_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetEventContractAndSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *v1.EventContractRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetEventContractAndSchemaRequest) Reset() {
	*x = GetEventContractAndSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventContractAndSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventContractAndSchemaRequest) ProtoMessage() {}

func (x *GetEventContractAndSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventContractAndSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetEventContractAndSchemaRequest) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{16}
}

func (x *GetEventContractAndSchemaRequest) GetRef() *v1.EventContractRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetEventContractAndSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventContract *v1.EventContract `protobuf:"bytes,1,opt,name=event_contract,json=eventContract,proto3" json:"event_contract,omitempty"`
	Schema        *v1.Schema        `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	ConfluentId   int32             `protobuf:"varint,3,opt,name=confluent_id,json=confluentId,proto3" json:"confluent_id,omitempty"`
}

func (x *GetEventContractAndSchemaResponse) Reset() {
	*x = GetEventContractAndSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventContractAndSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventContractAndSchemaResponse) ProtoMessage() {}

func (x *GetEventContractAndSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventContractAndSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetEventContractAndSchemaResponse) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{17}
}

func (x *GetEventContractAndSchemaResponse) GetEventContract() *v1.EventContract {
	if x != nil {
		return x.EventContract
	}
	return nil
}

func (x *GetEventContractAndSchemaResponse) GetSchema() *v1.Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *GetEventContractAndSchemaResponse) GetConfluentId() int32 {
	if x != nil {
		return x.ConfluentId
	}
	return 0
}

type ValidateMaskedFieldsResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the event contract that were giving errors
	EventContractRef *v1.EventContractRef `protobuf:"bytes,1,opt,name=event_contract_ref,json=eventContractRef,proto3" json:"event_contract_ref,omitempty"`
	// for non field related errors (such as no event contract, or not allowed)
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// list of errors per field
	Errors []*ValidateMaskedFieldsResponse_Error_FieldError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ValidateMaskedFieldsResponse_Error) Reset() {
	*x = ValidateMaskedFieldsResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMaskedFieldsResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMaskedFieldsResponse_Error) ProtoMessage() {}

func (x *ValidateMaskedFieldsResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMaskedFieldsResponse_Error.ProtoReflect.Descriptor instead.
func (*ValidateMaskedFieldsResponse_Error) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ValidateMaskedFieldsResponse_Error) GetEventContractRef() *v1.EventContractRef {
	if x != nil {
		return x.EventContractRef
	}
	return nil
}

func (x *ValidateMaskedFieldsResponse_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateMaskedFieldsResponse_Error) GetErrors() []*ValidateMaskedFieldsResponse_Error_FieldError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ValidateMaskedFieldsResponse_Error_FieldError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldPattern string `protobuf:"bytes,1,opt,name=field_pattern,json=fieldPattern,proto3" json:"field_pattern,omitempty"`
	FieldType    string `protobuf:"bytes,2,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	Message      string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidateMaskedFieldsResponse_Error_FieldError) Reset() {
	*x = ValidateMaskedFieldsResponse_Error_FieldError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMaskedFieldsResponse_Error_FieldError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMaskedFieldsResponse_Error_FieldError) ProtoMessage() {}

func (x *ValidateMaskedFieldsResponse_Error_FieldError) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMaskedFieldsResponse_Error_FieldError.ProtoReflect.Descriptor instead.
func (*ValidateMaskedFieldsResponse_Error_FieldError) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP(), []int{15, 0, 0}
}

func (x *ValidateMaskedFieldsResponse_Error_FieldError) GetFieldPattern() string {
	if x != nil {
		return x.FieldPattern
	}
	return ""
}

func (x *ValidateMaskedFieldsResponse_Error_FieldError) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *ValidateMaskedFieldsResponse_Error_FieldError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto protoreflect.FileDescriptor

var file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x03, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x66, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x66, 0x12, 0x3f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x12, 0x23, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0xb1, 0x01, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x91, 0x01,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x1f, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x22, 0x9e, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x40, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0xc7, 0x01, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x12, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x12, 0x22, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xc5, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x1b, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x12, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x12, 0x22, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xb4, 0x01, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xd6, 0x03, 0x0a, 0x1c, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0xd5, 0x02, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x5b, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x10,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x69, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x6a, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x63, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0xd6, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x3b, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32,
	0x8a, 0x0b, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8d, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x96, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x9c, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x40, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x96, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x14, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3f,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x40, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73,
	0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0xa8, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x44, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x7e, 0x0a, 0x25,
	0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d,
	0x67, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescOnce sync.Once
	file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescData = file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDesc
)

func file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescData)
	})
	return file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDescData
}

var file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_goTypes = []interface{}{
	(*ListEventContractsRequest)(nil),                     // 0: strmprivacy.api.event_contracts.v1.ListEventContractsRequest
	(*ListEventContractsResponse)(nil),                    // 1: strmprivacy.api.event_contracts.v1.ListEventContractsResponse
	(*GetEventContractRequest)(nil),                       // 2: strmprivacy.api.event_contracts.v1.GetEventContractRequest
	(*GetEventContractResponse)(nil),                      // 3: strmprivacy.api.event_contracts.v1.GetEventContractResponse
	(*CreateEventContractRequest)(nil),                    // 4: strmprivacy.api.event_contracts.v1.CreateEventContractRequest
	(*CreateEventContractResponse)(nil),                   // 5: strmprivacy.api.event_contracts.v1.CreateEventContractResponse
	(*UpdateEventContractRequest)(nil),                    // 6: strmprivacy.api.event_contracts.v1.UpdateEventContractRequest
	(*UpdateEventContractResponse)(nil),                   // 7: strmprivacy.api.event_contracts.v1.UpdateEventContractResponse
	(*ActivateEventContractRequest)(nil),                  // 8: strmprivacy.api.event_contracts.v1.ActivateEventContractRequest
	(*ActivateEventContractResponse)(nil),                 // 9: strmprivacy.api.event_contracts.v1.ActivateEventContractResponse
	(*DeleteEventContractRequest)(nil),                    // 10: strmprivacy.api.event_contracts.v1.DeleteEventContractRequest
	(*DeleteEventContractResponse)(nil),                   // 11: strmprivacy.api.event_contracts.v1.DeleteEventContractResponse
	(*ArchiveEventContractRequest)(nil),                   // 12: strmprivacy.api.event_contracts.v1.ArchiveEventContractRequest
	(*ArchiveEventContractResponse)(nil),                  // 13: strmprivacy.api.event_contracts.v1.ArchiveEventContractResponse
	(*ValidateMaskedFieldsRequest)(nil),                   // 14: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsRequest
	(*ValidateMaskedFieldsResponse)(nil),                  // 15: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse
	(*GetEventContractAndSchemaRequest)(nil),              // 16: strmprivacy.api.event_contracts.v1.GetEventContractAndSchemaRequest
	(*GetEventContractAndSchemaResponse)(nil),             // 17: strmprivacy.api.event_contracts.v1.GetEventContractAndSchemaResponse
	(*ValidateMaskedFieldsResponse_Error)(nil),            // 18: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse.Error
	(*ValidateMaskedFieldsResponse_Error_FieldError)(nil), // 19: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse.Error.FieldError
	(v1.FilterPublicPrivate)(0),                           // 20: strmprivacy.api.entities.v1.FilterPublicPrivate
	(*v1.SchemaRef)(nil),                                  // 21: strmprivacy.api.entities.v1.SchemaRef
	(*v1.Label)(nil),                                      // 22: strmprivacy.api.entities.v1.Label
	(*v1.EventContract)(nil),                              // 23: strmprivacy.api.entities.v1.EventContract
	(*v1.EventContractRef)(nil),                           // 24: strmprivacy.api.entities.v1.EventContractRef
	(*fieldmaskpb.FieldMask)(nil),                         // 25: google.protobuf.FieldMask
	(*v1.MaskedFields)(nil),                               // 26: strmprivacy.api.entities.v1.MaskedFields
	(*v1.Schema)(nil),                                     // 27: strmprivacy.api.entities.v1.Schema
}
var file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_depIdxs = []int32{
	20, // 0: strmprivacy.api.event_contracts.v1.ListEventContractsRequest.public_private:type_name -> strmprivacy.api.entities.v1.FilterPublicPrivate
	21, // 1: strmprivacy.api.event_contracts.v1.ListEventContractsRequest.schema_ref:type_name -> strmprivacy.api.entities.v1.SchemaRef
	22, // 2: strmprivacy.api.event_contracts.v1.ListEventContractsRequest.labels:type_name -> strmprivacy.api.entities.v1.Label
	23, // 3: strmprivacy.api.event_contracts.v1.ListEventContractsResponse.event_contracts:type_name -> strmprivacy.api.entities.v1.EventContract
	24, // 4: strmprivacy.api.event_contracts.v1.GetEventContractRequest.ref:type_name -> strmprivacy.api.entities.v1.EventContractRef
	23, // 5: strmprivacy.api.event_contracts.v1.GetEventContractResponse.event_contract:type_name -> strmprivacy.api.entities.v1.EventContract
	23, // 6: strmprivacy.api.event_contracts.v1.CreateEventContractRequest.event_contract:type_name -> strmprivacy.api.entities.v1.EventContract
	23, // 7: strmprivacy.api.event_contracts.v1.CreateEventContractResponse.event_contract:type_name -> strmprivacy.api.entities.v1.EventContract
	23, // 8: strmprivacy.api.event_contracts.v1.UpdateEventContractRequest.event_contract:type_name -> strmprivacy.api.entities.v1.EventContract
	25, // 9: strmprivacy.api.event_contracts.v1.UpdateEventContractRequest.update_mask:type_name -> google.protobuf.FieldMask
	23, // 10: strmprivacy.api.event_contracts.v1.UpdateEventContractResponse.event_contract:type_name -> strmprivacy.api.entities.v1.EventContract
	24, // 11: strmprivacy.api.event_contracts.v1.ActivateEventContractRequest.event_contract_ref:type_name -> strmprivacy.api.entities.v1.EventContractRef
	24, // 12: strmprivacy.api.event_contracts.v1.DeleteEventContractRequest.event_contract_ref:type_name -> strmprivacy.api.entities.v1.EventContractRef
	24, // 13: strmprivacy.api.event_contracts.v1.ArchiveEventContractRequest.event_contract_ref:type_name -> strmprivacy.api.entities.v1.EventContractRef
	26, // 14: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsRequest.masked_fields:type_name -> strmprivacy.api.entities.v1.MaskedFields
	18, // 15: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse.errors:type_name -> strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse.Error
	24, // 16: strmprivacy.api.event_contracts.v1.GetEventContractAndSchemaRequest.ref:type_name -> strmprivacy.api.entities.v1.EventContractRef
	23, // 17: strmprivacy.api.event_contracts.v1.GetEventContractAndSchemaResponse.event_contract:type_name -> strmprivacy.api.entities.v1.EventContract
	27, // 18: strmprivacy.api.event_contracts.v1.GetEventContractAndSchemaResponse.schema:type_name -> strmprivacy.api.entities.v1.Schema
	24, // 19: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse.Error.event_contract_ref:type_name -> strmprivacy.api.entities.v1.EventContractRef
	19, // 20: strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse.Error.errors:type_name -> strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse.Error.FieldError
	0,  // 21: strmprivacy.api.event_contracts.v1.EventContractsService.ListEventContracts:input_type -> strmprivacy.api.event_contracts.v1.ListEventContractsRequest
	2,  // 22: strmprivacy.api.event_contracts.v1.EventContractsService.GetEventContract:input_type -> strmprivacy.api.event_contracts.v1.GetEventContractRequest
	4,  // 23: strmprivacy.api.event_contracts.v1.EventContractsService.CreateEventContract:input_type -> strmprivacy.api.event_contracts.v1.CreateEventContractRequest
	6,  // 24: strmprivacy.api.event_contracts.v1.EventContractsService.UpdateEventContract:input_type -> strmprivacy.api.event_contracts.v1.UpdateEventContractRequest
	8,  // 25: strmprivacy.api.event_contracts.v1.EventContractsService.ActivateEventContract:input_type -> strmprivacy.api.event_contracts.v1.ActivateEventContractRequest
	10, // 26: strmprivacy.api.event_contracts.v1.EventContractsService.DeleteEventContract:input_type -> strmprivacy.api.event_contracts.v1.DeleteEventContractRequest
	12, // 27: strmprivacy.api.event_contracts.v1.EventContractsService.ArchiveEventContract:input_type -> strmprivacy.api.event_contracts.v1.ArchiveEventContractRequest
	14, // 28: strmprivacy.api.event_contracts.v1.EventContractsService.ValidateMaskedFields:input_type -> strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsRequest
	16, // 29: strmprivacy.api.event_contracts.v1.EventContractsService.GetEventContractAndSchema:input_type -> strmprivacy.api.event_contracts.v1.GetEventContractAndSchemaRequest
	1,  // 30: strmprivacy.api.event_contracts.v1.EventContractsService.ListEventContracts:output_type -> strmprivacy.api.event_contracts.v1.ListEventContractsResponse
	3,  // 31: strmprivacy.api.event_contracts.v1.EventContractsService.GetEventContract:output_type -> strmprivacy.api.event_contracts.v1.GetEventContractResponse
	5,  // 32: strmprivacy.api.event_contracts.v1.EventContractsService.CreateEventContract:output_type -> strmprivacy.api.event_contracts.v1.CreateEventContractResponse
	7,  // 33: strmprivacy.api.event_contracts.v1.EventContractsService.UpdateEventContract:output_type -> strmprivacy.api.event_contracts.v1.UpdateEventContractResponse
	9,  // 34: strmprivacy.api.event_contracts.v1.EventContractsService.ActivateEventContract:output_type -> strmprivacy.api.event_contracts.v1.ActivateEventContractResponse
	11, // 35: strmprivacy.api.event_contracts.v1.EventContractsService.DeleteEventContract:output_type -> strmprivacy.api.event_contracts.v1.DeleteEventContractResponse
	13, // 36: strmprivacy.api.event_contracts.v1.EventContractsService.ArchiveEventContract:output_type -> strmprivacy.api.event_contracts.v1.ArchiveEventContractResponse
	15, // 37: strmprivacy.api.event_contracts.v1.EventContractsService.ValidateMaskedFields:output_type -> strmprivacy.api.event_contracts.v1.ValidateMaskedFieldsResponse
	17, // 38: strmprivacy.api.event_contracts.v1.EventContractsService.GetEventContractAndSchema:output_type -> strmprivacy.api.event_contracts.v1.GetEventContractAndSchemaResponse
	30, // [30:39] is the sub-list for method output_type
	21, // [21:30] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_init() }
func file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_init() {
	if File_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventContractsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventContractsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEventContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEventContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEventContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEventContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateEventContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateEventContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEventContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEventContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveEventContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveEventContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMaskedFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMaskedFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventContractAndSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventContractAndSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMaskedFieldsResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMaskedFieldsResponse_Error_FieldError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_depIdxs,
		MessageInfos:      file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto = out.File
	file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_rawDesc = nil
	file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_goTypes = nil
	file_strmprivacy_api_event_contracts_v1_event_contracts_v1_proto_depIdxs = nil
}
