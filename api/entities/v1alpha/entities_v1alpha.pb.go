// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: strmprivacy/api/entities/v1alpha/entities_v1alpha.proto

package entities

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/strmprivacy/api-definitions-go/v3/api/entities/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InfoAssetItems_InfoAssetItem_State int32

const (
	InfoAssetItems_InfoAssetItem_STATE_UNSPECIFIED InfoAssetItems_InfoAssetItem_State = 0
	InfoAssetItems_InfoAssetItem_DRAFT             InfoAssetItems_InfoAssetItem_State = 1
	InfoAssetItems_InfoAssetItem_IN_REVIEW         InfoAssetItems_InfoAssetItem_State = 2
	InfoAssetItems_InfoAssetItem_APPROVED          InfoAssetItems_InfoAssetItem_State = 3
)

// Enum value maps for InfoAssetItems_InfoAssetItem_State.
var (
	InfoAssetItems_InfoAssetItem_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "DRAFT",
		2: "IN_REVIEW",
		3: "APPROVED",
	}
	InfoAssetItems_InfoAssetItem_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"DRAFT":             1,
		"IN_REVIEW":         2,
		"APPROVED":          3,
	}
)

func (x InfoAssetItems_InfoAssetItem_State) Enum() *InfoAssetItems_InfoAssetItem_State {
	p := new(InfoAssetItems_InfoAssetItem_State)
	*p = x
	return p
}

func (x InfoAssetItems_InfoAssetItem_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfoAssetItems_InfoAssetItem_State) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_enumTypes[0].Descriptor()
}

func (InfoAssetItems_InfoAssetItem_State) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_enumTypes[0]
}

func (x InfoAssetItems_InfoAssetItem_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfoAssetItems_InfoAssetItem_State.Descriptor instead.
func (InfoAssetItems_InfoAssetItem_State) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{5, 0, 0}
}

type Incident_IncidentType int32

const (
	Incident_INCIDENT_TYPE_UNSPECIFIED Incident_IncidentType = 0
	// When data is unintentionally exposed to the public.
	Incident_DATA_BREACH Incident_IncidentType = 1
	// When data is intentionally targeted to be stolen.
	Incident_DATA_HACK Incident_IncidentType = 2
)

// Enum value maps for Incident_IncidentType.
var (
	Incident_IncidentType_name = map[int32]string{
		0: "INCIDENT_TYPE_UNSPECIFIED",
		1: "DATA_BREACH",
		2: "DATA_HACK",
	}
	Incident_IncidentType_value = map[string]int32{
		"INCIDENT_TYPE_UNSPECIFIED": 0,
		"DATA_BREACH":               1,
		"DATA_HACK":                 2,
	}
)

func (x Incident_IncidentType) Enum() *Incident_IncidentType {
	p := new(Incident_IncidentType)
	*p = x
	return p
}

func (x Incident_IncidentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Incident_IncidentType) Descriptor() protoreflect.EnumDescriptor {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_enumTypes[1].Descriptor()
}

func (Incident_IncidentType) Type() protoreflect.EnumType {
	return &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_enumTypes[1]
}

func (x Incident_IncidentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Incident_IncidentType.Descriptor instead.
func (Incident_IncidentType) EnumDescriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{15, 0}
}

type ProjectPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// If title is empty, the project name from the project message can be used.
	Title       string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ItemGroups  []*ItemGroup `protobuf:"bytes,4,rep,name=item_groups,json=itemGroups,proto3" json:"item_groups,omitempty"`
	Users       []*v1.User   `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	// is this instance actually a template, i.e. without filled in values.
	IsTemplate bool `protobuf:"varint,6,opt,name=is_template,json=isTemplate,proto3" json:"is_template,omitempty"`
	// the id of the project plan, never null
	Id string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectPlan) Reset() {
	*x = ProjectPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectPlan) ProtoMessage() {}

func (x *ProjectPlan) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectPlan.ProtoReflect.Descriptor instead.
func (*ProjectPlan) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectPlan) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectPlan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProjectPlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectPlan) GetItemGroups() []*ItemGroup {
	if x != nil {
		return x.ItemGroups
	}
	return nil
}

func (x *ProjectPlan) GetUsers() []*v1.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ProjectPlan) GetIsTemplate() bool {
	if x != nil {
		return x.IsTemplate
	}
	return false
}

func (x *ProjectPlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ItemGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to Items:
	//
	//	*ItemGroup_TodoItems
	//	*ItemGroup_DataContractItems
	//	*ItemGroup_InfoAssetItems
	//	*ItemGroup_DocumentItems
	//	*ItemGroup_PipelineItems
	//	*ItemGroup_FreeformItems
	//	*ItemGroup_RiskAssessmentItems
	//	*ItemGroup_RiskMitigationItems
	//	*ItemGroup_RecordingItems
	Items isItemGroup_Items `protobuf_oneof:"items"`
	Id    string            `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ItemGroup) Reset() {
	*x = ItemGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGroup) ProtoMessage() {}

func (x *ItemGroup) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGroup.ProtoReflect.Descriptor instead.
func (*ItemGroup) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{1}
}

func (x *ItemGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *ItemGroup) GetItems() isItemGroup_Items {
	if m != nil {
		return m.Items
	}
	return nil
}

func (x *ItemGroup) GetTodoItems() *TodoItems {
	if x, ok := x.GetItems().(*ItemGroup_TodoItems); ok {
		return x.TodoItems
	}
	return nil
}

func (x *ItemGroup) GetDataContractItems() *DataContractItems {
	if x, ok := x.GetItems().(*ItemGroup_DataContractItems); ok {
		return x.DataContractItems
	}
	return nil
}

func (x *ItemGroup) GetInfoAssetItems() *InfoAssetItems {
	if x, ok := x.GetItems().(*ItemGroup_InfoAssetItems); ok {
		return x.InfoAssetItems
	}
	return nil
}

func (x *ItemGroup) GetDocumentItems() *DocumentItems {
	if x, ok := x.GetItems().(*ItemGroup_DocumentItems); ok {
		return x.DocumentItems
	}
	return nil
}

func (x *ItemGroup) GetPipelineItems() *PipelineItems {
	if x, ok := x.GetItems().(*ItemGroup_PipelineItems); ok {
		return x.PipelineItems
	}
	return nil
}

func (x *ItemGroup) GetFreeformItems() *FreeformItems {
	if x, ok := x.GetItems().(*ItemGroup_FreeformItems); ok {
		return x.FreeformItems
	}
	return nil
}

func (x *ItemGroup) GetRiskAssessmentItems() *RiskAssessmentItems {
	if x, ok := x.GetItems().(*ItemGroup_RiskAssessmentItems); ok {
		return x.RiskAssessmentItems
	}
	return nil
}

func (x *ItemGroup) GetRiskMitigationItems() *RiskMitigationItems {
	if x, ok := x.GetItems().(*ItemGroup_RiskMitigationItems); ok {
		return x.RiskMitigationItems
	}
	return nil
}

func (x *ItemGroup) GetRecordingItems() *RecordingItems {
	if x, ok := x.GetItems().(*ItemGroup_RecordingItems); ok {
		return x.RecordingItems
	}
	return nil
}

func (x *ItemGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type isItemGroup_Items interface {
	isItemGroup_Items()
}

type ItemGroup_TodoItems struct {
	TodoItems *TodoItems `protobuf:"bytes,4,opt,name=todo_items,json=todoItems,proto3,oneof"`
}

type ItemGroup_DataContractItems struct {
	DataContractItems *DataContractItems `protobuf:"bytes,5,opt,name=data_contract_items,json=dataContractItems,proto3,oneof"`
}

type ItemGroup_InfoAssetItems struct {
	InfoAssetItems *InfoAssetItems `protobuf:"bytes,6,opt,name=info_asset_items,json=infoAssetItems,proto3,oneof"`
}

type ItemGroup_DocumentItems struct {
	DocumentItems *DocumentItems `protobuf:"bytes,7,opt,name=document_items,json=documentItems,proto3,oneof"`
}

type ItemGroup_PipelineItems struct {
	PipelineItems *PipelineItems `protobuf:"bytes,8,opt,name=pipeline_items,json=pipelineItems,proto3,oneof"`
}

type ItemGroup_FreeformItems struct {
	FreeformItems *FreeformItems `protobuf:"bytes,10,opt,name=freeform_items,json=freeformItems,proto3,oneof"`
}

type ItemGroup_RiskAssessmentItems struct {
	RiskAssessmentItems *RiskAssessmentItems `protobuf:"bytes,11,opt,name=risk_assessment_items,json=riskAssessmentItems,proto3,oneof"`
}

type ItemGroup_RiskMitigationItems struct {
	RiskMitigationItems *RiskMitigationItems `protobuf:"bytes,12,opt,name=risk_mitigation_items,json=riskMitigationItems,proto3,oneof"`
}

type ItemGroup_RecordingItems struct {
	RecordingItems *RecordingItems `protobuf:"bytes,13,opt,name=recording_items,json=recordingItems,proto3,oneof"`
}

func (*ItemGroup_TodoItems) isItemGroup_Items() {}

func (*ItemGroup_DataContractItems) isItemGroup_Items() {}

func (*ItemGroup_InfoAssetItems) isItemGroup_Items() {}

func (*ItemGroup_DocumentItems) isItemGroup_Items() {}

func (*ItemGroup_PipelineItems) isItemGroup_Items() {}

func (*ItemGroup_FreeformItems) isItemGroup_Items() {}

func (*ItemGroup_RiskAssessmentItems) isItemGroup_Items() {}

func (*ItemGroup_RiskMitigationItems) isItemGroup_Items() {}

func (*ItemGroup_RecordingItems) isItemGroup_Items() {}

type ItemProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	DueTime        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=due_time,json=dueTime,proto3" json:"due_time,omitempty"`
	CompletionTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=completion_time,json=completionTime,proto3" json:"completion_time,omitempty"`
	// The user that created this item, retrieved from the JWT token.
	Creator *v1.User `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	// The user that is assigned to this item.
	Assignee *v1.User `protobuf:"bytes,6,opt,name=assignee,proto3" json:"assignee,omitempty"`
	// help text describing the item. Might give an example response for instance.
	HelpText string `protobuf:"bytes,7,opt,name=help_text,json=helpText,proto3" json:"help_text,omitempty"`
}

func (x *ItemProperties) Reset() {
	*x = ItemProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemProperties) ProtoMessage() {}

func (x *ItemProperties) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemProperties.ProtoReflect.Descriptor instead.
func (*ItemProperties) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{2}
}

func (x *ItemProperties) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ItemProperties) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *ItemProperties) GetDueTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DueTime
	}
	return nil
}

func (x *ItemProperties) GetCompletionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletionTime
	}
	return nil
}

func (x *ItemProperties) GetCreator() *v1.User {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ItemProperties) GetAssignee() *v1.User {
	if x != nil {
		return x.Assignee
	}
	return nil
}

func (x *ItemProperties) GetHelpText() string {
	if x != nil {
		return x.HelpText
	}
	return ""
}

type TodoItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TodoItems_TodoItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TodoItems) Reset() {
	*x = TodoItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TodoItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TodoItems) ProtoMessage() {}

func (x *TodoItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TodoItems.ProtoReflect.Descriptor instead.
func (*TodoItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{3}
}

func (x *TodoItems) GetItems() []*TodoItems_TodoItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DataContractItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DataContractItems_DataContractItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DataContractItems) Reset() {
	*x = DataContractItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataContractItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataContractItems) ProtoMessage() {}

func (x *DataContractItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataContractItems.ProtoReflect.Descriptor instead.
func (*DataContractItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{4}
}

func (x *DataContractItems) GetItems() []*DataContractItems_DataContractItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type InfoAssetItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*InfoAssetItems_InfoAssetItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *InfoAssetItems) Reset() {
	*x = InfoAssetItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAssetItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAssetItems) ProtoMessage() {}

func (x *InfoAssetItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAssetItems.ProtoReflect.Descriptor instead.
func (*InfoAssetItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{5}
}

func (x *InfoAssetItems) GetItems() []*InfoAssetItems_InfoAssetItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DocumentItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DocumentItems_DocumentItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DocumentItems) Reset() {
	*x = DocumentItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentItems) ProtoMessage() {}

func (x *DocumentItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentItems.ProtoReflect.Descriptor instead.
func (*DocumentItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{6}
}

func (x *DocumentItems) GetItems() []*DocumentItems_DocumentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type PipelineItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PipelineItems_PipelineItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PipelineItems) Reset() {
	*x = PipelineItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineItems) ProtoMessage() {}

func (x *PipelineItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineItems.ProtoReflect.Descriptor instead.
func (*PipelineItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{7}
}

func (x *PipelineItems) GetItems() []*PipelineItems_PipelineItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type FreeformItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*FreeformItems_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FreeformItems) Reset() {
	*x = FreeformItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeformItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeformItems) ProtoMessage() {}

func (x *FreeformItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeformItems.ProtoReflect.Descriptor instead.
func (*FreeformItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{8}
}

func (x *FreeformItems) GetItems() []*FreeformItems_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type RiskAssessmentItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RiskAssessmentItems_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RiskAssessmentItems) Reset() {
	*x = RiskAssessmentItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskAssessmentItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessmentItems) ProtoMessage() {}

func (x *RiskAssessmentItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessmentItems.ProtoReflect.Descriptor instead.
func (*RiskAssessmentItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{9}
}

func (x *RiskAssessmentItems) GetItems() []*RiskAssessmentItems_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type RiskMitigationItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RiskMitigationItems_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RiskMitigationItems) Reset() {
	*x = RiskMitigationItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMitigationItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationItems) ProtoMessage() {}

func (x *RiskMitigationItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationItems.ProtoReflect.Descriptor instead.
func (*RiskMitigationItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{10}
}

func (x *RiskMitigationItems) GetItems() []*RiskMitigationItems_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type RecordingItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RecordingItems_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RecordingItems) Reset() {
	*x = RecordingItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingItems) ProtoMessage() {}

func (x *RecordingItems) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingItems.ProtoReflect.Descriptor instead.
func (*RecordingItems) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{11}
}

func (x *RecordingItems) GetItems() []*RecordingItems_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type InfoAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template        string                            `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Name            string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Embargo         bool                              `protobuf:"varint,3,opt,name=embargo,proto3" json:"embargo,omitempty"`
	BusinessImpacts []*InfoAsset_BusinessImpactRating `protobuf:"bytes,4,rep,name=business_impacts,json=businessImpacts,proto3" json:"business_impacts,omitempty"`
	SecurityLevels  []string                          `protobuf:"bytes,5,rep,name=security_levels,json=securityLevels,proto3" json:"security_levels,omitempty"`
	SecurityLevel   string                            `protobuf:"bytes,6,opt,name=security_level,json=securityLevel,proto3" json:"security_level,omitempty"`
	Sections        []*InfoAsset_Section              `protobuf:"bytes,7,rep,name=sections,proto3" json:"sections,omitempty"`
	// is this instance actually a template, i.e. without filled in values.
	IsTemplate bool `protobuf:"varint,8,opt,name=is_template,json=isTemplate,proto3" json:"is_template,omitempty"`
}

func (x *InfoAsset) Reset() {
	*x = InfoAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAsset) ProtoMessage() {}

func (x *InfoAsset) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAsset.ProtoReflect.Descriptor instead.
func (*InfoAsset) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{12}
}

func (x *InfoAsset) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *InfoAsset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoAsset) GetEmbargo() bool {
	if x != nil {
		return x.Embargo
	}
	return false
}

func (x *InfoAsset) GetBusinessImpacts() []*InfoAsset_BusinessImpactRating {
	if x != nil {
		return x.BusinessImpacts
	}
	return nil
}

func (x *InfoAsset) GetSecurityLevels() []string {
	if x != nil {
		return x.SecurityLevels
	}
	return nil
}

func (x *InfoAsset) GetSecurityLevel() string {
	if x != nil {
		return x.SecurityLevel
	}
	return ""
}

func (x *InfoAsset) GetSections() []*InfoAsset_Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *InfoAsset) GetIsTemplate() bool {
	if x != nil {
		return x.IsTemplate
	}
	return false
}

// A continuous collection of all first and third party data processing activities
// of an organization. It is a "living document" that should be updated constantly as things change.
// It is not a snapshot but a dynamic collection of the processing activities that at any time
// reflects the current state of the data processing activities.
// When a ROPA is requested for an audit, the auditor would normally expect the most recent version
// that reflects the current activities, not a historical log of all previous versions or changes.
// But this does not mean that the history of certain data processing activities can be ignored.
// For example, if data has been transferred or shared, or if incidents (hack / leak of certain data
// or whatever) have occurred, this should be reflected in the ROPA.
type Ropa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Version      int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Organization *Ropa_Organization     `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	// TODO decide whether to include department or not
	Department string       `protobuf:"bytes,4,opt,name=department,proto3" json:"department,omitempty"`
	Entries    []*RopaEntry `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *Ropa) Reset() {
	*x = Ropa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa) ProtoMessage() {}

func (x *Ropa) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa.ProtoReflect.Descriptor instead.
func (*Ropa) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{13}
}

func (x *Ropa) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Ropa) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Ropa) GetOrganization() *Ropa_Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *Ropa) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *Ropa) GetEntries() []*RopaEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type RopaEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Author     *v1.User               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Version    int64                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// Types that are assignable to Entry:
	//
	//	*RopaEntry_ManualEntry_
	//	*RopaEntry_AutomatedEntry_
	Entry     isRopaEntry_Entry `protobuf_oneof:"entry"`
	Incidents []*Incident       `protobuf:"bytes,7,rep,name=incidents,proto3" json:"incidents,omitempty"`
}

func (x *RopaEntry) Reset() {
	*x = RopaEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry) ProtoMessage() {}

func (x *RopaEntry) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry.ProtoReflect.Descriptor instead.
func (*RopaEntry) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14}
}

func (x *RopaEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RopaEntry) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *RopaEntry) GetAuthor() *v1.User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *RopaEntry) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (m *RopaEntry) GetEntry() isRopaEntry_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *RopaEntry) GetManualEntry() *RopaEntry_ManualEntry {
	if x, ok := x.GetEntry().(*RopaEntry_ManualEntry_); ok {
		return x.ManualEntry
	}
	return nil
}

func (x *RopaEntry) GetAutomatedEntry() *RopaEntry_AutomatedEntry {
	if x, ok := x.GetEntry().(*RopaEntry_AutomatedEntry_); ok {
		return x.AutomatedEntry
	}
	return nil
}

func (x *RopaEntry) GetIncidents() []*Incident {
	if x != nil {
		return x.Incidents
	}
	return nil
}

type isRopaEntry_Entry interface {
	isRopaEntry_Entry()
}

type RopaEntry_ManualEntry_ struct {
	ManualEntry *RopaEntry_ManualEntry `protobuf:"bytes,5,opt,name=manual_entry,json=manualEntry,proto3,oneof"`
}

type RopaEntry_AutomatedEntry_ struct {
	AutomatedEntry *RopaEntry_AutomatedEntry `protobuf:"bytes,6,opt,name=automated_entry,json=automatedEntry,proto3,oneof"`
}

func (*RopaEntry_ManualEntry_) isRopaEntry_Entry() {}

func (*RopaEntry_AutomatedEntry_) isRopaEntry_Entry() {}

type Incident struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Type        Incident_IncidentType  `protobuf:"varint,2,opt,name=type,proto3,enum=strmprivacy.api.entities.v1alpha.Incident_IncidentType" json:"type,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Incident) Reset() {
	*x = Incident{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Incident) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Incident) ProtoMessage() {}

func (x *Incident) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Incident.ProtoReflect.Descriptor instead.
func (*Incident) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{15}
}

func (x *Incident) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Incident) GetType() Incident_IncidentType {
	if x != nil {
		return x.Type
	}
	return Incident_INCIDENT_TYPE_UNSPECIFIED
}

func (x *Incident) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TodoItems_TodoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	// If the completion date is 0, then the todo is not done yet.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TodoItems_TodoItem) Reset() {
	*x = TodoItems_TodoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TodoItems_TodoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TodoItems_TodoItem) ProtoMessage() {}

func (x *TodoItems_TodoItem) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TodoItems_TodoItem.ProtoReflect.Descriptor instead.
func (*TodoItems_TodoItem) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TodoItems_TodoItem) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *TodoItems_TodoItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DataContractItems_DataContractItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	// Data Contract details can be retrieved through the Data Contract API.
	Ref *v1.DataContractRef `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *DataContractItems_DataContractItem) Reset() {
	*x = DataContractItems_DataContractItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataContractItems_DataContractItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataContractItems_DataContractItem) ProtoMessage() {}

func (x *DataContractItems_DataContractItem) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataContractItems_DataContractItem.ProtoReflect.Descriptor instead.
func (*DataContractItems_DataContractItem) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DataContractItems_DataContractItem) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *DataContractItems_DataContractItem) GetRef() *v1.DataContractRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type InfoAssetItems_InfoAssetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties                              `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	Name           string                                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State          InfoAssetItems_InfoAssetItem_State           `protobuf:"varint,3,opt,name=state,proto3,enum=strmprivacy.api.entities.v1alpha.InfoAssetItems_InfoAssetItem_State" json:"state,omitempty"`
	Classification *InfoAssetItems_InfoAssetItem_Classification `protobuf:"bytes,4,opt,name=classification,proto3" json:"classification,omitempty"`
	InfoAsset      *InfoAsset                                   `protobuf:"bytes,5,opt,name=info_asset,json=infoAsset,proto3" json:"info_asset,omitempty"`
}

func (x *InfoAssetItems_InfoAssetItem) Reset() {
	*x = InfoAssetItems_InfoAssetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAssetItems_InfoAssetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAssetItems_InfoAssetItem) ProtoMessage() {}

func (x *InfoAssetItems_InfoAssetItem) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAssetItems_InfoAssetItem.ProtoReflect.Descriptor instead.
func (*InfoAssetItems_InfoAssetItem) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{5, 0}
}

func (x *InfoAssetItems_InfoAssetItem) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *InfoAssetItems_InfoAssetItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoAssetItems_InfoAssetItem) GetState() InfoAssetItems_InfoAssetItem_State {
	if x != nil {
		return x.State
	}
	return InfoAssetItems_InfoAssetItem_STATE_UNSPECIFIED
}

func (x *InfoAssetItems_InfoAssetItem) GetClassification() *InfoAssetItems_InfoAssetItem_Classification {
	if x != nil {
		return x.Classification
	}
	return nil
}

func (x *InfoAssetItems_InfoAssetItem) GetInfoAsset() *InfoAsset {
	if x != nil {
		return x.InfoAsset
	}
	return nil
}

// TODO is the name correct? Could also be SensitivityClassification or RiskClassification.
// TODO is points a part of the classification or a separate field?
type InfoAssetItems_InfoAssetItem_Classification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ColorCss string `protobuf:"bytes,2,opt,name=color_css,json=colorCss,proto3" json:"color_css,omitempty"`
	// The sensitivity points of the information asset (higher is more sensitive)
	Points int32 `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *InfoAssetItems_InfoAssetItem_Classification) Reset() {
	*x = InfoAssetItems_InfoAssetItem_Classification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAssetItems_InfoAssetItem_Classification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAssetItems_InfoAssetItem_Classification) ProtoMessage() {}

func (x *InfoAssetItems_InfoAssetItem_Classification) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAssetItems_InfoAssetItem_Classification.ProtoReflect.Descriptor instead.
func (*InfoAssetItems_InfoAssetItem_Classification) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *InfoAssetItems_InfoAssetItem_Classification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoAssetItems_InfoAssetItem_Classification) GetColorCss() string {
	if x != nil {
		return x.ColorCss
	}
	return ""
}

func (x *InfoAssetItems_InfoAssetItem_Classification) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type DocumentItems_DocumentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	// Filename should be unique within the project.
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	// If the URI is set, then the document originates from an external source.
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *DocumentItems_DocumentItem) Reset() {
	*x = DocumentItems_DocumentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentItems_DocumentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentItems_DocumentItem) ProtoMessage() {}

func (x *DocumentItems_DocumentItem) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentItems_DocumentItem.ProtoReflect.Descriptor instead.
func (*DocumentItems_DocumentItem) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DocumentItems_DocumentItem) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *DocumentItems_DocumentItem) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DocumentItems_DocumentItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type PipelineItems_PipelineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	// Types that are assignable to Pipeline:
	//
	//	*PipelineItems_PipelineItem_Stream
	//	*PipelineItems_PipelineItem_BatchJob
	Pipeline isPipelineItems_PipelineItem_Pipeline `protobuf_oneof:"pipeline"`
}

func (x *PipelineItems_PipelineItem) Reset() {
	*x = PipelineItems_PipelineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineItems_PipelineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineItems_PipelineItem) ProtoMessage() {}

func (x *PipelineItems_PipelineItem) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineItems_PipelineItem.ProtoReflect.Descriptor instead.
func (*PipelineItems_PipelineItem) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{7, 0}
}

func (x *PipelineItems_PipelineItem) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (m *PipelineItems_PipelineItem) GetPipeline() isPipelineItems_PipelineItem_Pipeline {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

func (x *PipelineItems_PipelineItem) GetStream() *v1.StreamRef {
	if x, ok := x.GetPipeline().(*PipelineItems_PipelineItem_Stream); ok {
		return x.Stream
	}
	return nil
}

func (x *PipelineItems_PipelineItem) GetBatchJob() *v1.BatchJobRef {
	if x, ok := x.GetPipeline().(*PipelineItems_PipelineItem_BatchJob); ok {
		return x.BatchJob
	}
	return nil
}

type isPipelineItems_PipelineItem_Pipeline interface {
	isPipelineItems_PipelineItem_Pipeline()
}

type PipelineItems_PipelineItem_Stream struct {
	Stream *v1.StreamRef `protobuf:"bytes,2,opt,name=stream,proto3,oneof"`
}

type PipelineItems_PipelineItem_BatchJob struct {
	BatchJob *v1.BatchJobRef `protobuf:"bytes,3,opt,name=batch_job,json=batchJob,proto3,oneof"`
}

func (*PipelineItems_PipelineItem_Stream) isPipelineItems_PipelineItem_Pipeline() {}

func (*PipelineItems_PipelineItem_BatchJob) isPipelineItems_PipelineItem_Pipeline() {}

type FreeformItems_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	Question       string          `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer         string          `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	Remark         string          `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *FreeformItems_Item) Reset() {
	*x = FreeformItems_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeformItems_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeformItems_Item) ProtoMessage() {}

func (x *FreeformItems_Item) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeformItems_Item.ProtoReflect.Descriptor instead.
func (*FreeformItems_Item) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{8, 0}
}

func (x *FreeformItems_Item) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *FreeformItems_Item) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *FreeformItems_Item) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *FreeformItems_Item) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type RiskAssessmentItems_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	Risk           string          `protobuf:"bytes,2,opt,name=risk,proto3" json:"risk,omitempty"`
	HarmLikelihood string          `protobuf:"bytes,3,opt,name=harm_likelihood,json=harmLikelihood,proto3" json:"harm_likelihood,omitempty"`
	HarmSeverity   string          `protobuf:"bytes,4,opt,name=harm_severity,json=harmSeverity,proto3" json:"harm_severity,omitempty"`
	OverallRisk    string          `protobuf:"bytes,5,opt,name=overall_risk,json=overallRisk,proto3" json:"overall_risk,omitempty"`
}

func (x *RiskAssessmentItems_Item) Reset() {
	*x = RiskAssessmentItems_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskAssessmentItems_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessmentItems_Item) ProtoMessage() {}

func (x *RiskAssessmentItems_Item) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessmentItems_Item.ProtoReflect.Descriptor instead.
func (*RiskAssessmentItems_Item) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{9, 0}
}

func (x *RiskAssessmentItems_Item) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *RiskAssessmentItems_Item) GetRisk() string {
	if x != nil {
		return x.Risk
	}
	return ""
}

func (x *RiskAssessmentItems_Item) GetHarmLikelihood() string {
	if x != nil {
		return x.HarmLikelihood
	}
	return ""
}

func (x *RiskAssessmentItems_Item) GetHarmSeverity() string {
	if x != nil {
		return x.HarmSeverity
	}
	return ""
}

func (x *RiskAssessmentItems_Item) GetOverallRisk() string {
	if x != nil {
		return x.OverallRisk
	}
	return ""
}

type RiskMitigationItems_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties    *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	Risk              string          `protobuf:"bytes,2,opt,name=risk,proto3" json:"risk,omitempty"`
	OverallRisk       string          `protobuf:"bytes,3,opt,name=overall_risk,json=overallRisk,proto3" json:"overall_risk,omitempty"`
	MitigationMeasure string          `protobuf:"bytes,5,opt,name=mitigation_measure,json=mitigationMeasure,proto3" json:"mitigation_measure,omitempty"`
	ResidualRisk      string          `protobuf:"bytes,6,opt,name=residual_risk,json=residualRisk,proto3" json:"residual_risk,omitempty"`
	Approval          string          `protobuf:"bytes,7,opt,name=approval,proto3" json:"approval,omitempty"`
}

func (x *RiskMitigationItems_Item) Reset() {
	*x = RiskMitigationItems_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMitigationItems_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationItems_Item) ProtoMessage() {}

func (x *RiskMitigationItems_Item) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationItems_Item.ProtoReflect.Descriptor instead.
func (*RiskMitigationItems_Item) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{10, 0}
}

func (x *RiskMitigationItems_Item) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *RiskMitigationItems_Item) GetRisk() string {
	if x != nil {
		return x.Risk
	}
	return ""
}

func (x *RiskMitigationItems_Item) GetOverallRisk() string {
	if x != nil {
		return x.OverallRisk
	}
	return ""
}

func (x *RiskMitigationItems_Item) GetMitigationMeasure() string {
	if x != nil {
		return x.MitigationMeasure
	}
	return ""
}

func (x *RiskMitigationItems_Item) GetResidualRisk() string {
	if x != nil {
		return x.ResidualRisk
	}
	return ""
}

func (x *RiskMitigationItems_Item) GetApproval() string {
	if x != nil {
		return x.Approval
	}
	return ""
}

type RecordingItems_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemProperties *ItemProperties `protobuf:"bytes,1,opt,name=item_properties,json=itemProperties,proto3" json:"item_properties,omitempty"`
	Particular     string          `protobuf:"bytes,2,opt,name=particular,proto3" json:"particular,omitempty"`
	Remarks        string          `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *RecordingItems_Item) Reset() {
	*x = RecordingItems_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingItems_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingItems_Item) ProtoMessage() {}

func (x *RecordingItems_Item) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingItems_Item.ProtoReflect.Descriptor instead.
func (*RecordingItems_Item) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{11, 0}
}

func (x *RecordingItems_Item) GetItemProperties() *ItemProperties {
	if x != nil {
		return x.ItemProperties
	}
	return nil
}

func (x *RecordingItems_Item) GetParticular() string {
	if x != nil {
		return x.Particular
	}
	return ""
}

func (x *RecordingItems_Item) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type InfoAsset_Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Business consequences for instance
	Name        string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SubSections []*InfoAsset_SubSection `protobuf:"bytes,2,rep,name=sub_sections,json=subSections,proto3" json:"sub_sections,omitempty"`
}

func (x *InfoAsset_Section) Reset() {
	*x = InfoAsset_Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAsset_Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAsset_Section) ProtoMessage() {}

func (x *InfoAsset_Section) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAsset_Section.ProtoReflect.Descriptor instead.
func (*InfoAsset_Section) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{12, 0}
}

func (x *InfoAsset_Section) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoAsset_Section) GetSubSections() []*InfoAsset_SubSection {
	if x != nil {
		return x.SubSections
	}
	return nil
}

type InfoAsset_SubSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 'Impact on core business' for instance
	Name        string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Explanation string             `protobuf:"bytes,3,opt,name=explanation,proto3" json:"explanation,omitempty"`
	Checks      []*InfoAsset_Check `protobuf:"bytes,4,rep,name=checks,proto3" json:"checks,omitempty"`
}

func (x *InfoAsset_SubSection) Reset() {
	*x = InfoAsset_SubSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAsset_SubSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAsset_SubSection) ProtoMessage() {}

func (x *InfoAsset_SubSection) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAsset_SubSection.ProtoReflect.Descriptor instead.
func (*InfoAsset_SubSection) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{12, 1}
}

func (x *InfoAsset_SubSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoAsset_SubSection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InfoAsset_SubSection) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *InfoAsset_SubSection) GetChecks() []*InfoAsset_Check {
	if x != nil {
		return x.Checks
	}
	return nil
}

type InfoAsset_Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DetailInfo string `protobuf:"bytes,2,opt,name=detail_info,json=detailInfo,proto3" json:"detail_info,omitempty"`
	Checked    bool   `protobuf:"varint,3,opt,name=checked,proto3" json:"checked,omitempty"`
}

func (x *InfoAsset_Check) Reset() {
	*x = InfoAsset_Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAsset_Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAsset_Check) ProtoMessage() {}

func (x *InfoAsset_Check) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAsset_Check.ProtoReflect.Descriptor instead.
func (*InfoAsset_Check) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{12, 2}
}

func (x *InfoAsset_Check) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoAsset_Check) GetDetailInfo() string {
	if x != nil {
		return x.DetailInfo
	}
	return ""
}

func (x *InfoAsset_Check) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

type InfoAsset_BusinessImpactRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string                            `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Category *InfoAsset_BusinessImpactCategory `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *InfoAsset_BusinessImpactRating) Reset() {
	*x = InfoAsset_BusinessImpactRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAsset_BusinessImpactRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAsset_BusinessImpactRating) ProtoMessage() {}

func (x *InfoAsset_BusinessImpactRating) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAsset_BusinessImpactRating.ProtoReflect.Descriptor instead.
func (*InfoAsset_BusinessImpactRating) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{12, 3}
}

func (x *InfoAsset_BusinessImpactRating) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *InfoAsset_BusinessImpactRating) GetCategory() *InfoAsset_BusinessImpactCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

type InfoAsset_BusinessImpactCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Value       float32 `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InfoAsset_BusinessImpactCategory) Reset() {
	*x = InfoAsset_BusinessImpactCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAsset_BusinessImpactCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAsset_BusinessImpactCategory) ProtoMessage() {}

func (x *InfoAsset_BusinessImpactCategory) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAsset_BusinessImpactCategory.ProtoReflect.Descriptor instead.
func (*InfoAsset_BusinessImpactCategory) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{12, 4}
}

func (x *InfoAsset_BusinessImpactCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoAsset_BusinessImpactCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InfoAsset_BusinessImpactCategory) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Ropa_Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContactDetails        *Ropa_Organization_ContactDetails        `protobuf:"bytes,2,opt,name=contact_details,json=contactDetails,proto3" json:"contact_details,omitempty"`
	DataProtectionOfficer *Ropa_Organization_DataProtectionOfficer `protobuf:"bytes,3,opt,name=data_protection_officer,json=dataProtectionOfficer,proto3" json:"data_protection_officer,omitempty"`
}

func (x *Ropa_Organization) Reset() {
	*x = Ropa_Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa_Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa_Organization) ProtoMessage() {}

func (x *Ropa_Organization) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa_Organization.ProtoReflect.Descriptor instead.
func (*Ropa_Organization) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Ropa_Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ropa_Organization) GetContactDetails() *Ropa_Organization_ContactDetails {
	if x != nil {
		return x.ContactDetails
	}
	return nil
}

func (x *Ropa_Organization) GetDataProtectionOfficer() *Ropa_Organization_DataProtectionOfficer {
	if x != nil {
		return x.DataProtectionOfficer
	}
	return nil
}

type Ropa_Organization_ContactDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalName string `protobuf:"bytes,1,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone     string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Ropa_Organization_ContactDetails) Reset() {
	*x = Ropa_Organization_ContactDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa_Organization_ContactDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa_Organization_ContactDetails) ProtoMessage() {}

func (x *Ropa_Organization_ContactDetails) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa_Organization_ContactDetails.ProtoReflect.Descriptor instead.
func (*Ropa_Organization_ContactDetails) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *Ropa_Organization_ContactDetails) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *Ropa_Organization_ContactDetails) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Ropa_Organization_ContactDetails) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Ropa_Organization_ContactDetails) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type Ropa_Organization_DataProtectionOfficer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Ropa_Organization_DataProtectionOfficer) Reset() {
	*x = Ropa_Organization_DataProtectionOfficer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ropa_Organization_DataProtectionOfficer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ropa_Organization_DataProtectionOfficer) ProtoMessage() {}

func (x *Ropa_Organization_DataProtectionOfficer) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ropa_Organization_DataProtectionOfficer.ProtoReflect.Descriptor instead.
func (*Ropa_Organization_DataProtectionOfficer) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{13, 0, 1}
}

func (x *Ropa_Organization_DataProtectionOfficer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ropa_Organization_DataProtectionOfficer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Manual entries in the ROPA are meant for keeping track of data processing
// activities that cannot be collected in an automated fashion.
// An example is a security camera that is positioned at the exit of on of
// the organization's buildings.
// TODO this may require more information, though I'm unsure how to structure this at this moment. We need more information on what is required.
type RopaEntry_ManualEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RopaEntry_ManualEntry) Reset() {
	*x = RopaEntry_ManualEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_ManualEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_ManualEntry) ProtoMessage() {}

func (x *RopaEntry_ManualEntry) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_ManualEntry.ProtoReflect.Descriptor instead.
func (*RopaEntry_ManualEntry) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 0}
}

func (x *RopaEntry_ManualEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// An automated ROPA entry, that is linked to a pipeline (and to a data contract?)
type RopaEntry_AutomatedEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO where does a ROPA entry start and end? How much of the lineage do we need to capture in a ROPA entry?
	// References to entities that are used as a data source.
	DataSources []*RopaEntry_DataAsset `protobuf:"bytes,1,rep,name=data_sources,json=dataSources,proto3" json:"data_sources,omitempty"`
	// References to entities that are used as a data destinations.
	DataDestinations []*RopaEntry_DataAsset `protobuf:"bytes,2,rep,name=data_destinations,json=dataDestinations,proto3" json:"data_destinations,omitempty"`
	// The data contract that is used for data processing
	// TODO decide whether this can be repeated or not
	DataContractReference *v1.DataContractRef `protobuf:"bytes,3,opt,name=data_contract_reference,json=dataContractReference,proto3" json:"data_contract_reference,omitempty"`
	// Which company is the owner of the data, who controls it?
	DataController *RopaEntry_DataActor `protobuf:"bytes,4,opt,name=data_controller,json=dataController,proto3" json:"data_controller,omitempty"`
	// Which company is the processor of the data, who uses the data?
	DataProcessor *RopaEntry_DataActor `protobuf:"bytes,5,opt,name=data_processor,json=dataProcessor,proto3" json:"data_processor,omitempty"`
	// What is the goal of the data processing?
	Purposes []string `protobuf:"bytes,6,rep,name=purposes,proto3" json:"purposes,omitempty"`
	// Who is the data subject in the data that is being processed?
	DataSubjectCategories []string `protobuf:"bytes,7,rep,name=data_subject_categories,json=dataSubjectCategories,proto3" json:"data_subject_categories,omitempty"`
	// What type of data is being processed?
	// e.g. browsing data, location data, contact details, transaction data, etc.
	ProcessedPersonalDataTypes []string `protobuf:"bytes,8,rep,name=processed_personal_data_types,json=processedPersonalDataTypes,proto3" json:"processed_personal_data_types,omitempty"`
	// Who receive the data?
	DataRecipients []string `protobuf:"bytes,9,rep,name=data_recipients,json=dataRecipients,proto3" json:"data_recipients,omitempty"`
	// TODO get more information on what this means
	DataTransferDetails string `protobuf:"bytes,10,opt,name=data_transfer_details,json=dataTransferDetails,proto3" json:"data_transfer_details,omitempty"`
	// How long should the data be kept?
	DataRetention *RopaEntry_DataRetention `protobuf:"bytes,11,opt,name=data_retention,json=dataRetention,proto3" json:"data_retention,omitempty"`
	// What measures are taken to ensure the security of the data?
	// e.g. encryption, pseudonymization, access control, security audits, etc.
	DataSecurityMeasures []string `protobuf:"bytes,12,rep,name=data_security_measures,json=dataSecurityMeasures,proto3" json:"data_security_measures,omitempty"`
	// What is the legal basis for the processing of the data?
	LegalBasis []string `protobuf:"bytes,13,rep,name=legal_basis,json=legalBasis,proto3" json:"legal_basis,omitempty"`
	// What actions are taken to ensure that only the minimum amount of data is processed to achieve the goal?
	DataMinimizationProcedures []string `protobuf:"bytes,14,rep,name=data_minimization_procedures,json=dataMinimizationProcedures,proto3" json:"data_minimization_procedures,omitempty"`
	// What actions are taken to ensure data access follows the principle of least privilege?
	DataAccessProcedures []string `protobuf:"bytes,15,rep,name=data_access_procedures,json=dataAccessProcedures,proto3" json:"data_access_procedures,omitempty"`
	// What data breach response plans are in place? What are the actions that are taken when a data breach occurs?
	DataBreachResponsePlans []string `protobuf:"bytes,16,rep,name=data_breach_response_plans,json=dataBreachResponsePlans,proto3" json:"data_breach_response_plans,omitempty"`
	// The information systems used to process the data.
	InfoSystems []string `protobuf:"bytes,17,rep,name=info_systems,json=infoSystems,proto3" json:"info_systems,omitempty"`
	// Additional information that is relevant to the data processing.
	// i.e. impact assessment reference, training and awareness programs, etc.
	// TODO decide whether this is the best approach to capture all this information.
	AdditionalInfo map[string]string `protobuf:"bytes,18,rep,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RopaEntry_AutomatedEntry) Reset() {
	*x = RopaEntry_AutomatedEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_AutomatedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_AutomatedEntry) ProtoMessage() {}

func (x *RopaEntry_AutomatedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_AutomatedEntry.ProtoReflect.Descriptor instead.
func (*RopaEntry_AutomatedEntry) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 1}
}

func (x *RopaEntry_AutomatedEntry) GetDataSources() []*RopaEntry_DataAsset {
	if x != nil {
		return x.DataSources
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataDestinations() []*RopaEntry_DataAsset {
	if x != nil {
		return x.DataDestinations
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataContractReference() *v1.DataContractRef {
	if x != nil {
		return x.DataContractReference
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataController() *RopaEntry_DataActor {
	if x != nil {
		return x.DataController
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataProcessor() *RopaEntry_DataActor {
	if x != nil {
		return x.DataProcessor
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetPurposes() []string {
	if x != nil {
		return x.Purposes
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataSubjectCategories() []string {
	if x != nil {
		return x.DataSubjectCategories
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetProcessedPersonalDataTypes() []string {
	if x != nil {
		return x.ProcessedPersonalDataTypes
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataRecipients() []string {
	if x != nil {
		return x.DataRecipients
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataTransferDetails() string {
	if x != nil {
		return x.DataTransferDetails
	}
	return ""
}

func (x *RopaEntry_AutomatedEntry) GetDataRetention() *RopaEntry_DataRetention {
	if x != nil {
		return x.DataRetention
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataSecurityMeasures() []string {
	if x != nil {
		return x.DataSecurityMeasures
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetLegalBasis() []string {
	if x != nil {
		return x.LegalBasis
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataMinimizationProcedures() []string {
	if x != nil {
		return x.DataMinimizationProcedures
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataAccessProcedures() []string {
	if x != nil {
		return x.DataAccessProcedures
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetDataBreachResponsePlans() []string {
	if x != nil {
		return x.DataBreachResponsePlans
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetInfoSystems() []string {
	if x != nil {
		return x.InfoSystems
	}
	return nil
}

func (x *RopaEntry_AutomatedEntry) GetAdditionalInfo() map[string]string {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// This message acts as a collection of references to data processors.
// i.e. a stream, a key stream, a batch job, etc.
type RopaEntry_DataAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Ref:
	//
	//	*RopaEntry_DataAsset_Stream
	//	*RopaEntry_DataAsset_KeyStream
	//	*RopaEntry_DataAsset_BatchJob
	//	*RopaEntry_DataAsset_Other
	Ref isRopaEntry_DataAsset_Ref `protobuf_oneof:"ref"`
}

func (x *RopaEntry_DataAsset) Reset() {
	*x = RopaEntry_DataAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataAsset) ProtoMessage() {}

func (x *RopaEntry_DataAsset) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataAsset.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataAsset) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 2}
}

func (m *RopaEntry_DataAsset) GetRef() isRopaEntry_DataAsset_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetStream() *v1.StreamRef {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_Stream); ok {
		return x.Stream
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetKeyStream() *v1.KeyStreamRef {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_KeyStream); ok {
		return x.KeyStream
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetBatchJob() *v1.BatchJobRef {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_BatchJob); ok {
		return x.BatchJob
	}
	return nil
}

func (x *RopaEntry_DataAsset) GetOther() string {
	if x, ok := x.GetRef().(*RopaEntry_DataAsset_Other); ok {
		return x.Other
	}
	return ""
}

type isRopaEntry_DataAsset_Ref interface {
	isRopaEntry_DataAsset_Ref()
}

type RopaEntry_DataAsset_Stream struct {
	Stream *v1.StreamRef `protobuf:"bytes,1,opt,name=stream,proto3,oneof"`
}

type RopaEntry_DataAsset_KeyStream struct {
	KeyStream *v1.KeyStreamRef `protobuf:"bytes,2,opt,name=key_stream,json=keyStream,proto3,oneof"`
}

type RopaEntry_DataAsset_BatchJob struct {
	BatchJob *v1.BatchJobRef `protobuf:"bytes,3,opt,name=batch_job,json=batchJob,proto3,oneof"`
}

type RopaEntry_DataAsset_Other struct {
	Other string `protobuf:"bytes,4,opt,name=other,proto3,oneof"`
}

func (*RopaEntry_DataAsset_Stream) isRopaEntry_DataAsset_Ref() {}

func (*RopaEntry_DataAsset_KeyStream) isRopaEntry_DataAsset_Ref() {}

func (*RopaEntry_DataAsset_BatchJob) isRopaEntry_DataAsset_Ref() {}

func (*RopaEntry_DataAsset_Other) isRopaEntry_DataAsset_Ref() {}

// This is either a controller or a processor of data.
// TODO name might not be the best, but this can be used for both a controller and processor.
type RopaEntry_DataActor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RopaEntry_DataActor) Reset() {
	*x = RopaEntry_DataActor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataActor) ProtoMessage() {}

func (x *RopaEntry_DataActor) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataActor.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataActor) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 3}
}

func (x *RopaEntry_DataActor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RopaEntry_DataRetention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the policy that holds the details of the data retention.
	// TODO Ignore empty is true since a policy might not be set yet.
	// TODO do we want a policy reference?
	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	// TODO This should be moved to the Policy message
	//
	// Types that are assignable to Retention:
	//
	//	*RopaEntry_DataRetention_FixedDuration_
	//	*RopaEntry_DataRetention_UntilProcessIsFinished_
	//	*RopaEntry_DataRetention_UntilRelationshipIsTerminated_
	Retention isRopaEntry_DataRetention_Retention `protobuf_oneof:"retention"`
}

func (x *RopaEntry_DataRetention) Reset() {
	*x = RopaEntry_DataRetention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention) ProtoMessage() {}

func (x *RopaEntry_DataRetention) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 4}
}

func (x *RopaEntry_DataRetention) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (m *RopaEntry_DataRetention) GetRetention() isRopaEntry_DataRetention_Retention {
	if m != nil {
		return m.Retention
	}
	return nil
}

func (x *RopaEntry_DataRetention) GetFixedDuration() *RopaEntry_DataRetention_FixedDuration {
	if x, ok := x.GetRetention().(*RopaEntry_DataRetention_FixedDuration_); ok {
		return x.FixedDuration
	}
	return nil
}

func (x *RopaEntry_DataRetention) GetUntilProcessIsFinished() *RopaEntry_DataRetention_UntilProcessIsFinished {
	if x, ok := x.GetRetention().(*RopaEntry_DataRetention_UntilProcessIsFinished_); ok {
		return x.UntilProcessIsFinished
	}
	return nil
}

func (x *RopaEntry_DataRetention) GetUntilRelationshipIsTerminated() *RopaEntry_DataRetention_UntilRelationshipIsTerminated {
	if x, ok := x.GetRetention().(*RopaEntry_DataRetention_UntilRelationshipIsTerminated_); ok {
		return x.UntilRelationshipIsTerminated
	}
	return nil
}

type isRopaEntry_DataRetention_Retention interface {
	isRopaEntry_DataRetention_Retention()
}

type RopaEntry_DataRetention_FixedDuration_ struct {
	FixedDuration *RopaEntry_DataRetention_FixedDuration `protobuf:"bytes,2,opt,name=fixed_duration,json=fixedDuration,proto3,oneof"`
}

type RopaEntry_DataRetention_UntilProcessIsFinished_ struct {
	UntilProcessIsFinished *RopaEntry_DataRetention_UntilProcessIsFinished `protobuf:"bytes,3,opt,name=until_process_is_finished,json=untilProcessIsFinished,proto3,oneof"`
}

type RopaEntry_DataRetention_UntilRelationshipIsTerminated_ struct {
	UntilRelationshipIsTerminated *RopaEntry_DataRetention_UntilRelationshipIsTerminated `protobuf:"bytes,4,opt,name=until_relationship_is_terminated,json=untilRelationshipIsTerminated,proto3,oneof"`
}

func (*RopaEntry_DataRetention_FixedDuration_) isRopaEntry_DataRetention_Retention() {}

func (*RopaEntry_DataRetention_UntilProcessIsFinished_) isRopaEntry_DataRetention_Retention() {}

func (*RopaEntry_DataRetention_UntilRelationshipIsTerminated_) isRopaEntry_DataRetention_Retention() {
}

// At a fixed moment in time after data collection
type RopaEntry_DataRetention_FixedDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RopaEntry_DataRetention_FixedDuration) Reset() {
	*x = RopaEntry_DataRetention_FixedDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention_FixedDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention_FixedDuration) ProtoMessage() {}

func (x *RopaEntry_DataRetention_FixedDuration) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention_FixedDuration.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention_FixedDuration) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 4, 0}
}

func (x *RopaEntry_DataRetention_FixedDuration) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// For example, when a contract ends, or when a job applicant's recruitment
// process is finished.
type RopaEntry_DataRetention_UntilProcessIsFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) Reset() {
	*x = RopaEntry_DataRetention_UntilProcessIsFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention_UntilProcessIsFinished) ProtoMessage() {}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention_UntilProcessIsFinished.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention_UntilProcessIsFinished) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 4, 1}
}

func (x *RopaEntry_DataRetention_UntilProcessIsFinished) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// For example, when a customer relationship ends, the data must be kept
// for a certain period of time for legal reasons.
// Ref: https://www.dnb.nl/en/sector-information/open-book-supervision/open-book-supervision-sectors/crypto-service-providers/integrity-supervision-of-crypto-service-providers/wwft-crypto/transactiemonitoring/duty-to-retain-transaction-data/
type RopaEntry_DataRetention_UntilRelationshipIsTerminated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RopaEntry_DataRetention_UntilRelationshipIsTerminated) Reset() {
	*x = RopaEntry_DataRetention_UntilRelationshipIsTerminated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RopaEntry_DataRetention_UntilRelationshipIsTerminated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RopaEntry_DataRetention_UntilRelationshipIsTerminated) ProtoMessage() {}

func (x *RopaEntry_DataRetention_UntilRelationshipIsTerminated) ProtoReflect() protoreflect.Message {
	mi := &file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RopaEntry_DataRetention_UntilRelationshipIsTerminated.ProtoReflect.Descriptor instead.
func (*RopaEntry_DataRetention_UntilRelationshipIsTerminated) Descriptor() ([]byte, []int) {
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP(), []int{14, 4, 2}
}

func (x *RopaEntry_DataRetention_UntilRelationshipIsTerminated) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto protoreflect.FileDescriptor

var file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDesc = []byte{
	0x0a, 0x37, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x02, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x72, 0x08, 0x10, 0x01, 0x18, 0xac, 0x02, 0xd0,
	0x01, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0x18, 0x88, 0x27, 0xd0, 0x01, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0xdc, 0x07, 0x0a, 0x09, 0x49,
	0x74, 0x65, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18,
	0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42,
	0x08, 0x72, 0x06, 0x18, 0x88, 0x27, 0xd0, 0x01, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0a, 0x74, 0x6f, 0x64, 0x6f, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x6f,
	0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x09, 0x74, 0x6f, 0x64, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x65, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x11, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5c, 0x0a, 0x10, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x66, 0x6f, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x58, 0x0a, 0x0e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x58, 0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0d,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x58, 0x0a,
	0x0e, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x6b, 0x0a, 0x15, 0x72, 0x69, 0x73, 0x6b, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x41, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52,
	0x13, 0x72, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x6b, 0x0a, 0x15, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x69, 0x74,
	0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x69, 0x74, 0x69, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x13, 0x72, 0x69,
	0x73, 0x6b, 0x4d, 0x69, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x5b, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72,
	0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x83, 0x03, 0x0a, 0x0e, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0,
	0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x43, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x65, 0x78, 0x74, 0x22,
	0xeb, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4a, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x08, 0x54, 0x6f,
	0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x88, 0x27,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa9, 0x02,
	0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x5a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a,
	0xb7, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x48, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0xc2, 0x05, 0x0a, 0x0e, 0x49, 0x6e,
	0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x54, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0xd9, 0x04, 0x0a, 0x0d, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0xac, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x75,
	0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x1a, 0x63, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xac, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x22, 0xfd,
	0x01, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x52, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x97, 0x01, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xeb,
	0x02, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x52, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x85, 0x02, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x47, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6a, 0x6f, 0x62, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x66, 0x48,
	0x00, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x42, 0x0f, 0x0a, 0x08, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x8b, 0x02, 0x0a,
	0x0d, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4a,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xad, 0x01, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xd0, 0x02, 0x0a, 0x13, 0x52,
	0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x50, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0xe6, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a,
	0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x69, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x69, 0x73, 0x6b, 0x12, 0x27, 0x0a, 0x0f,
	0x68, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x6c, 0x69, 0x68, 0x6f, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x6b, 0x65, 0x6c,
	0x69, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61,
	0x72, 0x6d, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x69, 0x73, 0x6b, 0x22, 0xf2, 0x02,
	0x0a, 0x13, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x69, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x50, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x69, 0x74, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x88, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x59, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x69, 0x74, 0x65,
	0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x69, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x69, 0x73, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x69,
	0x73, 0x6b, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x69, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6d, 0x69, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x69,
	0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x75,
	0x61, 0x6c, 0x52, 0x69, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x22, 0xfb, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x9b, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x59, 0x0a, 0x0f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x75, 0x6c, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x22, 0xfd, 0x07, 0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6d, 0x62, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6d, 0x62, 0x61, 0x72, 0x67, 0x6f, 0x12, 0x6b, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x78, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0xaf, 0x01, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x1a, 0x56, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x1a, 0x8c, 0x01, 0x0a, 0x14,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x5e, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x64, 0x0a, 0x16, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xf3, 0x05, 0x0a, 0x04, 0x52, 0x6f, 0x70, 0x61, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x57, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x2e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f,
	0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x1a, 0xd3, 0x03, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6b, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x2e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x17, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f,
	0x70, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x72, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x1a, 0x75, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x1a, 0x41, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x9d, 0x16, 0x0a, 0x09, 0x52, 0x6f, 0x70, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73,
	0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x65, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x09, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x2f, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb3, 0x0a, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0c, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x64, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x5e, 0x0a,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5c, 0x0a,
	0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x60, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x14, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x5f, 0x62, 0x61, 0x73, 0x69, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a,
	0x64, 0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x64, 0x61, 0x74, 0x61,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x3b, 0x0a, 0x1a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x64, 0x61, 0x74, 0x61, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x77, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x73, 0x74, 0x72, 0x6d,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x41, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x81, 0x02, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x66, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x4a, 0x0a, 0x0a,
	0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x65, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x09, 0x6b,
	0x65, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x47, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74,
	0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f,
	0x62, 0x12, 0x16, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x66,
	0x1a, 0x1f, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0xc9, 0x05, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01,
	0xb0, 0x01, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x70, 0x0a,
	0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0d, 0x66, 0x69, 0x78, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x8d, 0x01, 0x0a, 0x19, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x73, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52, 0x16, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12,
	0xa2, 0x01, 0x0a, 0x20, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x73, 0x74, 0x72,
	0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f,
	0x70, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x49, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x1d, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x49, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x1a, 0x46, 0x0a, 0x0d, 0x46, 0x69, 0x78, 0x65, 0x64, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3a, 0x0a, 0x16,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x73, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x56, 0x0a, 0x1d, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x49, 0x73, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0b, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x85, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x4b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4d, 0x0a, 0x0c, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x52, 0x45, 0x41, 0x43, 0x48, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x48, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x42, 0x73,
	0x0a, 0x23, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d,
	0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescOnce sync.Once
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescData = file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDesc
)

func file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescGZIP() []byte {
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescOnce.Do(func() {
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescData = protoimpl.X.CompressGZIP(file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescData)
	})
	return file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDescData
}

var file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_goTypes = []interface{}{
	(InfoAssetItems_InfoAssetItem_State)(0),                       // 0: strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.State
	(Incident_IncidentType)(0),                                    // 1: strmprivacy.api.entities.v1alpha.Incident.IncidentType
	(*ProjectPlan)(nil),                                           // 2: strmprivacy.api.entities.v1alpha.ProjectPlan
	(*ItemGroup)(nil),                                             // 3: strmprivacy.api.entities.v1alpha.ItemGroup
	(*ItemProperties)(nil),                                        // 4: strmprivacy.api.entities.v1alpha.ItemProperties
	(*TodoItems)(nil),                                             // 5: strmprivacy.api.entities.v1alpha.TodoItems
	(*DataContractItems)(nil),                                     // 6: strmprivacy.api.entities.v1alpha.DataContractItems
	(*InfoAssetItems)(nil),                                        // 7: strmprivacy.api.entities.v1alpha.InfoAssetItems
	(*DocumentItems)(nil),                                         // 8: strmprivacy.api.entities.v1alpha.DocumentItems
	(*PipelineItems)(nil),                                         // 9: strmprivacy.api.entities.v1alpha.PipelineItems
	(*FreeformItems)(nil),                                         // 10: strmprivacy.api.entities.v1alpha.FreeformItems
	(*RiskAssessmentItems)(nil),                                   // 11: strmprivacy.api.entities.v1alpha.RiskAssessmentItems
	(*RiskMitigationItems)(nil),                                   // 12: strmprivacy.api.entities.v1alpha.RiskMitigationItems
	(*RecordingItems)(nil),                                        // 13: strmprivacy.api.entities.v1alpha.RecordingItems
	(*InfoAsset)(nil),                                             // 14: strmprivacy.api.entities.v1alpha.InfoAsset
	(*Ropa)(nil),                                                  // 15: strmprivacy.api.entities.v1alpha.Ropa
	(*RopaEntry)(nil),                                             // 16: strmprivacy.api.entities.v1alpha.RopaEntry
	(*Incident)(nil),                                              // 17: strmprivacy.api.entities.v1alpha.Incident
	(*TodoItems_TodoItem)(nil),                                    // 18: strmprivacy.api.entities.v1alpha.TodoItems.TodoItem
	(*DataContractItems_DataContractItem)(nil),                    // 19: strmprivacy.api.entities.v1alpha.DataContractItems.DataContractItem
	(*InfoAssetItems_InfoAssetItem)(nil),                          // 20: strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem
	(*InfoAssetItems_InfoAssetItem_Classification)(nil),           // 21: strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.Classification
	(*DocumentItems_DocumentItem)(nil),                            // 22: strmprivacy.api.entities.v1alpha.DocumentItems.DocumentItem
	(*PipelineItems_PipelineItem)(nil),                            // 23: strmprivacy.api.entities.v1alpha.PipelineItems.PipelineItem
	(*FreeformItems_Item)(nil),                                    // 24: strmprivacy.api.entities.v1alpha.FreeformItems.Item
	(*RiskAssessmentItems_Item)(nil),                              // 25: strmprivacy.api.entities.v1alpha.RiskAssessmentItems.Item
	(*RiskMitigationItems_Item)(nil),                              // 26: strmprivacy.api.entities.v1alpha.RiskMitigationItems.Item
	(*RecordingItems_Item)(nil),                                   // 27: strmprivacy.api.entities.v1alpha.RecordingItems.Item
	(*InfoAsset_Section)(nil),                                     // 28: strmprivacy.api.entities.v1alpha.InfoAsset.Section
	(*InfoAsset_SubSection)(nil),                                  // 29: strmprivacy.api.entities.v1alpha.InfoAsset.SubSection
	(*InfoAsset_Check)(nil),                                       // 30: strmprivacy.api.entities.v1alpha.InfoAsset.Check
	(*InfoAsset_BusinessImpactRating)(nil),                        // 31: strmprivacy.api.entities.v1alpha.InfoAsset.BusinessImpactRating
	(*InfoAsset_BusinessImpactCategory)(nil),                      // 32: strmprivacy.api.entities.v1alpha.InfoAsset.BusinessImpactCategory
	(*Ropa_Organization)(nil),                                     // 33: strmprivacy.api.entities.v1alpha.Ropa.Organization
	(*Ropa_Organization_ContactDetails)(nil),                      // 34: strmprivacy.api.entities.v1alpha.Ropa.Organization.ContactDetails
	(*Ropa_Organization_DataProtectionOfficer)(nil),               // 35: strmprivacy.api.entities.v1alpha.Ropa.Organization.DataProtectionOfficer
	(*RopaEntry_ManualEntry)(nil),                                 // 36: strmprivacy.api.entities.v1alpha.RopaEntry.ManualEntry
	(*RopaEntry_AutomatedEntry)(nil),                              // 37: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry
	(*RopaEntry_DataAsset)(nil),                                   // 38: strmprivacy.api.entities.v1alpha.RopaEntry.DataAsset
	(*RopaEntry_DataActor)(nil),                                   // 39: strmprivacy.api.entities.v1alpha.RopaEntry.DataActor
	(*RopaEntry_DataRetention)(nil),                               // 40: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention
	nil,                                                           // 41: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.AdditionalInfoEntry
	(*RopaEntry_DataRetention_FixedDuration)(nil),                 // 42: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.FixedDuration
	(*RopaEntry_DataRetention_UntilProcessIsFinished)(nil),        // 43: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.UntilProcessIsFinished
	(*RopaEntry_DataRetention_UntilRelationshipIsTerminated)(nil), // 44: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.UntilRelationshipIsTerminated
	(*v1.User)(nil),                                               // 45: strmprivacy.api.entities.v1.User
	(*timestamppb.Timestamp)(nil),                                 // 46: google.protobuf.Timestamp
	(*v1.DataContractRef)(nil),                                    // 47: strmprivacy.api.entities.v1.DataContractRef
	(*v1.StreamRef)(nil),                                          // 48: strmprivacy.api.entities.v1.StreamRef
	(*v1.BatchJobRef)(nil),                                        // 49: strmprivacy.api.entities.v1.BatchJobRef
	(*v1.KeyStreamRef)(nil),                                       // 50: strmprivacy.api.entities.v1.KeyStreamRef
	(*durationpb.Duration)(nil),                                   // 51: google.protobuf.Duration
}
var file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_depIdxs = []int32{
	3,  // 0: strmprivacy.api.entities.v1alpha.ProjectPlan.item_groups:type_name -> strmprivacy.api.entities.v1alpha.ItemGroup
	45, // 1: strmprivacy.api.entities.v1alpha.ProjectPlan.users:type_name -> strmprivacy.api.entities.v1.User
	5,  // 2: strmprivacy.api.entities.v1alpha.ItemGroup.todo_items:type_name -> strmprivacy.api.entities.v1alpha.TodoItems
	6,  // 3: strmprivacy.api.entities.v1alpha.ItemGroup.data_contract_items:type_name -> strmprivacy.api.entities.v1alpha.DataContractItems
	7,  // 4: strmprivacy.api.entities.v1alpha.ItemGroup.info_asset_items:type_name -> strmprivacy.api.entities.v1alpha.InfoAssetItems
	8,  // 5: strmprivacy.api.entities.v1alpha.ItemGroup.document_items:type_name -> strmprivacy.api.entities.v1alpha.DocumentItems
	9,  // 6: strmprivacy.api.entities.v1alpha.ItemGroup.pipeline_items:type_name -> strmprivacy.api.entities.v1alpha.PipelineItems
	10, // 7: strmprivacy.api.entities.v1alpha.ItemGroup.freeform_items:type_name -> strmprivacy.api.entities.v1alpha.FreeformItems
	11, // 8: strmprivacy.api.entities.v1alpha.ItemGroup.risk_assessment_items:type_name -> strmprivacy.api.entities.v1alpha.RiskAssessmentItems
	12, // 9: strmprivacy.api.entities.v1alpha.ItemGroup.risk_mitigation_items:type_name -> strmprivacy.api.entities.v1alpha.RiskMitigationItems
	13, // 10: strmprivacy.api.entities.v1alpha.ItemGroup.recording_items:type_name -> strmprivacy.api.entities.v1alpha.RecordingItems
	46, // 11: strmprivacy.api.entities.v1alpha.ItemProperties.creation_time:type_name -> google.protobuf.Timestamp
	46, // 12: strmprivacy.api.entities.v1alpha.ItemProperties.due_time:type_name -> google.protobuf.Timestamp
	46, // 13: strmprivacy.api.entities.v1alpha.ItemProperties.completion_time:type_name -> google.protobuf.Timestamp
	45, // 14: strmprivacy.api.entities.v1alpha.ItemProperties.creator:type_name -> strmprivacy.api.entities.v1.User
	45, // 15: strmprivacy.api.entities.v1alpha.ItemProperties.assignee:type_name -> strmprivacy.api.entities.v1.User
	18, // 16: strmprivacy.api.entities.v1alpha.TodoItems.items:type_name -> strmprivacy.api.entities.v1alpha.TodoItems.TodoItem
	19, // 17: strmprivacy.api.entities.v1alpha.DataContractItems.items:type_name -> strmprivacy.api.entities.v1alpha.DataContractItems.DataContractItem
	20, // 18: strmprivacy.api.entities.v1alpha.InfoAssetItems.items:type_name -> strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem
	22, // 19: strmprivacy.api.entities.v1alpha.DocumentItems.items:type_name -> strmprivacy.api.entities.v1alpha.DocumentItems.DocumentItem
	23, // 20: strmprivacy.api.entities.v1alpha.PipelineItems.items:type_name -> strmprivacy.api.entities.v1alpha.PipelineItems.PipelineItem
	24, // 21: strmprivacy.api.entities.v1alpha.FreeformItems.items:type_name -> strmprivacy.api.entities.v1alpha.FreeformItems.Item
	25, // 22: strmprivacy.api.entities.v1alpha.RiskAssessmentItems.items:type_name -> strmprivacy.api.entities.v1alpha.RiskAssessmentItems.Item
	26, // 23: strmprivacy.api.entities.v1alpha.RiskMitigationItems.items:type_name -> strmprivacy.api.entities.v1alpha.RiskMitigationItems.Item
	27, // 24: strmprivacy.api.entities.v1alpha.RecordingItems.items:type_name -> strmprivacy.api.entities.v1alpha.RecordingItems.Item
	31, // 25: strmprivacy.api.entities.v1alpha.InfoAsset.business_impacts:type_name -> strmprivacy.api.entities.v1alpha.InfoAsset.BusinessImpactRating
	28, // 26: strmprivacy.api.entities.v1alpha.InfoAsset.sections:type_name -> strmprivacy.api.entities.v1alpha.InfoAsset.Section
	46, // 27: strmprivacy.api.entities.v1alpha.Ropa.create_time:type_name -> google.protobuf.Timestamp
	33, // 28: strmprivacy.api.entities.v1alpha.Ropa.organization:type_name -> strmprivacy.api.entities.v1alpha.Ropa.Organization
	16, // 29: strmprivacy.api.entities.v1alpha.Ropa.entries:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry
	46, // 30: strmprivacy.api.entities.v1alpha.RopaEntry.create_time:type_name -> google.protobuf.Timestamp
	45, // 31: strmprivacy.api.entities.v1alpha.RopaEntry.author:type_name -> strmprivacy.api.entities.v1.User
	36, // 32: strmprivacy.api.entities.v1alpha.RopaEntry.manual_entry:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.ManualEntry
	37, // 33: strmprivacy.api.entities.v1alpha.RopaEntry.automated_entry:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry
	17, // 34: strmprivacy.api.entities.v1alpha.RopaEntry.incidents:type_name -> strmprivacy.api.entities.v1alpha.Incident
	46, // 35: strmprivacy.api.entities.v1alpha.Incident.create_time:type_name -> google.protobuf.Timestamp
	1,  // 36: strmprivacy.api.entities.v1alpha.Incident.type:type_name -> strmprivacy.api.entities.v1alpha.Incident.IncidentType
	4,  // 37: strmprivacy.api.entities.v1alpha.TodoItems.TodoItem.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	4,  // 38: strmprivacy.api.entities.v1alpha.DataContractItems.DataContractItem.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	47, // 39: strmprivacy.api.entities.v1alpha.DataContractItems.DataContractItem.ref:type_name -> strmprivacy.api.entities.v1.DataContractRef
	4,  // 40: strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	0,  // 41: strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.state:type_name -> strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.State
	21, // 42: strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.classification:type_name -> strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.Classification
	14, // 43: strmprivacy.api.entities.v1alpha.InfoAssetItems.InfoAssetItem.info_asset:type_name -> strmprivacy.api.entities.v1alpha.InfoAsset
	4,  // 44: strmprivacy.api.entities.v1alpha.DocumentItems.DocumentItem.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	4,  // 45: strmprivacy.api.entities.v1alpha.PipelineItems.PipelineItem.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	48, // 46: strmprivacy.api.entities.v1alpha.PipelineItems.PipelineItem.stream:type_name -> strmprivacy.api.entities.v1.StreamRef
	49, // 47: strmprivacy.api.entities.v1alpha.PipelineItems.PipelineItem.batch_job:type_name -> strmprivacy.api.entities.v1.BatchJobRef
	4,  // 48: strmprivacy.api.entities.v1alpha.FreeformItems.Item.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	4,  // 49: strmprivacy.api.entities.v1alpha.RiskAssessmentItems.Item.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	4,  // 50: strmprivacy.api.entities.v1alpha.RiskMitigationItems.Item.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	4,  // 51: strmprivacy.api.entities.v1alpha.RecordingItems.Item.item_properties:type_name -> strmprivacy.api.entities.v1alpha.ItemProperties
	29, // 52: strmprivacy.api.entities.v1alpha.InfoAsset.Section.sub_sections:type_name -> strmprivacy.api.entities.v1alpha.InfoAsset.SubSection
	30, // 53: strmprivacy.api.entities.v1alpha.InfoAsset.SubSection.checks:type_name -> strmprivacy.api.entities.v1alpha.InfoAsset.Check
	32, // 54: strmprivacy.api.entities.v1alpha.InfoAsset.BusinessImpactRating.category:type_name -> strmprivacy.api.entities.v1alpha.InfoAsset.BusinessImpactCategory
	34, // 55: strmprivacy.api.entities.v1alpha.Ropa.Organization.contact_details:type_name -> strmprivacy.api.entities.v1alpha.Ropa.Organization.ContactDetails
	35, // 56: strmprivacy.api.entities.v1alpha.Ropa.Organization.data_protection_officer:type_name -> strmprivacy.api.entities.v1alpha.Ropa.Organization.DataProtectionOfficer
	38, // 57: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.data_sources:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataAsset
	38, // 58: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.data_destinations:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataAsset
	47, // 59: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.data_contract_reference:type_name -> strmprivacy.api.entities.v1.DataContractRef
	39, // 60: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.data_controller:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataActor
	39, // 61: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.data_processor:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataActor
	40, // 62: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.data_retention:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention
	41, // 63: strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.additional_info:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.AutomatedEntry.AdditionalInfoEntry
	48, // 64: strmprivacy.api.entities.v1alpha.RopaEntry.DataAsset.stream:type_name -> strmprivacy.api.entities.v1.StreamRef
	50, // 65: strmprivacy.api.entities.v1alpha.RopaEntry.DataAsset.key_stream:type_name -> strmprivacy.api.entities.v1.KeyStreamRef
	49, // 66: strmprivacy.api.entities.v1alpha.RopaEntry.DataAsset.batch_job:type_name -> strmprivacy.api.entities.v1.BatchJobRef
	42, // 67: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.fixed_duration:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.FixedDuration
	43, // 68: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.until_process_is_finished:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.UntilProcessIsFinished
	44, // 69: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.until_relationship_is_terminated:type_name -> strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.UntilRelationshipIsTerminated
	51, // 70: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.FixedDuration.duration:type_name -> google.protobuf.Duration
	51, // 71: strmprivacy.api.entities.v1alpha.RopaEntry.DataRetention.UntilRelationshipIsTerminated.duration:type_name -> google.protobuf.Duration
	72, // [72:72] is the sub-list for method output_type
	72, // [72:72] is the sub-list for method input_type
	72, // [72:72] is the sub-list for extension type_name
	72, // [72:72] is the sub-list for extension extendee
	0,  // [0:72] is the sub-list for field type_name
}

func init() { file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_init() }
func file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_init() {
	if File_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TodoItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataContractItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAssetItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeformItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskAssessmentItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMitigationItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Incident); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TodoItems_TodoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataContractItems_DataContractItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAssetItems_InfoAssetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAssetItems_InfoAssetItem_Classification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentItems_DocumentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineItems_PipelineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeformItems_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskAssessmentItems_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMitigationItems_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingItems_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAsset_Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAsset_SubSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAsset_Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAsset_BusinessImpactRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAsset_BusinessImpactCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa_Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa_Organization_ContactDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ropa_Organization_DataProtectionOfficer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_ManualEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_AutomatedEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataActor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention_FixedDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention_UntilProcessIsFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RopaEntry_DataRetention_UntilRelationshipIsTerminated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ItemGroup_TodoItems)(nil),
		(*ItemGroup_DataContractItems)(nil),
		(*ItemGroup_InfoAssetItems)(nil),
		(*ItemGroup_DocumentItems)(nil),
		(*ItemGroup_PipelineItems)(nil),
		(*ItemGroup_FreeformItems)(nil),
		(*ItemGroup_RiskAssessmentItems)(nil),
		(*ItemGroup_RiskMitigationItems)(nil),
		(*ItemGroup_RecordingItems)(nil),
	}
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*RopaEntry_ManualEntry_)(nil),
		(*RopaEntry_AutomatedEntry_)(nil),
	}
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*PipelineItems_PipelineItem_Stream)(nil),
		(*PipelineItems_PipelineItem_BatchJob)(nil),
	}
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*RopaEntry_DataAsset_Stream)(nil),
		(*RopaEntry_DataAsset_KeyStream)(nil),
		(*RopaEntry_DataAsset_BatchJob)(nil),
		(*RopaEntry_DataAsset_Other)(nil),
	}
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*RopaEntry_DataRetention_FixedDuration_)(nil),
		(*RopaEntry_DataRetention_UntilProcessIsFinished_)(nil),
		(*RopaEntry_DataRetention_UntilRelationshipIsTerminated_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_goTypes,
		DependencyIndexes: file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_depIdxs,
		EnumInfos:         file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_enumTypes,
		MessageInfos:      file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_msgTypes,
	}.Build()
	File_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto = out.File
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_rawDesc = nil
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_goTypes = nil
	file_strmprivacy_api_entities_v1alpha_entities_v1alpha_proto_depIdxs = nil
}
